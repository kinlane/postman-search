[
  {
    "id": 16481477,
    "name": "postman-chrome-interceptor",
    "full_name": "postmanlabs/postman-chrome-interceptor",
    "description": "Helper extension for the Postman packaged app. Also helps send restricted headers.",
    "fork": false,
    "created_at": "2014-02-03T14:21:04Z",
    "updated_at": "2020-03-15T18:02:10Z",
    "stargazers_count": 178,
    "watchers_count": 178,
    "forks": 59,
    "watchers": 178,
    "score": 1,
    "owner_id": 10251060,
    "owner_login": "postmanlabs",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/10251060?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "help",
      "send",
      "extension",
      "package",
      "header",
      "helps",
      "restrict"
    ]
  },
  {
    "id": 62882111,
    "name": "postman-runtime",
    "full_name": "postmanlabs/postman-runtime",
    "description": null,
    "fork": false,
    "created_at": "2016-07-08T10:54:26Z",
    "updated_at": "2020-03-31T07:00:49Z",
    "stargazers_count": 79,
    "watchers_count": 79,
    "forks": 51,
    "watchers": 79,
    "score": 1,
    "owner_id": 10251060,
    "owner_login": "postmanlabs",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/10251060?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "user": "Massad",
    "repo": "gin-boilerplate",
    "pulled": "User",
    "id": 55397574,
    "name": "gin-boilerplate",
    "full_name": "Massad/gin-boilerplate",
    "description": "The fastest way to deploy a (skeleton) restful api’s with Golang - Gin Framework with a structured starter project that defaults to PostgreSQL database and Redis as the session storage.",
    "fork": false,
    "created_at": "2016-04-04T09:00:43Z",
    "updated_at": "2020-03-25T16:43:27Z",
    "forks": 65,
    "open_issues": 1,
    "watchers": 384,
    "network_count": 65,
    "subscribers_count": 17,
    "owner_id": 3076722,
    "owner_login": "Massad",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/3076722?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      "data",
      "rest",
      "database",
      "star",
      "restful",
      "start",
      "struct",
      "lang",
      "structure",
      "default",
      "storage",
      "skeleton",
      "starter",
      "fastest"
    ]
  },
  {
    "user": "ljphilp",
    "repo": "koa-restful",
    "pulled": "User",
    "id": 141794034,
    "name": "koa-restful",
    "full_name": "ljphilp/koa-restful",
    "description": "基于koa2 orm sequelize的restful框架，使用jwt认证，可以使用postman测试学习",
    "fork": false,
    "created_at": "2018-07-21T08:15:52Z",
    "updated_at": "2020-03-06T16:05:01Z",
    "forks": 11,
    "open_issues": 0,
    "watchers": 38,
    "network_count": 11,
    "subscribers_count": 5,
    "owner_id": 23145232,
    "owner_login": "ljphilp",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/23145232?v=4",
    "owner_type": "User",
    "tags": [
      "rest",
      "restful",
      "sequelize"
    ]
  },
  {
    "user": "yannickbodin",
    "repo": "EIP_Postman_Library",
    "pulled": "User",
    "id": 99006652,
    "name": "EIP_Postman_Library",
    "full_name": "yannickbodin/EIP_Postman_Library",
    "description": "Library of rest webservices call for EfficientIP SOLIDserver appliances",
    "fork": false,
    "created_at": "2017-08-01T13:52:20Z",
    "updated_at": "2018-12-05T11:41:49Z",
    "forks": 2,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 2,
    "subscribers_count": 1,
    "owner_id": 30628007,
    "owner_login": "yannickbodin",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/30628007?v=4",
    "owner_type": "User",
    "tags": [
      "rest",
      "service",
      "server",
      "call",
      "services",
      "webservice",
      "webservices",
      "rest web"
    ]
  },
  {
    "user": "nicp0nim",
    "repo": "rest-api",
    "pulled": "User",
    "id": 201084600,
    "name": "rest-api",
    "full_name": "nicp0nim/rest-api",
    "description": "Laravel restfull api boilerplate",
    "fork": false,
    "created_at": "2019-08-07T16:10:25Z",
    "updated_at": "2020-03-09T01:13:50Z",
    "forks": 22,
    "open_issues": 4,
    "watchers": 42,
    "network_count": 22,
    "subscribers_count": 7,
    "owner_id": 19174577,
    "owner_login": "nicp0nim",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/19174577?v=4",
    "owner_type": "User",
    "tags": [
      "rest",
      "full",
      "plate",
      "restful",
      "boiler",
      "boilerplate",
      "restfull"
    ]
  },
  {
    "user": "hellosix",
    "repo": "postman-plus",
    "pulled": "Organization",
    "id": 143018761,
    "name": "postman-plus",
    "full_name": "hellosix/postman-plus",
    "description": "网页版postman,可以分组管理restful接口，部署到跳板机就可以在本地访问线上接口了",
    "fork": false,
    "created_at": "2018-07-31T13:34:23Z",
    "updated_at": "2019-09-17T05:30:12Z",
    "forks": 0,
    "open_issues": 0,
    "watchers": 5,
    "network_count": 0,
    "subscribers_count": 1,
    "owner_id": 41536228,
    "owner_login": "hellosix",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/41536228?v=4",
    "owner_type": "Organization",
    "tags": [
      "rest",
      "restful"
    ]
  },
  {
    "user": "lkkushan101",
    "repo": "Node_Postman",
    "pulled": "User",
    "id": 137139268,
    "name": "Node_Postman",
    "full_name": "lkkushan101/Node_Postman",
    "description": null,
    "fork": false,
    "created_at": "2018-06-12T23:44:11Z",
    "updated_at": "2018-06-13T04:28:31Z",
    "forks": 2,
    "open_issues": 0,
    "watchers": 1,
    "network_count": 2,
    "subscribers_count": 1,
    "owner_id": 35223257,
    "owner_login": "lkkushan101",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/35223257?v=4",
    "owner_type": "User",
    "tags": []
  },
  {
    "user": "abroz",
    "repo": "lunch-picker",
    "pulled": "User",
    "id": 96658138,
    "name": "lunch-picker",
    "full_name": "abroz/lunch-picker",
    "description": "Lunch Picker is a Postman collection that acts as a restaurant discovery service, powered by the Yelp Fusion API.",
    "fork": false,
    "created_at": "2017-07-09T03:12:04Z",
    "updated_at": "2018-08-27T19:33:39Z",
    "forks": 0,
    "open_issues": 0,
    "watchers": 7,
    "network_count": 0,
    "subscribers_count": 2,
    "owner_id": 3943505,
    "owner_login": "abroz",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/3943505?v=4",
    "owner_type": "User",
    "tags": [
      "collect",
      "collection",
      "rest",
      "service",
      "very",
      "were",
      "powered",
      "restaurant",
      "discovery"
    ]
  },
  {
    "id": 143018761,
    "name": "postman-plus",
    "full_name": "hellosix/postman-plus",
    "description": "网页版postman,可以分组管理restful接口，部署到跳板机就可以在本地访问线上接口了",
    "fork": false,
    "created_at": "2018-07-31T13:34:23Z",
    "updated_at": "2019-09-17T05:30:12Z",
    "stargazers_count": 5,
    "watchers_count": 5,
    "forks": 0,
    "watchers": 5,
    "score": 1,
    "owner_id": 41536228,
    "owner_login": "hellosix",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/41536228?v=4",
    "tags": [
      "rest",
      "restful"
    ]
  },
  {
    "id": 119859124,
    "name": "postman-plus",
    "full_name": "linzhouzhi/postman-plus",
    "description": "网页版postman,可以分组管理restful接口，部署到跳板机就可以在本地访问线上接口了",
    "fork": false,
    "created_at": "2018-02-01T16:04:15Z",
    "updated_at": "2018-07-13T10:20:36Z",
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks": 1,
    "watchers": 4,
    "score": 1,
    "owner_id": 8891897,
    "owner_login": "linzhouzhi",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/8891897?v=4",
    "tags": [
      "rest",
      "restful"
    ]
  },
  {
    "id": 96658138,
    "name": "lunch-picker",
    "full_name": "abroz/lunch-picker",
    "description": "Lunch Picker is a Postman collection that acts as a restaurant discovery service, powered by the Yelp Fusion API.",
    "fork": false,
    "created_at": "2017-07-09T03:12:04Z",
    "updated_at": "2018-08-27T19:33:39Z",
    "stargazers_count": 7,
    "watchers_count": 7,
    "forks": 0,
    "watchers": 7,
    "score": 1,
    "owner_id": 3943505,
    "owner_login": "abroz",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/3943505?v=4",
    "tags": [
      "collect",
      "collection",
      "rest",
      "service",
      "very",
      "were",
      "powered",
      "restaurant",
      "discovery"
    ]
  },
  {
    "id": 114741206,
    "name": "postman_lightning_talk",
    "full_name": "ZeusPerez/postman_lightning_talk",
    "description": null,
    "fork": false,
    "created_at": "2017-12-19T08:48:31Z",
    "updated_at": "2017-12-21T08:50:27Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 11160447,
    "owner_login": "ZeusPerez",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/11160447?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 240788242,
    "name": "nito-rest-client",
    "full_name": "adhenrique/nito-rest-client",
    "description": "A simple web rest client, like Postman",
    "fork": false,
    "created_at": "2020-02-15T21:10:07Z",
    "updated_at": "2020-02-15T21:11:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11527271,
    "owner_login": "adhenrique",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/11527271?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "client"
    ]
  },
  {
    "id": 60695136,
    "name": "DouQing-express-json-postman",
    "full_name": "Alloy-Girls/DouQing-express-json-postman",
    "description": null,
    "fork": false,
    "created_at": "2016-06-08T12:10:28Z",
    "updated_at": "2016-06-25T05:33:10Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 19777946,
    "owner_login": "Alloy-Girls",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/19777946?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 171282980,
    "name": "Pengumpulan-CRUD-nodejs-API-postman-",
    "full_name": "salmasalsabila/Pengumpulan-CRUD-nodejs-API-postman-",
    "description": null,
    "fork": false,
    "created_at": "2019-02-18T12:47:05Z",
    "updated_at": "2019-02-18T13:23:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42332024,
    "owner_login": "salmasalsabila",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/42332024?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 159339215,
    "name": "RESTful-using-nodejs-in-postman",
    "full_name": "AnishaMohandass/RESTful-using-nodejs-in-postman",
    "description": null,
    "fork": false,
    "created_at": "2018-11-27T13:25:12Z",
    "updated_at": "2018-11-27T13:27:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42888835,
    "owner_login": "AnishaMohandass",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/42888835?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 193868090,
    "name": "postman-collection-property-list-benchmark",
    "full_name": "coditva/postman-collection-property-list-benchmark",
    "description": null,
    "fork": false,
    "created_at": "2019-06-26T08:57:52Z",
    "updated_at": "2019-07-15T11:06:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 8445768,
    "owner_login": "coditva",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/8445768?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 203126497,
    "name": "git-rest-api",
    "full_name": "jhrodrigu/git-rest-api",
    "description": "Como consumir servicios rest api, con Json y desde postman",
    "fork": false,
    "created_at": "2019-08-19T08:01:58Z",
    "updated_at": "2019-08-19T08:10:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30789399,
    "owner_login": "jhrodrigu",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30789399?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "rest api",
      "desde",
      "servicio",
      "consumir"
    ]
  },
  {
    "id": 211705852,
    "name": "authentication-in-node-js",
    "full_name": "siddharth151199/authentication-in-node-js",
    "description": "use postman or rest client package in editor",
    "fork": false,
    "created_at": "2019-09-29T18:15:35Z",
    "updated_at": "2019-09-29T18:18:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47297731,
    "owner_login": "siddharth151199",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/47297731?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "client",
      "package",
      "edit",
      "editor"
    ]
  },
  {
    "id": 61071496,
    "name": "rest-client-simple-ui",
    "full_name": "Kaylleur/rest-client-simple-ui",
    "description": "simple ui for a rest client like postman",
    "fork": false,
    "created_at": "2016-06-13T21:38:22Z",
    "updated_at": "2016-06-13T21:54:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5547158,
    "owner_login": "Kaylleur",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/5547158?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "client"
    ]
  },
  {
    "id": 237898578,
    "name": "node-restapi-express-automobiles",
    "full_name": "CaptainStorm21/node-restapi-express-automobiles",
    "description": "creating restful API from scratch using node/mongodb/express postman",
    "fork": false,
    "created_at": "2020-02-03T06:19:04Z",
    "updated_at": "2020-02-03T09:06:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 19989141,
    "owner_login": "CaptainStorm21",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/19989141?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "node",
      "express",
      "mongo",
      "restful",
      "creating",
      "mongod",
      "mongodb",
      "scratch"
    ]
  },
  {
    "id": 112856122,
    "name": "node-crud-rest",
    "full_name": "vitorverasm/node-crud-rest",
    "description": "A simlpe restful NodeJS crud, with expressJS and mongoDB.",
    "fork": false,
    "created_at": "2017-12-02T16:05:52Z",
    "updated_at": "2017-12-04T14:02:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 5,
    "watchers": 0,
    "score": 1,
    "owner_id": 20798819,
    "owner_login": "vitorverasm",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/20798819?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "express",
      "mongo",
      " express",
      "restful",
      "crud",
      "simlpe"
    ]
  },
  {
    "id": 138978321,
    "name": "restapi-shopdb",
    "full_name": "nishthagoel99/restapi-shopdb",
    "description": "A rest api made for users signup,login and to order products and then later see their products. MongoDB database is used!",
    "fork": false,
    "created_at": "2018-06-28T06:52:39Z",
    "updated_at": "2018-06-28T06:54:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31266528,
    "owner_login": "nishthagoel99",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/31266528?v=4",
    "pulled": 1,
    "tags": [
      "data",
      "rest",
      "database",
      "user",
      "sign",
      "users",
      "rest api",
      "product",
      "login",
      "order",
      "products",
      "signup"
    ]
  },
  {
    "id": 200523340,
    "name": "Rest-Api-TSF_NoobCoder",
    "full_name": "Mardiv-18/Rest-Api-TSF_NoobCoder",
    "description": "Task of building rest api with java, spring boot -mvc-hibernate , jpa, mysql, postman",
    "fork": false,
    "created_at": "2019-08-04T17:41:05Z",
    "updated_at": "2020-01-26T13:03:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32873264,
    "owner_login": "Mardiv-18",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/32873264?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "build",
      "java",
      "boot",
      "spring",
      "rest api",
      "mysql",
      "building",
      "spring boot",
      "hibernate"
    ]
  },
  {
    "id": 51945769,
    "name": "vocabRestful",
    "full_name": "kassergey/vocabRestful",
    "description": "vocabulary without words, restful app, MEAN(mongodb, express.js, angular.js, node.js), curl, postman",
    "fork": false,
    "created_at": "2016-02-17T18:37:04Z",
    "updated_at": "2016-02-17T19:24:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 13509099,
    "owner_login": "kassergey",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/13509099?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "node",
      "express",
      "mongo",
      " express",
      "restful",
      "mongod",
      "mongodb",
      "curl",
      "angular",
      "words",
      "vocabulary"
    ]
  },
  {
    "id": 141794034,
    "name": "koa-restful",
    "full_name": "ljphilp/koa-restful",
    "description": "基于koa2 orm sequelize的restful框架，使用jwt认证，可以使用postman测试学习",
    "fork": false,
    "created_at": "2018-07-21T08:15:52Z",
    "updated_at": "2020-03-06T16:05:01Z",
    "stargazers_count": 38,
    "watchers_count": 38,
    "forks": 11,
    "watchers": 38,
    "score": 1,
    "owner_id": 23145232,
    "owner_login": "ljphilp",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/23145232?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "restful",
      "sequelize"
    ]
  },
  {
    "id": 201084600,
    "name": "rest-api",
    "full_name": "nicp0nim/rest-api",
    "description": "Laravel restfull api boilerplate",
    "fork": false,
    "created_at": "2019-08-07T16:10:25Z",
    "updated_at": "2020-03-09T01:13:50Z",
    "stargazers_count": 42,
    "watchers_count": 42,
    "forks": 22,
    "watchers": 42,
    "score": 1,
    "owner_id": 19174577,
    "owner_login": "nicp0nim",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/19174577?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "full",
      "plate",
      "restful",
      "boiler",
      "boilerplate",
      "restfull"
    ]
  },
  {
    "id": 192199759,
    "name": "grpc-test",
    "full_name": "rishabhcha/grpc-test",
    "description": "Test your Grpc service as easy as a rest endpoint with your favorite API tool like Postman or Swagger.",
    "fork": false,
    "created_at": "2019-06-16T14:20:19Z",
    "updated_at": "2019-08-05T21:04:30Z",
    "stargazers_count": 6,
    "watchers_count": 6,
    "forks": 0,
    "watchers": 6,
    "score": 1,
    "owner_id": 22080789,
    "owner_login": "rishabhcha",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/22080789?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "service",
      "tool",
      "endpoint",
      "favorite"
    ]
  },
  {
    "id": 65580187,
    "name": "NodePostman",
    "full_name": "ansh2107/NodePostman",
    "description": null,
    "fork": false,
    "created_at": "2016-08-12T20:00:40Z",
    "updated_at": "2016-08-12T20:01:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13527778,
    "owner_login": "ansh2107",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/13527778?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 90534424,
    "name": "postman-sample",
    "full_name": "iamsiddhant05/postman-sample",
    "description": null,
    "fork": false,
    "created_at": "2017-05-07T13:27:25Z",
    "updated_at": "2017-05-07T13:32:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6564303,
    "owner_login": "iamsiddhant05",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/6564303?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 138811699,
    "name": "restfulTaskApi",
    "full_name": "Gwickstrom/restfulTaskApi",
    "description": "restfulTaskAPI using POSTMAN desktop app. ",
    "fork": false,
    "created_at": "2018-06-27T01:07:48Z",
    "updated_at": "2018-06-27T01:09:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 23506698,
    "owner_login": "Gwickstrom",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/23506698?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "restful",
      "desktop"
    ]
  },
  {
    "id": 124165906,
    "name": "postman-collection-generator",
    "full_name": "layoutzweb/postman-collection-generator",
    "description": "Generate a collection from your middleware based api backend (express, restify, koa...)",
    "fork": false,
    "created_at": "2018-03-07T02:17:42Z",
    "updated_at": "2018-04-22T17:09:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1878432,
    "owner_login": "layoutzweb",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1878432?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "rest",
      "based",
      "express",
      "backend",
      "middleware"
    ]
  },
  {
    "id": 126221594,
    "name": "exemplo-artigo-postman",
    "full_name": "BrunaEscudelario/exemplo-artigo-postman",
    "description": null,
    "fork": false,
    "created_at": "2018-03-21T18:11:26Z",
    "updated_at": "2018-03-21T18:19:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 28552187,
    "owner_login": "BrunaEscudelario",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/28552187?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 195949937,
    "name": "postman-patch-asar-ssh",
    "full_name": "jerowang/postman-patch-asar-ssh",
    "description": null,
    "fork": false,
    "created_at": "2019-07-09T06:51:41Z",
    "updated_at": "2019-07-17T02:36:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16468982,
    "owner_login": "jerowang",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/16468982?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 139853031,
    "name": "REST_APIS",
    "full_name": "Kahoza/REST_APIS",
    "description": "rest apis to be test with Postman ",
    "fork": false,
    "created_at": "2018-07-05T13:23:46Z",
    "updated_at": "2019-01-25T13:26:28Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 31520524,
    "owner_login": "Kahoza",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/31520524?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "rest",
      "rest api"
    ]
  },
  {
    "id": 131221156,
    "name": "postman_rest_api_test_automation",
    "full_name": "DanSchon/postman_rest_api_test_automation",
    "description": "built an automated end to end rest api test collection",
    "fork": false,
    "created_at": "2018-04-26T23:31:21Z",
    "updated_at": "2018-04-26T23:33:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 13282339,
    "owner_login": "DanSchon",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/13282339?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "rest",
      "auto",
      "automat",
      "built",
      "automate",
      "rest api",
      "automated",
      "end to end"
    ]
  },
  {
    "id": 201767628,
    "name": "projeto_WebService_API_Postman",
    "full_name": "marianamunizlima/projeto_WebService_API_Postman",
    "description": null,
    "fork": false,
    "created_at": "2019-08-11T13:23:04Z",
    "updated_at": "2019-08-11T13:55:21Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 12008835,
    "owner_login": "marianamunizlima",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/12008835?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 224982236,
    "name": "springboot_postman",
    "full_name": "lovepli/springboot_postman",
    "description": "使用postman测试rest_API接口",
    "fork": false,
    "created_at": "2019-11-30T08:28:23Z",
    "updated_at": "2019-12-02T02:49:09Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40480611,
    "owner_login": "lovepli",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/40480611?v=4",
    "pulled": 1,
    "tags": [
      "rest"
    ]
  },
  {
    "id": 210323625,
    "name": "Rest-API-Random-Forest",
    "full_name": "dzvlfi/Rest-API-Random-Forest",
    "description": "REST-API for credit scoring with random forest classifier",
    "fork": false,
    "created_at": "2019-09-23T10:06:35Z",
    "updated_at": "2019-09-23T16:44:59Z",
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks": 1,
    "watchers": 4,
    "score": 1,
    "owner_id": 15355027,
    "owner_login": "dzvlfi",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/15355027?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "class",
      "edit",
      "random",
      "credit"
    ]
  },
  {
    "id": 244248769,
    "name": "PostmanAPITests",
    "full_name": "joshuabennett96/PostmanAPITests",
    "description": null,
    "fork": false,
    "created_at": "2020-03-02T00:47:53Z",
    "updated_at": "2020-03-02T03:16:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41574165,
    "owner_login": "joshuabennett96",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/41574165?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 89446883,
    "name": "postman",
    "full_name": "bugsgk/postman",
    "description": "postman rest apis",
    "fork": false,
    "created_at": "2017-04-26T06:38:23Z",
    "updated_at": "2020-03-29T09:13:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5374182,
    "owner_login": "bugsgk",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/5374182?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "rest api"
    ]
  },
  {
    "id": 207077869,
    "name": "PostmanDemoAPI",
    "full_name": "mhmacleod/PostmanDemoAPI",
    "description": null,
    "fork": false,
    "created_at": "2019-09-08T07:34:31Z",
    "updated_at": "2019-09-08T07:36:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16532819,
    "owner_login": "mhmacleod",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/16532819?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 190544694,
    "name": "postman",
    "full_name": "5uw1st/postman",
    "description": "Send email by restful api and Configurable",
    "fork": false,
    "created_at": "2019-06-06T08:29:05Z",
    "updated_at": "2019-06-06T08:45:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17830753,
    "owner_login": "5uw1st",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/17830753?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "mail",
      "restful",
      "email"
    ]
  },
  {
    "id": 122559543,
    "name": "postman-restful-api-exporter",
    "full_name": "ostenant/postman-restful-api-exporter",
    "description": "postman-restful-api-exporter",
    "fork": false,
    "created_at": "2018-02-23T01:50:03Z",
    "updated_at": "2018-02-24T03:30:06Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 25877643,
    "owner_login": "ostenant",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/25877643?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "export",
      "restful",
      "exporter"
    ]
  },
  {
    "id": 180067645,
    "name": "apicrud",
    "full_name": "Shobuj718/apicrud",
    "description": "Laravel rest api crud using postman",
    "fork": false,
    "created_at": "2019-04-08T04:09:10Z",
    "updated_at": "2019-04-08T05:14:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 19804482,
    "owner_login": "Shobuj718",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/19804482?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "rest api",
      "crud"
    ]
  },
  {
    "id": 45039413,
    "name": "apitest",
    "full_name": "meshboy/apitest",
    "description": "restful api using slim",
    "fork": false,
    "created_at": "2015-10-27T12:27:16Z",
    "updated_at": "2018-01-28T01:34:38Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 8211407,
    "owner_login": "meshboy",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/8211407?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "restful",
      "slim"
    ]
  },
  {
    "id": 196607386,
    "name": "REST_API_Testing_POSTMAN",
    "full_name": "qaespence/REST_API_Testing_POSTMAN",
    "description": "REST API testing using Postman for the site https://gorest.co.in",
    "fork": false,
    "created_at": "2019-07-12T15:58:08Z",
    "updated_at": "2019-08-10T03:28:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43244945,
    "owner_login": "qaespence",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/43244945?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "rest",
      "http",
      "https",
      "site"
    ]
  },
  {
    "id": 189385758,
    "name": "tadayApiPostman",
    "full_name": "qaitive/tadayApiPostman",
    "description": null,
    "fork": false,
    "created_at": "2019-05-30T09:32:24Z",
    "updated_at": "2019-05-30T09:41:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37244429,
    "owner_login": "qaitive",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/37244429?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 119211715,
    "name": "postman-hr-rest-api",
    "full_name": "wanderindev/postman-hr-rest-api",
    "description": "Collection of endpoints and environment for hr-rest-api",
    "fork": false,
    "created_at": "2018-01-27T23:34:01Z",
    "updated_at": "2019-06-23T15:43:12Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 47220482,
    "owner_login": "wanderindev",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/47220482?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "environment",
      "endpoint",
      "points",
      "endpoints"
    ]
  },
  {
    "id": 126112460,
    "name": "TSM_API_Tests_Postman",
    "full_name": "EvgenyIstomin/TSM_API_Tests_Postman",
    "description": null,
    "fork": false,
    "created_at": "2018-03-21T02:36:26Z",
    "updated_at": "2018-04-07T05:38:10Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31397359,
    "owner_login": "EvgenyIstomin",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/31397359?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 171884114,
    "name": "api_test_postman",
    "full_name": "cassie01/api_test_postman",
    "description": null,
    "fork": false,
    "created_at": "2019-02-21T14:13:17Z",
    "updated_at": "2019-02-21T14:32:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45869646,
    "owner_login": "cassie01",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/45869646?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 224109971,
    "name": "CI-API",
    "full_name": "kaijack/CI-API",
    "description": "codeigniter api test with rested/ postman",
    "fork": false,
    "created_at": "2019-11-26T05:29:59Z",
    "updated_at": "2019-11-27T04:00:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51922227,
    "owner_login": "kaijack",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/51922227?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "code",
      "codeigniter",
      "rested"
    ]
  },
  {
    "id": 179335977,
    "name": "API-testing",
    "full_name": "SimerjeetWalia/API-testing",
    "description": "Api testing using postman and restAssured",
    "fork": false,
    "created_at": "2019-04-03T17:14:52Z",
    "updated_at": "2019-04-03T18:22:50Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46979156,
    "owner_login": "SimerjeetWalia",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/46979156?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "rest"
    ]
  },
  {
    "id": 204661027,
    "name": "StockMarketPostman",
    "full_name": "kshtz25/StockMarketPostman",
    "description": "using rest api",
    "fork": false,
    "created_at": "2019-08-27T08:52:00Z",
    "updated_at": "2019-09-16T08:30:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 35677784,
    "owner_login": "kshtz25",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35677784?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "rest api"
    ]
  },
  {
    "id": 199668354,
    "name": "rest_api_teste",
    "full_name": "Joseeptessele/rest_api_teste",
    "description": "rest api com spring, testada com postman",
    "fork": false,
    "created_at": "2019-07-30T14:30:34Z",
    "updated_at": "2019-07-30T15:54:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37282140,
    "owner_login": "Joseeptessele",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/37282140?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "spring",
      "rest api",
      "tada",
      "testada"
    ]
  },
  {
    "id": 164257475,
    "name": "Postman-Personal",
    "full_name": "cprice-ping/Postman-Personal",
    "description": "Collections I'm working on - those of interest to the broader Ping Identity audience will be moved over",
    "fork": false,
    "created_at": "2019-01-05T22:52:04Z",
    "updated_at": "2019-08-16T12:08:07Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 43251598,
    "owner_login": "cprice-ping",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/43251598?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "working",
      "those",
      "entity",
      "moved"
    ]
  },
  {
    "id": 139809308,
    "name": "splunk_restapi_postman",
    "full_name": "iraging/splunk_restapi_postman",
    "description": "splunk_restapi_postman collection 7.1.1",
    "fork": false,
    "created_at": "2018-07-05T07:10:23Z",
    "updated_at": "2018-07-05T07:10:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6615769,
    "owner_login": "iraging",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/6615769?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "postman collection",
      "rest",
      "restapi"
    ]
  },
  {
    "id": 121472276,
    "name": "SpringTiaa11",
    "full_name": "abutufail/SpringTiaa11",
    "description": "fakedeo postman rest",
    "fork": false,
    "created_at": "2018-02-14T04:53:29Z",
    "updated_at": "2018-02-14T04:53:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 28397315,
    "owner_login": "abutufail",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/28397315?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "fake",
      "fakedeo"
    ]
  },
  {
    "id": 208956103,
    "name": "spring-boot-exception-handler",
    "full_name": "rahulmoundekar/spring-boot-exception-handler",
    "description": "spring-boot-exception-handler with rest controller-postman",
    "fork": false,
    "created_at": "2019-09-17T04:01:41Z",
    "updated_at": "2019-09-28T08:14:09Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 10783422,
    "owner_login": "rahulmoundekar",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/10783422?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "boot",
      "spring",
      "control",
      "handle",
      "controller",
      "handler"
    ]
  },
  {
    "id": 195227975,
    "name": "Postman_to_RestAssured",
    "full_name": "sooraj1851995/Postman_to_RestAssured",
    "description": null,
    "fork": false,
    "created_at": "2019-07-04T11:20:30Z",
    "updated_at": "2019-07-04T11:26:50Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 51817175,
    "owner_login": "sooraj1851995",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/51817175?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 65366771,
    "name": "Postman-Resttest",
    "full_name": "huangbeini/Postman-Resttest",
    "description": "好食期 postman+resttest+jenkins 接口自动化测试",
    "fork": false,
    "created_at": "2016-08-10T08:55:59Z",
    "updated_at": "2016-11-04T08:03:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15405085,
    "owner_login": "huangbeini",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/15405085?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "jenkins"
    ]
  },
  {
    "id": 142869669,
    "name": "REST-Postman",
    "full_name": "jenlouie/REST-Postman",
    "description": null,
    "fork": false,
    "created_at": "2018-07-30T12:02:13Z",
    "updated_at": "2018-07-30T16:38:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 749404,
    "owner_login": "jenlouie",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/749404?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 148762793,
    "name": "springboot-restful-postman",
    "full_name": "better-a-little/springboot-restful-postman",
    "description": "简单测试restful接口，用springboot创建项目，postman测试工具测试",
    "fork": false,
    "created_at": "2018-09-14T08:56:14Z",
    "updated_at": "2018-09-14T08:59:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40517618,
    "owner_login": "better-a-little",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/40517618?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "boot",
      "restful",
      "spring",
      "springboot"
    ]
  },
  {
    "id": 235252271,
    "name": "SpringCrmRest_postman",
    "full_name": "BolshakovDmitry/SpringCrmRest_postman",
    "description": null,
    "fork": false,
    "created_at": "2020-01-21T03:59:57Z",
    "updated_at": "2020-01-23T04:30:32Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57066424,
    "owner_login": "BolshakovDmitry",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/57066424?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 249749760,
    "name": "Spring-Boot-REST-Postman",
    "full_name": "Tunahan5299/Spring-Boot-REST-Postman",
    "description": null,
    "fork": false,
    "created_at": "2020-03-24T15:47:41Z",
    "updated_at": "2020-03-26T12:47:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43271783,
    "owner_login": "Tunahan5299",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/43271783?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 58762294,
    "name": "restconf-notification-service-postman",
    "full_name": "ryandgoulding/restconf-notification-service-postman",
    "description": null,
    "fork": false,
    "created_at": "2016-05-13T18:09:56Z",
    "updated_at": "2016-05-13T18:09:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6568423,
    "owner_login": "ryandgoulding",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/6568423?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 64883866,
    "name": "restful-web-service",
    "full_name": "hamishngcoder/restful-web-service",
    "description": "A project to Create Rest Api using postman rest client",
    "fork": false,
    "created_at": "2016-08-03T22:30:26Z",
    "updated_at": "2016-08-03T22:30:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17959100,
    "owner_login": "hamishngcoder",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/17959100?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "client"
    ]
  },
  {
    "id": 69353457,
    "name": "restcloud",
    "full_name": "chuqingq/restcloud",
    "description": "a cloud test tool for rest api, like postman",
    "fork": false,
    "created_at": "2016-09-27T12:18:02Z",
    "updated_at": "2019-02-11T14:32:49Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 2735313,
    "owner_login": "chuqingq",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/2735313?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "tool",
      "rest api",
      "cloud"
    ]
  },
  {
    "id": 165954572,
    "name": "codegym-java-RESTful-PostMAN",
    "full_name": "trunglk16/codegym-java-RESTful-PostMAN",
    "description": null,
    "fork": false,
    "created_at": "2019-01-16T01:53:46Z",
    "updated_at": "2019-01-16T01:55:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43984958,
    "owner_login": "trunglk16",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/43984958?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 207243014,
    "name": "Springboot-rest-api-taskSchedule-UsingPostmanForTest",
    "full_name": "Adel5749/Springboot-rest-api-taskSchedule-UsingPostmanForTest",
    "description": "Spring Boot rest api",
    "fork": false,
    "created_at": "2019-09-09T06:48:31Z",
    "updated_at": "2019-09-12T05:06:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 52336615,
    "owner_login": "Adel5749",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/52336615?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "rest api"
    ]
  },
  {
    "id": 169880850,
    "name": "rest-json2doc",
    "full_name": "AntonKtrue/rest-json2doc",
    "description": "Converter for postman json rest api to office document",
    "fork": false,
    "created_at": "2019-02-09T15:28:29Z",
    "updated_at": "2019-02-09T15:28:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15071640,
    "owner_login": "AntonKtrue",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/15071640?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "json",
      "document",
      "rest api",
      "office"
    ]
  },
  {
    "id": 220203174,
    "name": "New-Repo-Postman-testing-8",
    "full_name": "AntoMullen/New-Repo-Postman-testing-8",
    "description": "This is first repo tesing Git hub rest api",
    "fork": false,
    "created_at": "2019-11-07T09:49:57Z",
    "updated_at": "2019-11-07T09:49:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30256572,
    "owner_login": "AntoMullen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30256572?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "rest",
      "rest api",
      "tesing"
    ]
  },
  {
    "id": 139553219,
    "name": "Django-resting-API",
    "full_name": "mboladop/Django-resting-API",
    "description": "Building a simple resting API with DJANGO/PYTHON/Postman",
    "fork": false,
    "created_at": "2018-07-03T08:34:52Z",
    "updated_at": "2018-10-08T14:16:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31411463,
    "owner_login": "mboladop",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/31411463?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "resting"
    ]
  },
  {
    "id": 220211545,
    "name": "New-Repo-Postman-testing-11",
    "full_name": "AntoMullen/New-Repo-Postman-testing-11",
    "description": "This is first repo tesing Git hub rest api",
    "fork": false,
    "created_at": "2019-11-07T10:34:37Z",
    "updated_at": "2019-11-07T10:34:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30256572,
    "owner_login": "AntoMullen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30256572?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "rest",
      "rest api",
      "tesing"
    ]
  },
  {
    "id": 248332083,
    "name": "Restful-Booker-API-tests",
    "full_name": "agafun/Restful-Booker-API-tests",
    "description": "API tests of https://restful-booker.herokuapp.com with Postman",
    "fork": false,
    "created_at": "2020-03-18T20:09:21Z",
    "updated_at": "2020-03-25T20:36:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15617419,
    "owner_login": "agafun",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15617419?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "tests",
      "rest",
      "tests ",
      "http",
      "https",
      "restful",
      "book",
      "heroku",
      "booker"
    ]
  },
  {
    "id": 192310372,
    "name": "introduction-to-rest-api-with-postman-masudim",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-masudim",
    "description": "introduction-to-rest-api-with-postman-masudim created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-17T08:53:27Z",
    "updated_at": "2019-06-17T08:53:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 217470379,
    "name": "JAVA_Spring_Customer_Manager_RESTful_Postman",
    "full_name": "PhamNgocHau/JAVA_Spring_Customer_Manager_RESTful_Postman",
    "description": null,
    "fork": false,
    "created_at": "2019-10-25T06:54:25Z",
    "updated_at": "2019-10-25T08:05:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 50768945,
    "owner_login": "PhamNgocHau",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/50768945?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 191631195,
    "name": "introduction-to-rest-api-with-postman-japhetmesa",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-japhetmesa",
    "description": "introduction-to-rest-api-with-postman-japhetmesa created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-12T19:19:41Z",
    "updated_at": "2019-06-14T00:02:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 213896328,
    "name": "RestApi-project-with-spring-boot-and-postman",
    "full_name": "Knitish5421/RestApi-project-with-spring-boot-and-postman",
    "description": null,
    "fork": false,
    "created_at": "2019-10-09T11:09:29Z",
    "updated_at": "2019-10-09T11:10:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42267661,
    "owner_login": "Knitish5421",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/42267661?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 191592362,
    "name": "introduction-to-rest-api-with-postman-alfeyo",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-alfeyo",
    "description": "introduction-to-rest-api-with-postman-alfeyo created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-12T14:57:43Z",
    "updated_at": "2019-06-12T14:57:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 192127785,
    "name": "introduction-to-rest-api-with-postman-stctheproducer",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-stctheproducer",
    "description": "introduction-to-rest-api-with-postman-stctheproducer created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-15T22:07:26Z",
    "updated_at": "2019-06-15T22:07:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 68918204,
    "name": "Emblim-AutoTest-Rest-API-Postman",
    "full_name": "lilliancheng2012/Emblim-AutoTest-Rest-API-Postman",
    "description": null,
    "fork": false,
    "created_at": "2016-09-22T12:18:06Z",
    "updated_at": "2016-09-22T12:18:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 19264031,
    "owner_login": "lilliancheng2012",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/19264031?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 210209604,
    "name": "Automation-for-REST-API-using-POSTMAN",
    "full_name": "rajiprabhu/Automation-for-REST-API-using-POSTMAN",
    "description": null,
    "fork": false,
    "created_at": "2019-09-22T20:25:59Z",
    "updated_at": "2019-09-22T20:29:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 55035420,
    "owner_login": "rajiprabhu",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/55035420?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 72366538,
    "name": "simple-spring-api-restful",
    "full_name": "netomacedo/simple-spring-api-restful",
    "description": "Simple project showing how to use spring 4 for build API using restful concepts.",
    "fork": false,
    "created_at": "2016-10-30T18:13:50Z",
    "updated_at": "2017-02-14T00:00:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1675452,
    "owner_login": "netomacedo",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/1675452?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "build",
      "restful",
      "spring",
      "showing",
      "concept",
      "concepts"
    ]
  },
  {
    "id": 69216250,
    "name": "restful",
    "full_name": "aschambers/restful",
    "description": "creating a restful api using the node-restful library, and testing with postman.",
    "fork": false,
    "created_at": "2016-09-26T05:35:57Z",
    "updated_at": "2016-09-26T05:37:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16850576,
    "owner_login": "aschambers",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/16850576?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "rest",
      "node",
      "library",
      "restful",
      "creating"
    ]
  },
  {
    "id": 146479756,
    "name": "ReplacingPostman",
    "full_name": "fabiohenriquebayma/ReplacingPostman",
    "description": "A tool to replace CI postman tests in a CI environment.  Test are organized by stories. Can test externals rest services.",
    "fork": false,
    "created_at": "2018-08-28T17:02:37Z",
    "updated_at": "2019-11-12T20:43:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30695763,
    "owner_login": "fabiohenriquebayma",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/30695763?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "tests",
      "rest",
      "service",
      "tool",
      "tests ",
      "environment",
      "services",
      "postman tests",
      "place",
      "repl",
      "replace",
      "external",
      "rest service",
      "organized"
    ]
  },
  {
    "id": 152269678,
    "name": "Employee-Management",
    "full_name": "ab199506/Employee-Management",
    "description": "CRUD application using spring rest ,hibernate, JSON ,PostMan",
    "fork": false,
    "created_at": "2018-10-09T14:50:51Z",
    "updated_at": "2018-10-13T12:58:48Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 38178571,
    "owner_login": "ab199506",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/38178571?v=4",
    "pulled": 1,
    "tags": [
      "application",
      "rest",
      "spring",
      "hibernate"
    ]
  },
  {
    "id": 174299095,
    "name": "fileupload",
    "full_name": "md-amir/fileupload",
    "description": "Upload multiple image using rest api (postman ) in laravel",
    "fork": false,
    "created_at": "2019-03-07T08:02:50Z",
    "updated_at": "2019-03-07T08:30:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5730132,
    "owner_login": "md-amir",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/5730132?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "load",
      "image",
      "rest api",
      "laravel",
      "multiple"
    ]
  },
  {
    "id": 152749039,
    "name": "fake-rest-api-using-json-server",
    "full_name": "tareque20/fake-rest-api-using-json-server",
    "description": "Simple rest api test using json server",
    "fork": false,
    "created_at": "2018-10-12T12:43:14Z",
    "updated_at": "2018-10-12T13:05:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7992389,
    "owner_login": "tareque20",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/7992389?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "rest",
      "server",
      "json",
      "rest api",
      "json server"
    ]
  },
  {
    "id": 178538644,
    "name": "RestFul-API-Testing-server",
    "full_name": "admindebu/RestFul-API-Testing-server",
    "description": "This is the Server of testing restful web service. and your tool - postman / rest client act as an client.",
    "fork": false,
    "created_at": "2019-03-30T09:31:42Z",
    "updated_at": "2019-06-08T19:00:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46689581,
    "owner_login": "admindebu",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/46689581?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "rest",
      "service",
      "tool",
      "client",
      "restful"
    ]
  },
  {
    "id": 186380213,
    "name": "Customer-Relationship-Management-Real-time-CURD-Application-using-Spring-Rest-Json-HQL-WebServices",
    "full_name": "soumyadip007/Customer-Relationship-Management-Real-time-CURD-Application-using-Spring-Rest-Json-HQL-WebServices",
    "description": "CRUD (Create, Read, Update and Delete) application is the most important application for creating any project.  In spring Rest, we have developed this using Jackson,Postman and restful web services.",
    "fork": false,
    "created_at": "2019-05-13T08:42:40Z",
    "updated_at": "2020-02-10T07:22:40Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 1,
    "watchers": 3,
    "score": 1,
    "owner_id": 37873518,
    "owner_login": "soumyadip007",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/37873518?v=4",
    "pulled": 1,
    "tags": [
      "application",
      "rest",
      "service",
      "develop",
      "services",
      "import",
      "restful",
      "creating",
      "spring",
      "developed",
      "important"
    ]
  },
  {
    "id": 191954888,
    "name": "introduction-to-rest-api-with-postman-Nchimzy708",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-Nchimzy708",
    "description": "introduction-to-rest-api-with-postman-Nchimzy708 created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-14T14:15:34Z",
    "updated_at": "2019-06-14T14:15:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 191931197,
    "name": "introduction-to-rest-api-with-postman-jake1808",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-jake1808",
    "description": "introduction-to-rest-api-with-postman-jake1808 created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-14T11:22:43Z",
    "updated_at": "2019-06-14T17:25:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 191942608,
    "name": "introduction-to-rest-api-with-postman-MathewsNyirongo",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-MathewsNyirongo",
    "description": "introduction-to-rest-api-with-postman-MathewsNyirongo created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-14T12:52:12Z",
    "updated_at": "2019-06-14T12:52:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 192047322,
    "name": "introduction-to-rest-api-with-postman-Mulubwa17",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-Mulubwa17",
    "description": "introduction-to-rest-api-with-postman-Mulubwa17 created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-15T06:55:13Z",
    "updated_at": "2019-06-15T06:55:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 191975465,
    "name": "introduction-to-rest-api-with-postman-kamena1994",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-kamena1994",
    "description": "introduction-to-rest-api-with-postman-kamena1994 created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-14T16:33:14Z",
    "updated_at": "2019-06-14T16:33:32Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 192124580,
    "name": "introduction-to-rest-api-with-postman-mcdee92",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-mcdee92",
    "description": "introduction-to-rest-api-with-postman-mcdee92 created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-15T21:16:48Z",
    "updated_at": "2019-06-15T21:17:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 191977858,
    "name": "introduction-to-rest-api-with-postman-DalitsoKasonde",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-DalitsoKasonde",
    "description": "introduction-to-rest-api-with-postman-DalitsoKasonde created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-14T16:52:50Z",
    "updated_at": "2019-06-15T21:31:12Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 191629200,
    "name": "introduction-to-rest-api-with-postman-Mambwe94",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-Mambwe94",
    "description": "introduction-to-rest-api-with-postman-Mambwe94 created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-12T19:03:30Z",
    "updated_at": "2019-06-12T19:03:48Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 221197176,
    "name": "mongo-REST-API",
    "full_name": "noelsasi/mongo-REST-API",
    "description": "simple mongo rest-API build using express and Mongoose. clone it and test with Postman ",
    "fork": false,
    "created_at": "2019-11-12T11:02:29Z",
    "updated_at": "2019-11-12T11:56:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44287589,
    "owner_login": "noelsasi",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/44287589?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "rest",
      "express",
      "mongo",
      " express",
      "build",
      "clone"
    ]
  },
  {
    "id": 121759902,
    "name": "REST_API_CRUD_GEOTargeting",
    "full_name": "deechris27/REST_API_CRUD_GEOTargeting",
    "description": "Node JS, Mongo DB - GeoJson, Express, Postman rest client. A complete rest crud project",
    "fork": false,
    "created_at": "2018-02-16T14:28:41Z",
    "updated_at": "2018-02-16T14:57:50Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11952481,
    "owner_login": "deechris27",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/11952481?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "client",
      "complete",
      "crud"
    ]
  },
  {
    "id": 105032500,
    "name": "rest-api-testing-demo",
    "full_name": "szmc/rest-api-testing-demo",
    "description": "Repository for demo of rest api testing using different tools(Postman, Jmeter, SoapUI, curl, Rest-Assured)",
    "fork": false,
    "created_at": "2017-09-27T15:00:48Z",
    "updated_at": "2017-09-27T15:04:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 9567171,
    "owner_login": "szmc",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/9567171?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "rest",
      "tool",
      "demo",
      "rent",
      "tools",
      "rest api",
      "curl"
    ]
  },
  {
    "id": 223232434,
    "name": "ApiRestJava",
    "full_name": "also-rc/ApiRestJava",
    "description": "Api rest que conecta a una bd, no gui, todo desde el navegador o postman",
    "fork": false,
    "created_at": "2019-11-21T17:54:09Z",
    "updated_at": "2019-11-21T18:02:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42681085,
    "owner_login": "also-rc",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/42681085?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "todo",
      "desde",
      "conecta"
    ]
  },
  {
    "id": 192049068,
    "name": "introduction-to-rest-api-with-postman-geraldMaboshe",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-geraldMaboshe",
    "description": "introduction-to-rest-api-with-postman-geraldMaboshe created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-15T07:16:04Z",
    "updated_at": "2019-06-15T07:16:21Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 192985932,
    "name": "introduction-to-rest-api-with-postman-Big-Zude",
    "full_name": "bongohive-internship/introduction-to-rest-api-with-postman-Big-Zude",
    "description": "introduction-to-rest-api-with-postman-Big-Zude created by GitHub Classroom",
    "fork": false,
    "created_at": "2019-06-20T20:51:14Z",
    "updated_at": "2019-06-25T20:28:28Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 51743970,
    "owner_login": "bongohive-internship",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51743970?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "rest",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 177321042,
    "name": "postman-Bing_In_Zomato",
    "full_name": "asheeshmisra/postman-Bing_In_Zomato",
    "description": "This is a public repository having a postman collection to search for a restaurant near a specified place using Zomato API and Bing Maps REST API.",
    "fork": false,
    "created_at": "2019-03-23T17:43:50Z",
    "updated_at": "2019-03-23T19:07:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22025338,
    "owner_login": "asheeshmisra",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/22025338?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "rest",
      "spec",
      "search",
      "public",
      "place",
      "having",
      "restaurant"
    ]
  },
  {
    "id": 91365187,
    "name": "rest-api-tutorial",
    "full_name": "Sestri4kina/rest-api-tutorial",
    "description": null,
    "fork": false,
    "created_at": "2017-05-15T17:26:16Z",
    "updated_at": "2017-05-15T17:32:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 18619005,
    "owner_login": "Sestri4kina",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/18619005?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 199872772,
    "name": "laravel-simple-restful-api-crud",
    "full_name": "RMUSMAN/laravel-simple-restful-api-crud",
    "description": "simple restful api crud in laravel tested in postman. validation response in json.",
    "fork": false,
    "created_at": "2019-07-31T14:31:11Z",
    "updated_at": "2019-07-31T15:58:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32107204,
    "owner_login": "RMUSMAN",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/32107204?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "json",
      "tested",
      "response",
      "restful",
      "laravel",
      "crud",
      "validation"
    ]
  },
  {
    "id": 119902466,
    "name": "2_2upload_image_restful",
    "full_name": "somraky/2_2upload_image_restful",
    "description": "upload image by restful api. you can use postman for test this.",
    "fork": false,
    "created_at": "2018-02-01T22:40:32Z",
    "updated_at": "2018-02-01T22:47:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35701342,
    "owner_login": "somraky",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35701342?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "load",
      "restful",
      "image",
      "upload"
    ]
  },
  {
    "id": 89508055,
    "name": "Simple-Rest-Agent",
    "full_name": "Narbhakshi/Simple-Rest-Agent",
    "description": "This is a Simple Rest Agent. Useful when we cannot install/use Postman-like tools due to enterprise restrictions",
    "fork": false,
    "created_at": "2017-04-26T17:21:58Z",
    "updated_at": "2017-05-20T17:26:52Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 12186424,
    "owner_login": "Narbhakshi",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/12186424?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "tool",
      "tools",
      "install",
      "enter",
      "restrict",
      "cannot",
      "enterprise"
    ]
  },
  {
    "id": 230466934,
    "name": "REST-api-in-nodejs-using-mongoose-express",
    "full_name": "rishu488/REST-api-in-nodejs-using-mongoose-express",
    "description": "its a mini project of creating a rest api using mongoose express and postman",
    "fork": false,
    "created_at": "2019-12-27T15:25:47Z",
    "updated_at": "2020-03-09T13:45:23Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 39123446,
    "owner_login": "rishu488",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/39123446?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "express",
      "mongo",
      " express",
      "creating",
      "rest api",
      "mongoose",
      "mini"
    ]
  },
  {
    "id": 121955042,
    "name": "codeigniterapi",
    "full_name": "souhaiebtar/codeigniterapi",
    "description": "codeigniter rest api, how to ?",
    "fork": false,
    "created_at": "2018-02-18T13:37:05Z",
    "updated_at": "2018-02-26T15:21:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15350774,
    "owner_login": "souhaiebtar",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15350774?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "code",
      "rest api",
      "codeigniter"
    ]
  },
  {
    "id": 92623621,
    "name": "node-jwt-mocha-todo-rest-api",
    "full_name": "rdbhagat999/node-jwt-mocha-todo-rest-api",
    "description": "Nodejs rest api with authentication using jsonwebtoken. Use postman chrome extension to send requests to endpoints ",
    "fork": false,
    "created_at": "2017-05-27T20:55:04Z",
    "updated_at": "2017-05-31T01:48:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 20500206,
    "owner_login": "rdbhagat999",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/20500206?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "request",
      "rest",
      "json",
      "requests",
      "auth",
      "endpoint",
      "points",
      "send",
      "endpoints",
      "authentication",
      "extension",
      "rest api",
      "token",
      "chrome",
      "jsonwebtoken"
    ]
  },
  {
    "id": 101108321,
    "name": "lazy-api-rest",
    "full_name": "pedroSG94/lazy-api-rest",
    "description": "Python project to generate a API rest module for Android using a json exported from postman collection",
    "fork": false,
    "created_at": "2017-08-22T21:19:43Z",
    "updated_at": "2017-09-29T12:09:34Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 17556876,
    "owner_login": "pedroSG94",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/17556876?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "postman collection",
      "rest",
      "json",
      "generate",
      "export",
      "module",
      "exported"
    ]
  },
  {
    "id": 190126346,
    "name": "Restful-Explore-California-App",
    "full_name": "davidenoma/Restful-Explore-California-App",
    "description": "A restful spring boot micro service based on spring data JPA and spring rest. It allows requests to the web service that returns information about tours, tour packages and tour ratings about locations in california.",
    "fork": false,
    "created_at": "2019-06-04T04:01:22Z",
    "updated_at": "2019-06-06T14:43:04Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 24875399,
    "owner_login": "davidenoma",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/24875399?v=4",
    "pulled": 1,
    "tags": [
      "data",
      "request",
      "form",
      "rest",
      "service",
      "requests",
      "based",
      "format",
      "boot",
      "restful",
      "spring",
      "package",
      "rating",
      "info",
      "infor",
      "allows",
      "information",
      "micro",
      "spring boot",
      "location",
      "turns",
      "returns",
      "packages",
      "tours"
    ]
  },
  {
    "id": 111292718,
    "name": "node-restful-api",
    "full_name": "AsodariyaP/node-restful-api",
    "description": "node-mongodb restful api",
    "fork": false,
    "created_at": "2017-11-19T12:24:44Z",
    "updated_at": "2017-12-24T11:04:52Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 25656505,
    "owner_login": "AsodariyaP",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/25656505?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "node",
      "mongo",
      "restful",
      "mongod",
      "mongodb"
    ]
  },
  {
    "id": 144369040,
    "name": "rest-api-authentication",
    "full_name": "melitus/rest-api-authentication",
    "description": ":art: This is to demonstrate how to authenticate a user to use rest api endpoints",
    "fork": false,
    "created_at": "2018-08-11T08:33:21Z",
    "updated_at": "2018-09-03T20:37:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5014464,
    "owner_login": "melitus",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/5014464?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "user",
      "auth",
      "endpoint",
      "points",
      "demo",
      "endpoints",
      "rest api",
      "demonstrate",
      "authenticate"
    ]
  },
  {
    "id": 169901439,
    "name": "using-django-rest-framework-to-make-languages-api-",
    "full_name": "vartikayadav/using-django-rest-framework-to-make-languages-api-",
    "description": "built api to fetcch languages using django rest framework and postman .",
    "fork": false,
    "created_at": "2019-02-09T18:52:44Z",
    "updated_at": "2019-02-09T19:26:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 38458783,
    "owner_login": "vartikayadav",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/38458783?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "framework",
      "built",
      "lang",
      "django",
      "language",
      "django rest",
      "fetcch"
    ]
  },
  {
    "id": 190343750,
    "name": "spring-boot-simple-rest-crud-oparation",
    "full_name": "ksandun/spring-boot-simple-rest-crud-oparation",
    "description": "This is a rest crud operation which contains back-end. We can operate crud operation over the postman.",
    "fork": false,
    "created_at": "2019-06-05T07:07:26Z",
    "updated_at": "2019-06-17T07:03:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 33116733,
    "owner_login": "ksandun",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/33116733?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "contain",
      "operation",
      "crud",
      "operate"
    ]
  },
  {
    "id": 21752869,
    "name": "API-mongoDB-nodeJS",
    "full_name": "feernando-cortes/API-mongoDB-nodeJS",
    "description": "API desarrollada con mongoDB y node.js para cliente rest POSTMAN de un CRUD de trovadores.",
    "fork": false,
    "created_at": "2014-07-11T22:06:49Z",
    "updated_at": "2014-07-11T22:26:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 8049029,
    "owner_login": "feernando-cortes",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/8049029?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "client",
      "node",
      "mongo",
      "desarrollada"
    ]
  },
  {
    "id": 198892046,
    "name": "springboot-mongodb",
    "full_name": "lekhrajprasad/springboot-mongodb",
    "description": "crud operation using spring boot , mongo db, rest, to test use postman",
    "fork": false,
    "created_at": "2019-07-25T19:45:44Z",
    "updated_at": "2019-07-28T16:48:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30915597,
    "owner_login": "lekhrajprasad",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30915597?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "mongo",
      "operation",
      "boot",
      "spring",
      "crud",
      "spring boot"
    ]
  },
  {
    "id": 139327407,
    "name": "learning-program",
    "full_name": "ashwinies/learning-program",
    "description": "sample project on spring boot, rest services using postman on reference Genomes",
    "fork": false,
    "created_at": "2018-07-01T12:30:31Z",
    "updated_at": "2019-02-11T15:47:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 8567567,
    "owner_login": "ashwinies",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/8567567?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "service",
      "sample",
      "services",
      "boot",
      "spring",
      "spring boot",
      "reference",
      "rest service"
    ]
  },
  {
    "id": 140914228,
    "name": "ss-pygre",
    "full_name": "aviskase/ss-pygre",
    "description": "simple & stupid \"rest\" api select caller for PostgreSQL for integration testing via Postman",
    "fork": false,
    "created_at": "2018-07-14T03:55:21Z",
    "updated_at": "2018-07-14T04:10:09Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3819473,
    "owner_login": "aviskase",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/3819473?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "rest",
      "call",
      "integration",
      "select",
      "\"rest",
      "stupid"
    ]
  },
  {
    "id": 165928181,
    "name": "ppgService",
    "full_name": "birish87/ppgService",
    "description": "simple springboot, rest service whereby we can integrate postman with our postgresql db.",
    "fork": false,
    "created_at": "2019-01-15T21:43:26Z",
    "updated_at": "2019-01-15T22:11:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45980316,
    "owner_login": "birish87",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/45980316?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "service",
      "boot",
      "spring",
      "integrate",
      "springboot",
      "postgres",
      "rest service",
      "postgresql",
      "whereby"
    ]
  },
  {
    "id": 96535965,
    "name": "hw-rest-express-nodejs",
    "full_name": "vishalbhardwaj26/hw-rest-express-nodejs",
    "description": "Elaborated exercise on rest+express+nodejs. ",
    "fork": false,
    "created_at": "2017-07-07T12:22:06Z",
    "updated_at": "2017-08-11T07:52:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15126782,
    "owner_login": "vishalbhardwaj26",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/15126782?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "node",
      "express",
      "nodejs",
      "exercise"
    ]
  },
  {
    "id": 115123665,
    "name": "crudApp",
    "full_name": "laffingDragons/crudApp",
    "description": "Using node and express and various modules, using POSTMAN rest  client manuplating Json data",
    "fork": false,
    "created_at": "2017-12-22T14:42:13Z",
    "updated_at": "2017-12-22T14:43:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32427753,
    "owner_login": "laffingDragons",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/32427753?v=4",
    "pulled": 1,
    "tags": [
      "data",
      "rest",
      "client",
      "node",
      "express",
      " express",
      "module",
      "various",
      "modules"
    ]
  },
  {
    "id": 241793843,
    "name": "spring-mvc-rest-customer-application",
    "full_name": "Mehran-at/spring-mvc-rest-customer-application",
    "description": "Simple rest application for the sake of exercising REST API+trying in POSTMAN APP. Not a good example for big apps",
    "fork": false,
    "created_at": "2020-02-20T04:35:01Z",
    "updated_at": "2020-02-20T04:35:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 36104315,
    "owner_login": "Mehran-at",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/36104315?v=4",
    "pulled": 1,
    "tags": [
      "application",
      "rest",
      "example",
      "trying",
      "apps",
      "sake"
    ]
  },
  {
    "id": 211506296,
    "name": "movie_rating_drf",
    "full_name": "Sayam753/movie_rating_drf",
    "description": "A django rest based web app for handling movie_ratings for different users.",
    "fork": false,
    "created_at": "2019-09-28T13:39:54Z",
    "updated_at": "2020-01-12T05:28:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43073325,
    "owner_login": "Sayam753",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/43073325?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "user",
      "based",
      "users",
      "rent",
      "rating",
      "web app",
      "handling",
      "django",
      "movie",
      "django rest"
    ]
  },
  {
    "id": 97867044,
    "name": "yii2-restful",
    "full_name": "tom-china/yii2-restful",
    "description": "基于yii2实现restful api,该项目为基础项目，后面可以拿该项目进行实现，请求可以利用postman进行验证",
    "fork": false,
    "created_at": "2017-07-20T18:34:45Z",
    "updated_at": "2019-04-09T10:25:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 23055608,
    "owner_login": "tom-china",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/23055608?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "restful"
    ]
  },
  {
    "id": 65252456,
    "name": "simpleRestAPI",
    "full_name": "zenithtekla/simpleRestAPI",
    "description": "RestAPI made simple, tested with Advanced REST client chromeApp, offered by chromerestclient.com, this App is much simpler, fast and light to perform testing than clumsy, complex Postman UI",
    "fork": false,
    "created_at": "2016-08-09T01:32:23Z",
    "updated_at": "2016-08-12T16:00:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11691367,
    "owner_login": "zenithtekla",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/11691367?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "form",
      "rest",
      "client",
      "tested",
      "perform",
      "light",
      "chrome",
      "complex",
      "offered",
      "restclient",
      "much"
    ]
  },
  {
    "id": 92599490,
    "name": "Create-order-using-oauth-rest-api-in-android",
    "full_name": "tarang777/Create-order-using-oauth-rest-api-in-android",
    "description": "Order not getting created with android app using rest api, but it works well with the postman ie rest api testing tool.",
    "fork": false,
    "created_at": "2017-05-27T13:11:51Z",
    "updated_at": "2017-05-27T13:11:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 20734635,
    "owner_login": "tarang777",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/20734635?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "testing",
      "rest",
      "tool",
      "rest api",
      "getting",
      "android"
    ]
  },
  {
    "id": 223085769,
    "name": "url-shortener-api",
    "full_name": "Fantaso/url-shortener-api",
    "description": "Url shortener API with Django and django rest framework. Project consists to allow a user to transform a long web url into a pattern-consistent (encoded) small url easy to share and remember.",
    "fork": false,
    "created_at": "2019-11-21T04:08:56Z",
    "updated_at": "2019-12-05T20:44:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 29681368,
    "owner_login": "Fantaso",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/29681368?v=4",
    "pulled": 1,
    "tags": [
      "form",
      "rest",
      "user",
      "code",
      "framework",
      "long",
      "small",
      "django",
      "transform",
      "consist",
      "ember",
      "django rest",
      "shortener"
    ]
  },
  {
    "id": 26696395,
    "name": "ConnectFour",
    "full_name": "ekor15/ConnectFour",
    "description": "an attempt to create a level 2 rest api for component base connect four game add postman file for methods calls",
    "fork": false,
    "created_at": "2014-11-15T22:35:21Z",
    "updated_at": "2014-11-15T22:38:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5829500,
    "owner_login": "ekor15",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/5829500?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "file",
      "rest",
      "call",
      "calls",
      "connect",
      "method",
      "rest api",
      "methods",
      "game",
      "component",
      "attempt",
      "level"
    ]
  },
  {
    "id": 104587490,
    "name": "webservices-test-framework-compare",
    "full_name": "FachrulCH/webservices-test-framework-compare",
    "description": "personal opinion for test framework for web services in PHP, Python, Javascript, and Java. using codeception, postman-newman, robot framework, rest assured",
    "fork": false,
    "created_at": "2017-09-23T17:52:06Z",
    "updated_at": "2017-09-23T17:56:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10245158,
    "owner_login": "FachrulCH",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/10245158?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "script",
      "service",
      "code",
      "newman",
      "framework",
      "services",
      "robo",
      "personal",
      "assured",
      "codeception",
      "opinion"
    ]
  },
  {
    "id": 250102289,
    "name": "ProjetoSpring",
    "full_name": "daise18/ProjetoSpring",
    "description": "Projeto java com spring boot, spring jpa, utilizando conceitos de microsserviços/apis, banco de dados, json, anotação, repository, entity, rest controllers, testes manuais via postman., ",
    "fork": false,
    "created_at": "2020-03-25T22:08:08Z",
    "updated_at": "2020-03-25T22:12:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 62191842,
    "owner_login": "daise18",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/62191842?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "repos",
      "repository",
      "rest",
      "json",
      "util",
      "java",
      "boot",
      "spring",
      "control",
      "micro",
      "utilizando",
      "testes",
      "spring boot",
      "controller",
      "entity",
      "dados",
      "banco",
      "manua",
      "conceitos"
    ]
  },
  {
    "id": 95230518,
    "name": "Item-Catalog",
    "full_name": "GideonFlynn/Item-Catalog",
    "description": "A catalog of objects where each item has a category, shop, and manufacturer. It has a useful API made with Postman, the rest of the code; Python with the Flask framework, and PostgreSQL",
    "fork": false,
    "created_at": "2017-06-23T15:02:34Z",
    "updated_at": "2017-08-13T13:02:50Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 24442154,
    "owner_login": "GideonFlynn",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/24442154?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "code",
      "framework",
      "shop",
      "object",
      "objects",
      "useful",
      "catalog"
    ]
  },
  {
    "id": 227797005,
    "name": "task-managment",
    "full_name": "most-007/task-managment",
    "description": "Cakephp  app for task management and rest API to get all links in a given html document URL , and API to sent PDF file using postman to a given email ",
    "fork": false,
    "created_at": "2019-12-13T08:54:39Z",
    "updated_at": "2019-12-30T08:42:28Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 9547339,
    "owner_login": "most-007",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/9547339?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "file",
      "rest",
      "document",
      "mail",
      "manage",
      "email",
      "html",
      "task",
      "management",
      "link",
      "given"
    ]
  },
  {
    "id": 189706493,
    "name": "Employee-Relationship-CURD-Application-using-Spring-Boot-Thymeleaf-Hibernate-JPA-MVC",
    "full_name": "soumyadip007/Employee-Relationship-CURD-Application-using-Spring-Boot-Thymeleaf-Hibernate-JPA-MVC",
    "description": "CRUD (Create, Read, Update and Delete) application is the most important application for creating any project.  In spring Rest, we have developed this using Jackson,Postman and restful web services and along with this we have used Spring-boot ,JPA, Spring-Data-Rest and hibernate.",
    "fork": false,
    "created_at": "2019-06-01T08:00:01Z",
    "updated_at": "2019-12-01T07:39:09Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37873518,
    "owner_login": "soumyadip007",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/37873518?v=4",
    "pulled": 1,
    "tags": [
      "application",
      "rest",
      "service",
      "develop",
      "services",
      "import",
      "boot",
      "restful",
      "creating",
      "spring",
      "developed",
      "long",
      "along",
      "hibernate",
      "important"
    ]
  },
  {
    "id": 139349790,
    "name": "Shircle",
    "full_name": "awaisbub/Shircle",
    "description": "It is Android aapplication back end code made for small local businesses. The back end of this application is in C# .NET using MVC architecture making REST APIs. And all the views are on Android. I worked as a back end developer in this app. Back end of the app is in c# using .NET entity framework. REST APIs developed using Model View Controller(MVC) architecture. Views were designed on android studio. The database was designed by using Code First Approach. (Visual Studio, Android Studio, Microsoft Azure, Microsoft SQL, SQLite, Postman, Entity Framework, MVC, Firebase REST API’s, REST API’s, JSON) This app has the following features: I. It provides all in one business solution to shopkeepers. Shopkeeper can setup his online store, manage sales through mobile POS, track of inventory, sale reports generation, market insights, and trending products. II. On the other hand, customer can view nearby stores through Google Maps & Shircle-Eye, add products to virtual cart, and view trending items according to their interests.",
    "fork": false,
    "created_at": "2018-07-01T17:54:53Z",
    "updated_at": "2018-07-01T18:16:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40741255,
    "owner_login": "awaisbub",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/40741255?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "data",
      "application",
      "rest",
      "database",
      "develop",
      "code",
      "sign",
      "line",
      "framework",
      "manage",
      "local",
      "view",
      "provide",
      "developer",
      "store",
      "shop",
      "developed",
      "report",
      "feature",
      "custom",
      "esse",
      "design",
      "product",
      "making",
      "small",
      "features",
      "were",
      "setup",
      "track",
      "solution",
      "designed",
      "android",
      "following",
      "mobile",
      "products",
      "online",
      "according",
      "generation",
      "provides",
      "entity",
      "customer",
      "worked",
      "back end",
      "inventory",
      "keep",
      "reports",
      "items",
      "insight",
      "business",
      "keeper",
      "studio",
      "businesses",
      "aapplication"
    ]
  },
  {
    "id": 91374388,
    "name": "JWT-Authentication",
    "full_name": "kpraneeth3456/JWT-Authentication",
    "description": "Project Title: JWT Authentication  Description: This project is a basic Authorization and Authentication which exchanges JSON web tokens between the client and the server for more security.  Execution: -Clone or download the repo from the GitHub link -npm install (to download the dependencies) -node index.js (To get the application running)  Working: -User has to enter his email and password to register his account.(Use any third-party rest-client like Postman on port 3000) -If the email already exists in the database it sends an error message and if the email does not exist it saves to the database. -If the user is signed up then he can go ahead and Sign-in with same username and password. -If the credentials are matched then a JSON web token will be sent to the client in the header. -If the username and password do not match then it sends back an error message.",
    "fork": false,
    "created_at": "2017-05-15T19:03:55Z",
    "updated_at": "2018-12-28T08:47:41Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 26414547,
    "owner_login": "kpraneeth3456",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/26414547?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "data",
      "application",
      "rest",
      "script",
      "server",
      "client",
      "node",
      "database",
      "user",
      "sign",
      "mail",
      "send",
      "load",
      "read",
      "running",
      "more",
      "email",
      "name",
      "token",
      "message",
      "to do",
      "install",
      "between",
      "link",
      "header",
      "account",
      "download",
      "enter",
      "ready",
      "party",
      "register",
      "sends",
      "third",
      "dependencies",
      "tokens",
      "error",
      "match",
      "security",
      "exchange",
      "matched"
    ]
  },
  {
    "id": 151468466,
    "name": "task2-jairo-newman",
    "full_name": "dmc152/task2-jairo-newman",
    "description": "Todoist restapi test using postman and newman",
    "fork": false,
    "created_at": "2018-10-03T19:27:54Z",
    "updated_at": "2018-10-03T19:29:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22991424,
    "owner_login": "dmc152",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22991424?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "rest",
      "newman",
      "restapi"
    ]
  },
  {
    "id": 164997909,
    "name": "testrail",
    "full_name": "bharath411/testrail",
    "description": "This repository contains testrail restapi requests in postman collections.",
    "fork": false,
    "created_at": "2019-01-10T05:45:51Z",
    "updated_at": "2019-01-11T17:02:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 8632970,
    "owner_login": "bharath411",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/8632970?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "collections",
      "repo",
      "request",
      "postman collection",
      "repos",
      "repository",
      "rest",
      "requests",
      "contain",
      "postman collections",
      "restapi",
      "testrail"
    ]
  },
  {
    "id": 197917540,
    "name": "Complaint-Lodging",
    "full_name": "Shekhar-Shashank/Complaint-Lodging",
    "description": "It is an android complaint lodging app in which the front end is designed in android studio using java language. The restful API that the app interacts with is made using python flask. The database used is sqlite. And the language used to parse the data from the server is Json. For testing the requests like get and post we used postman as a dummy request generator.",
    "fork": false,
    "created_at": "2019-07-20T10:50:35Z",
    "updated_at": "2019-07-26T06:59:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 52148699,
    "owner_login": "Shekhar-Shashank",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/52148699?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "data",
      "testing",
      "request",
      "rest",
      "server",
      "database",
      "requests",
      "sign",
      "interact",
      "front",
      "java",
      "restful",
      "python",
      "generator",
      "lang",
      "design",
      "parse",
      "flask",
      "designed",
      "android",
      "front end",
      "plain",
      "language",
      "dummy",
      "sqlite",
      "studio",
      "complaint"
    ]
  },
  {
    "id": 249174449,
    "name": "postmanJson",
    "full_name": "PinkaCourt/postmanJson",
    "description": null,
    "fork": false,
    "created_at": "2020-03-22T12:03:41Z",
    "updated_at": "2020-03-22T12:03:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 50292671,
    "owner_login": "PinkaCourt",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/50292671?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 91568417,
    "name": "PostmanJson",
    "full_name": "Angael/PostmanJson",
    "description": null,
    "fork": false,
    "created_at": "2017-05-17T11:23:35Z",
    "updated_at": "2017-05-17T11:23:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21974933,
    "owner_login": "Angael",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/21974933?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 204352299,
    "name": "Progamacion-III",
    "full_name": "SeleneAbraldez/Progamacion-III",
    "description": "Material educativo de la materia Programación III - PHP, HTML, SQL, Postman - (JSON, Cookies, POST/GET || PUT/DELETE, Apirest, Slim, Middleware, JWT)",
    "fork": false,
    "created_at": "2019-08-25T21:34:33Z",
    "updated_at": "2019-11-27T17:52:12Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40859246,
    "owner_login": "SeleneAbraldez",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40859246?v=4",
    "pulled": 1,
    "tags": [
      "rest"
    ]
  },
  {
    "id": 110963819,
    "name": "MyFirstApp",
    "full_name": "smmcgrath/MyFirstApp",
    "description": "Built in Node.js open source server framework. In this project I moved from client-side development (using JavaScript, HTML, and CSS) to building a server-side web application using the Express.js web framework hosted in Node.js runtime environment. The site includes a flatty style landing page including navigatation bar, sign-up forms, staff info etc. It has an uncluttered and minimal UI. The backend API’s communicated with databases designed using MongoDB, an example of a NoSQL database program using JSON-like objects with schemas. All APIs, including GET, PUT, UPDATE and DELETE were tested using Postman. Great experience using PuTTY open-source terminal emulator, working remotely over SSH network protocol. Securing my API with authentication; hashing passwords using Bcrypt and issuing tokens with JSON Web Token (JWT). New additions help to restrict access and ensure tokens are verified. Previous to this the back-end APIs could be easily accessed via the URL. User comments coudl be retrieved, new ones saved, deleted or updated. Hashing is a means of transforming a string of characters (passwords, in my case) into a different and larger set of characters, thus protecting our sensitive data. Bcrypt is the password hashing function used.",
    "fork": false,
    "created_at": "2017-11-16T11:34:16Z",
    "updated_at": "2018-12-15T19:14:11Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 30355322,
    "owner_login": "smmcgrath",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30355322?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "form",
      "application",
      "rest",
      "server",
      "client",
      "database",
      "develop",
      "example",
      "sign",
      "environment",
      "auth",
      "tested",
      "framework",
      "help",
      "build",
      "function",
      "site",
      "source",
      "authentication",
      "update",
      "rent",
      "host",
      "delete",
      "development",
      "backend",
      "info",
      "access",
      "working",
      "program",
      "side",
      "web app",
      "open",
      "object",
      "case",
      "token",
      "esse",
      "building",
      "design",
      "were",
      "easily",
      "includes",
      "including",
      "mini",
      "schema",
      "designed",
      "retrieve",
      "objects",
      "style",
      "remote",
      "network",
      "terminal",
      "updated",
      "communicate",
      "comments",
      "hosted",
      "words",
      "tokens",
      "transform",
      "mean",
      "schemas",
      "accessed",
      "moved",
      "restrict",
      "protecting",
      "transforming",
      "minimal",
      "databases"
    ]
  },
  {
    "id": 162791746,
    "name": "Apitest",
    "full_name": "hqq518/Apitest",
    "description": "基于HTML5、Angularjs、Ajax创建的一个用于测试restful api的页面，有点类似postman的功能，支持POST、GET、PUT、DELETE方法，支持添加请求参数、支持添加请求头，支持application/x-www-form-urlencoded和application/json编码格式，支持将历史请求记录保存到本地存储。",
    "fork": false,
    "created_at": "2018-12-22T07:39:20Z",
    "updated_at": "2018-12-22T07:59:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17294797,
    "owner_login": "hqq518",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/17294797?v=4",
    "pulled": 1,
    "tags": [
      "form",
      "application",
      "rest",
      "json",
      "code",
      "restful"
    ]
  },
  {
    "id": 131944978,
    "name": "CRUD-App-",
    "full_name": "Umang080799/CRUD-App-",
    "description": "I made a Crud App using Node.js,Express.js and Mongoose.js. I built out a book Schema for creating,reading,updating and deleting books.  Used Express Scripts to create routes that will form the basis for a restful API.  Used POSTMAN to perform actions on the routes All the book details were altered as JSON objects. I created and used Google Chrome to confirm the changes made on the local host server port 8080. ",
    "fork": false,
    "created_at": "2018-05-03T05:16:37Z",
    "updated_at": "2020-02-23T04:56:22Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 35209670,
    "owner_login": "Umang080799",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35209670?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "form",
      "rest",
      "server",
      "route",
      "local",
      "routes",
      "read",
      "built",
      "restful",
      "host",
      "creating",
      "perform",
      "action",
      "book",
      "object",
      "were",
      "objects",
      "books",
      "details",
      "updating",
      "reading"
    ]
  },
  {
    "id": 230236129,
    "name": "my-first-Flask-resful-application",
    "full_name": "pawanmethre/my-first-Flask-resful-application",
    "description": "My first python flask restful application using postman tool which is basically CURD application for items and price using sqlite3 database.",
    "fork": false,
    "created_at": "2019-12-26T09:34:36Z",
    "updated_at": "2019-12-26T12:05:46Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 58561944,
    "owner_login": "pawanmethre",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/58561944?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "data",
      "application",
      "rest",
      "tool",
      "call",
      "database",
      "restful",
      "python",
      "flask",
      "basically",
      "items",
      "sqlite"
    ]
  },
  {
    "id": 184118378,
    "name": "command-line-physician",
    "full_name": "command-line-physician/command-line-physician",
    "description": "Our intention with this app is to let users find natural herbal based remedies for their ailments. Our app allows users to browse our specially curated herb database by name and latin name. Command-Line Physician also allows users to locate the nearest store where they can find their unique remedy, or a local resident who has the herb available to share. Tech stack: Command-line Physician is a RESTful api that utilizes Node, Express, Jest, end-to-end and unit testing. Our testing was carried out by Compass, Robo 3T, and Postman.",
    "fork": false,
    "created_at": "2019-04-29T17:57:06Z",
    "updated_at": "2019-05-29T23:32:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 4,
    "watchers": 0,
    "score": 1,
    "owner_id": 50116559,
    "owner_login": "command-line-physician",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/50116559?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "rest",
      "database",
      "user",
      "based",
      "line",
      "util",
      "spec",
      "local",
      "users",
      "store",
      "name",
      "side",
      "allows",
      "stack",
      "unit",
      "available",
      "find",
      "utilizes",
      "intention"
    ]
  },
  {
    "id": 225575258,
    "name": "swagger.io-openAPI",
    "full_name": "rohitchatla/swagger.io-openAPI",
    "description": "For more Nodejs,JavaScript projects :: goto https://github.com/thunderssilver to see our team projects listed as following:: 1)stud_form with nodeJS,mysql 2)swagger.io/openAPI 3)socket1 4)restapiauth: (nodeJS,expressJS with routes,private routes,auth(JWT),validations(Joi@hapi),password hashing with bcryptjs,data/codes hiding with dotenv lib,MongoDb(mongoose connect) as DB) 5)restapi: (MongoDb as DB) 6)sample_postman 7)oauth2.0 with google,facebook 8)oauth2.0 with local strategy",
    "fork": false,
    "created_at": "2019-12-03T09:02:53Z",
    "updated_at": "2019-12-04T07:27:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51963891,
    "owner_login": "rohitchatla",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/51963891?v=4",
    "pulled": 1,
    "tags": [
      "data",
      "form",
      "rest",
      "node",
      "http",
      "express",
      "code",
      "mongo",
      "auth",
      "route",
      "https",
      "sample",
      "local",
      "list",
      "routes",
      "more",
      "swagger",
      "connect",
      "face",
      "mysql",
      "book",
      "github",
      "open",
      "mongoose",
      "under",
      "validation",
      "following",
      "mysql ",
      "codes",
      "projects",
      "restapi",
      "google",
      "bcrypt",
      "private",
      "oauth2",
      "hapi",
      "oauth"
    ]
  },
  {
    "id": 102051898,
    "name": "python-google-pubsub",
    "full_name": "bennzhang/python-google-pubsub",
    "description": null,
    "fork": false,
    "created_at": "2017-08-31T22:47:26Z",
    "updated_at": "2018-01-27T00:27:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25533990,
    "owner_login": "bennzhang",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/25533990?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 104678744,
    "name": "product-catlog",
    "full_name": "Zainab-Kalief/product-catlog",
    "description": "Spring Boot app showing off the use of restful api using postman",
    "fork": false,
    "created_at": "2017-09-24T21:50:32Z",
    "updated_at": "2017-09-24T21:51:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25897730,
    "owner_login": "Zainab-Kalief",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/25897730?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "rest",
      "restful",
      "showing"
    ]
  },
  {
    "id": 37958048,
    "name": "node-api",
    "full_name": "kaiocesar/node-api",
    "description": "Api restFul com Node.js + Express.js + MongoDB (Methods Get, Post, Put e Delete) com Teste no Postman (addons by chrome)",
    "fork": false,
    "created_at": "2015-06-24T02:43:05Z",
    "updated_at": "2015-06-24T03:21:12Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2325842,
    "owner_login": "kaiocesar",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/2325842?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "chrome",
      "addons"
    ]
  },
  {
    "id": 169577059,
    "name": "project-back-end",
    "full_name": "skhetarpaul/project-back-end",
    "description": "This is a server side project using Node and Express.js. The purpose is to provide its users a functionality to search some best restaurants sorted and arranged according to their star ratings. Screenshots of working back end system has been uploaded to *project_postman_results* directory in the root folder here.",
    "fork": false,
    "created_at": "2019-02-07T13:35:57Z",
    "updated_at": "2020-01-18T07:42:30Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 38581265,
    "owner_login": "skhetarpaul",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/38581265?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "server",
      "user",
      "function",
      "load",
      "star",
      "users",
      "functional",
      "rating",
      "provide",
      "system",
      "working",
      "side",
      "search",
      "result",
      "results",
      "folder",
      "functionality",
      "upload",
      "been",
      "according",
      "sort",
      "best",
      "directory",
      "back end",
      "restaurant",
      "arranged",
      "restaurants"
    ]
  },
  {
    "id": 230786808,
    "name": "todo",
    "full_name": "psjoshi20/todo",
    "description": "todo app  using -psql-seq-nodejs-express-postman-restapi 29dec2019",
    "fork": false,
    "created_at": "2019-12-29T18:15:40Z",
    "updated_at": "2019-12-30T05:17:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 55941347,
    "owner_login": "psjoshi20",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/55941347?v=4",
    "pulled": 1,
    "tags": [
      "rest",
      "node",
      "express",
      "nodejs",
      "todo",
      "2019",
      "restapi",
      "29dec2019"
    ]
  }
]