[
  {
    "user": "TableauExamples",
    "repo": "Tableau_Postman",
    "pulled": "Organization",
    "id": 20503955,
    "name": "Tableau_Postman",
    "full_name": "TableauExamples/Tableau_Postman",
    "description": "A Postman collection for testing and learning Tableau Server's REST API.",
    "fork": false,
    "created_at": "2014-06-04T22:55:37Z",
    "updated_at": "2020-02-20T21:20:31Z",
    "forks": 29,
    "open_issues": 2,
    "watchers": 57,
    "network_count": 29,
    "subscribers_count": 16,
    "owner_id": 7797548,
    "owner_login": "TableauExamples",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7797548?v=4",
    "owner_type": "Organization",
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "learn",
      "learning"
    ]
  },
  {
    "id": 104804865,
    "name": "endpoint-testing-afternoon",
    "full_name": "DevMountain/endpoint-testing-afternoon",
    "description": "An afternoon project to help solidify testing endpoints using Postman. ",
    "fork": false,
    "created_at": "2017-09-25T21:40:05Z",
    "updated_at": "2019-03-17T00:12:44Z",
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks": 204,
    "watchers": 4,
    "score": 1,
    "owner_id": 5432151,
    "owner_login": "DevMountain",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/5432151?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "endpoint",
      "points",
      "help",
      "endpoints",
      "afternoon"
    ]
  },
  {
    "id": 70889596,
    "name": "dakiya",
    "full_name": "rupeshmore/dakiya",
    "description": "Dakiya: converts Postman collections to load testing tool scripts",
    "fork": false,
    "created_at": "2016-10-14T08:23:38Z",
    "updated_at": "2020-03-31T08:32:55Z",
    "stargazers_count": 25,
    "watchers_count": 25,
    "forks": 6,
    "watchers": 25,
    "score": 1,
    "owner_id": 13160174,
    "owner_login": "rupeshmore",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/13160174?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "testing",
      "script",
      "tool",
      "convert",
      "scripts",
      "load",
      "converts"
    ]
  },
  {
    "user": "transferwise",
    "repo": "public-api-postman-collection",
    "pulled": "Organization",
    "id": 151441541,
    "name": "public-api-postman-collection",
    "full_name": "transferwise/public-api-postman-collection",
    "description": "A Postman collection for exploring and testing the TransferWise public API",
    "fork": false,
    "created_at": "2018-10-03T16:08:48Z",
    "updated_at": "2020-03-12T10:54:48Z",
    "forks": 3,
    "open_issues": 2,
    "watchers": 13,
    "network_count": 3,
    "subscribers_count": 12,
    "owner_id": 9465219,
    "owner_login": "transferwise",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/9465219?v=4",
    "owner_type": "Organization",
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "public",
      "exploring"
    ]
  },
  {
    "user": "txthinking",
    "repo": "frank",
    "pulled": "User",
    "id": 109979004,
    "name": "frank",
    "full_name": "txthinking/frank",
    "description": "Frank is a REST API automated testing tool like Postman but in command line. Auto generate markdown API document.",
    "fork": false,
    "created_at": "2017-11-08T13:24:43Z",
    "updated_at": "2020-02-28T15:40:48Z",
    "forks": 10,
    "open_issues": 3,
    "watchers": 69,
    "network_count": 10,
    "subscribers_count": 4,
    "owner_id": 1241807,
    "owner_login": "txthinking",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/1241807?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      "testing",
      "tool",
      "document",
      "auto",
      "automat",
      "line",
      "generate",
      "command",
      "automate",
      "automated",
      "command line",
      "markdown"
    ]
  },
  {
    "user": "flyworker",
    "repo": "python-automation-testing",
    "pulled": "User",
    "id": 114945463,
    "name": "python-automation-testing",
    "full_name": "flyworker/python-automation-testing",
    "description": "Learn about automated software testing with Python, Selenium WebDriver, and API, Postman, focusing on web applications.",
    "fork": false,
    "created_at": "2017-12-21T00:53:26Z",
    "updated_at": "2019-12-13T04:43:38Z",
    "forks": 12,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 12,
    "subscribers_count": 1,
    "owner_id": 8363795,
    "owner_login": "flyworker",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/8363795?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      "testing",
      "application",
      "auto",
      "automat",
      "automate",
      "web app",
      "automated",
      "applications",
      "software",
      "river"
    ]
  },
  {
    "user": "flash286",
    "repo": "postman-load-testing",
    "pulled": "User",
    "id": 111469848,
    "name": "postman-load-testing",
    "full_name": "flash286/postman-load-testing",
    "description": "This tool written on go lang, help to run postman collections in parallel mode. So you can use it for load testing based on postman collections.  As a runner it uses newman.",
    "fork": false,
    "created_at": "2017-11-20T22:31:02Z",
    "updated_at": "2019-12-22T10:04:47Z",
    "forks": 1,
    "open_issues": 0,
    "watchers": 10,
    "network_count": 1,
    "subscribers_count": 3,
    "owner_id": 1481022,
    "owner_login": "flash286",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/1481022?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "collections",
      "testing",
      "postman collection",
      "tool",
      "based",
      "newman",
      "help",
      "postman collections",
      "load",
      "runner",
      "written",
      "uses",
      "lang",
      "parallel"
    ]
  },
  {
    "user": "AndriiStepura",
    "repo": "letslearnapitesting",
    "pulled": "User",
    "id": 106154551,
    "name": "letslearnapitesting",
    "full_name": "AndriiStepura/letslearnapitesting",
    "description": "Repo for API testing presentation, based with postman tools",
    "fork": false,
    "created_at": "2017-10-08T06:18:19Z",
    "updated_at": "2019-05-22T21:14:47Z",
    "forks": 2,
    "open_issues": 0,
    "watchers": 4,
    "network_count": 2,
    "subscribers_count": 2,
    "owner_id": 30338636,
    "owner_login": "AndriiStepura",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/30338636?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      " postman",
      "testing",
      "tool",
      "based",
      "tools",
      "presentation"
    ]
  },
  {
    "user": "EhsanTang",
    "repo": "ApiDebug",
    "pulled": "User",
    "id": 91162919,
    "name": "ApiDebug",
    "full_name": "EhsanTang/ApiDebug",
    "description": "浏览器API接口调试插件，Chrome接口调试工具，http调试，post调试，post模拟工具，postman，post接口调试，post测试插件-ApiDebug is a browser plug-in for testing RESTful web services. http://api.crap.cn",
    "fork": false,
    "created_at": "2017-05-13T09:18:26Z",
    "updated_at": "2020-03-24T09:58:07Z",
    "forks": 36,
    "open_issues": 1,
    "watchers": 115,
    "network_count": 36,
    "subscribers_count": 15,
    "owner_id": 5117567,
    "owner_login": "EhsanTang",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/5117567?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      "testing",
      "service",
      "http",
      "services",
      "browser"
    ]
  },
  {
    "user": "JamesMessinger",
    "repo": "super-powered-api-testing",
    "pulled": "User",
    "id": 108252632,
    "name": "super-powered-api-testing",
    "full_name": "JamesMessinger/super-powered-api-testing",
    "description": "Comparisons of powerful API testing tools",
    "fork": false,
    "created_at": "2017-10-25T10:04:57Z",
    "updated_at": "2019-11-05T05:43:24Z",
    "forks": 19,
    "open_issues": 0,
    "watchers": 19,
    "network_count": 19,
    "subscribers_count": 6,
    "owner_id": 3453903,
    "owner_login": "JamesMessinger",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/3453903?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      "testing",
      "tool",
      "tools",
      "powerful"
    ]
  },
  {
    "user": "andreasmmadjiah",
    "repo": "REST-API-testing",
    "pulled": "User",
    "id": 210318026,
    "name": "REST-API-testing",
    "full_name": "andreasmmadjiah/REST-API-testing",
    "description": "Simple API testing using pythonanywhere and postman",
    "fork": false,
    "created_at": "2019-09-23T09:39:40Z",
    "updated_at": "2019-09-23T16:24:51Z",
    "forks": 0,
    "open_issues": 0,
    "watchers": 5,
    "network_count": 0,
    "subscribers_count": 1,
    "owner_id": 54434214,
    "owner_login": "andreasmmadjiah",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/54434214?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      " postman",
      "testing",
      "python",
      "pythonanywhere"
    ]
  },
  {
    "user": "TheEvilDev",
    "repo": "hapi-postman",
    "pulled": "User",
    "id": 30686163,
    "name": "hapi-postman",
    "full_name": "TheEvilDev/hapi-postman",
    "description": "Hapi plugin that exposes endpoint meta data as a postman collection for easy testing.",
    "fork": false,
    "created_at": "2015-02-12T04:48:54Z",
    "updated_at": "2019-01-28T18:16:35Z",
    "forks": 1,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 1,
    "subscribers_count": 2,
    "owner_id": 689065,
    "owner_login": "TheEvilDev",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/689065?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "data",
      "testing",
      "postman collection",
      "endpoint",
      "plugin",
      "expose",
      "exposes"
    ]
  },
  {
    "user": "tutagomes",
    "repo": "Postman-Testing",
    "pulled": "User",
    "id": 161397888,
    "name": "Postman-Testing",
    "full_name": "tutagomes/Postman-Testing",
    "description": "A repository to store some data and testing scripts used by my tutorial about postman testing.",
    "fork": false,
    "created_at": "2018-12-11T21:47:16Z",
    "updated_at": "2020-03-24T22:53:24Z",
    "forks": 1,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 1,
    "subscribers_count": 2,
    "owner_id": 7077493,
    "owner_login": "tutagomes",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7077493?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      " postman",
      "repo",
      "data",
      "testing",
      "repos",
      "repository",
      "script",
      "scripts",
      "store",
      "tutorial"
    ]
  },
  {
    "id": 108252632,
    "name": "super-powered-api-testing",
    "full_name": "JamesMessinger/super-powered-api-testing",
    "description": "Comparisons of powerful API testing tools",
    "fork": false,
    "created_at": "2017-10-25T10:04:57Z",
    "updated_at": "2019-11-05T05:43:24Z",
    "stargazers_count": 19,
    "watchers_count": 19,
    "forks": 19,
    "watchers": 19,
    "score": 1,
    "owner_id": 3453903,
    "owner_login": "JamesMessinger",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/3453903?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "tool",
      "tools",
      "powerful"
    ]
  },
  {
    "id": 91162919,
    "name": "ApiDebug",
    "full_name": "EhsanTang/ApiDebug",
    "description": "浏览器API接口调试插件，Chrome接口调试工具，http调试，post调试，post模拟工具，postman，post接口调试，post测试插件-ApiDebug is a browser plug-in for testing RESTful web services. http://api.crap.cn",
    "fork": false,
    "created_at": "2017-05-13T09:18:26Z",
    "updated_at": "2020-03-24T09:58:07Z",
    "stargazers_count": 115,
    "watchers_count": 115,
    "forks": 36,
    "watchers": 115,
    "score": 1,
    "owner_id": 5117567,
    "owner_login": "EhsanTang",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/5117567?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "service",
      "http",
      "services",
      "browser"
    ]
  },
  {
    "id": 210318026,
    "name": "REST-API-testing",
    "full_name": "andreasmmadjiah/REST-API-testing",
    "description": "Simple API testing using pythonanywhere and postman",
    "fork": false,
    "created_at": "2019-09-23T09:39:40Z",
    "updated_at": "2019-09-23T16:24:51Z",
    "stargazers_count": 5,
    "watchers_count": 5,
    "forks": 0,
    "watchers": 5,
    "score": 1,
    "owner_id": 54434214,
    "owner_login": "andreasmmadjiah",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/54434214?v=4",
    "tags": [
      "test",
      " postman",
      "testing",
      "python",
      "pythonanywhere"
    ]
  },
  {
    "id": 30686163,
    "name": "hapi-postman",
    "full_name": "TheEvilDev/hapi-postman",
    "description": "Hapi plugin that exposes endpoint meta data as a postman collection for easy testing.",
    "fork": false,
    "created_at": "2015-02-12T04:48:54Z",
    "updated_at": "2019-01-28T18:16:35Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 1,
    "watchers": 3,
    "score": 1,
    "owner_id": 689065,
    "owner_login": "TheEvilDev",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/689065?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "data",
      "testing",
      "postman collection",
      "endpoint",
      "plugin",
      "expose",
      "exposes"
    ]
  },
  {
    "id": 161397888,
    "name": "Postman-Testing",
    "full_name": "tutagomes/Postman-Testing",
    "description": "A repository to store some data and testing scripts used by my tutorial about postman testing.",
    "fork": false,
    "created_at": "2018-12-11T21:47:16Z",
    "updated_at": "2020-03-24T22:53:24Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 1,
    "watchers": 3,
    "score": 1,
    "owner_id": 7077493,
    "owner_login": "tutagomes",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7077493?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "data",
      "testing",
      "repos",
      "repository",
      "script",
      "scripts",
      "store",
      "tutorial"
    ]
  },
  {
    "id": 154583789,
    "name": "postman",
    "full_name": "comecero/postman",
    "description": "Postman collections for API testing",
    "fork": false,
    "created_at": "2018-10-24T23:48:31Z",
    "updated_at": "2019-08-22T15:19:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21204916,
    "owner_login": "comecero",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/21204916?v=4",
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "testing"
    ]
  },
  {
    "id": 106688072,
    "name": "postman",
    "full_name": "abhishektappp/postman",
    "description": "testing endpoints",
    "fork": false,
    "created_at": "2017-10-12T12:11:33Z",
    "updated_at": "2017-10-12T12:11:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32737557,
    "owner_login": "abhishektappp",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/32737557?v=4",
    "tags": [
      "test",
      "testing",
      "endpoint",
      "points",
      "endpoints"
    ]
  },
  {
    "id": 81798458,
    "name": "postman",
    "full_name": "PoeticSubterfuge/postman",
    "description": null,
    "fork": false,
    "created_at": "2017-02-13T07:45:06Z",
    "updated_at": "2017-02-13T07:45:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22222313,
    "owner_login": "PoeticSubterfuge",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/22222313?v=4",
    "tags": []
  },
  {
    "id": 96555870,
    "name": "TIY-week7-day5-project",
    "full_name": "zachmorse/TIY-week7-day5-project",
    "description": "create an API for testing via Postman. Should send JSON directly from the database to postman via routes",
    "fork": false,
    "created_at": "2017-07-07T16:18:07Z",
    "updated_at": "2017-07-07T16:34:45Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 23346917,
    "owner_login": "zachmorse",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/23346917?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "data",
      "testing",
      "database",
      "route",
      "send",
      "routes",
      "directly"
    ]
  },
  {
    "id": 80372834,
    "name": "bound-ttr",
    "full_name": "Xantier/bound-ttr",
    "description": "Automated boundary testing framework based on Postman collections and database assertions",
    "fork": false,
    "created_at": "2017-01-29T21:10:28Z",
    "updated_at": "2019-03-01T04:27:26Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 2392775,
    "owner_login": "Xantier",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/2392775?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "data",
      "testing",
      "database",
      "based",
      "framework",
      "assert",
      "assertion",
      "boundary"
    ]
  },
  {
    "id": 97756745,
    "name": "mean-test1",
    "full_name": "vpapazov/mean-test1",
    "description": "testing request/update of the data through postman. ",
    "fork": false,
    "created_at": "2017-07-19T20:08:24Z",
    "updated_at": "2017-07-19T20:10:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11355230,
    "owner_login": "vpapazov",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/11355230?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "data",
      "testing",
      "request",
      "update"
    ]
  },
  {
    "id": 153952610,
    "name": "RESTy",
    "full_name": "Kevinoh47/RESTy",
    "description": "react.js application for testing REST APIs, similar to Postman",
    "fork": false,
    "created_at": "2018-10-20T22:08:34Z",
    "updated_at": "2019-10-10T21:41:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3741082,
    "owner_login": "Kevinoh47",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/3741082?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "application",
      "react"
    ]
  },
  {
    "id": 145627376,
    "name": "vscode-apiclient",
    "full_name": "dayemsiddiqui/vscode-apiclient",
    "description": "Postman like vscode extension for testing APIs within vscode",
    "fork": false,
    "created_at": "2018-08-21T22:47:40Z",
    "updated_at": "2018-08-21T22:53:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 9693176,
    "owner_login": "dayemsiddiqui",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/9693176?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "code",
      "extension",
      "within",
      "vscode"
    ]
  },
  {
    "id": 240128652,
    "name": "TestingBackup",
    "full_name": "tvaroglu/TestingBackup",
    "description": "Backup repo for Postman and k6 testing files",
    "fork": false,
    "created_at": "2020-02-12T22:29:58Z",
    "updated_at": "2020-03-23T15:11:07Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58891447,
    "owner_login": "tvaroglu",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/58891447?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "file",
      "files"
    ]
  },
  {
    "id": 161843672,
    "name": "auto-eng-proj",
    "full_name": "kostanzhoglo/auto-eng-proj",
    "description": "Some code to automate testing of API in Postman",
    "fork": false,
    "created_at": "2018-12-14T21:44:45Z",
    "updated_at": "2018-12-14T21:46:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30388021,
    "owner_login": "kostanzhoglo",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/30388021?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "code",
      "automat",
      "automate"
    ]
  },
  {
    "id": 35385485,
    "name": "jenkman",
    "full_name": "timemachine3030/jenkman",
    "description": "Jenkins CI testing of node API servers with Postman/Newman",
    "fork": false,
    "created_at": "2015-05-10T19:48:48Z",
    "updated_at": "2018-02-08T16:20:09Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 338063,
    "owner_login": "timemachine3030",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/338063?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "server",
      "node",
      "servers"
    ]
  },
  {
    "id": 248478381,
    "name": "k6-load-testing",
    "full_name": "TechGeekD/k6-load-testing",
    "description": "Create & run k6 load testing script",
    "fork": false,
    "created_at": "2020-03-19T10:51:13Z",
    "updated_at": "2020-03-23T10:44:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 8087460,
    "owner_login": "TechGeekD",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/8087460?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "script",
      "load"
    ]
  },
  {
    "id": 240821019,
    "name": "401-28-react-api-testing-app",
    "full_name": "doug97703/401-28-react-api-testing-app",
    "description": "An app similar to Postman for testing API routes. Built on React",
    "fork": false,
    "created_at": "2020-02-16T02:46:07Z",
    "updated_at": "2020-03-04T18:43:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 50133058,
    "owner_login": "doug97703",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/50133058?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "route",
      "routes"
    ]
  },
  {
    "id": 118089723,
    "name": "postman",
    "full_name": "anujtiwari05/postman",
    "description": "This repository is for API  testing",
    "fork": false,
    "created_at": "2018-01-19T07:01:29Z",
    "updated_at": "2019-06-15T08:26:34Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 34908204,
    "owner_login": "anujtiwari05",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/34908204?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "repos",
      "repository"
    ]
  },
  {
    "id": 141478282,
    "name": "PostmanYelp",
    "full_name": "Jesse-Penber/PostmanYelp",
    "description": "API testing on Yelp Fusion in Postman, using JSON and Javascript",
    "fork": false,
    "created_at": "2018-07-18T19:04:19Z",
    "updated_at": "2018-07-20T20:47:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41349257,
    "owner_login": "Jesse-Penber",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/41349257?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "script"
    ]
  },
  {
    "id": 138736713,
    "name": "PostmanDemo",
    "full_name": "jainishkpd/PostmanDemo",
    "description": null,
    "fork": false,
    "created_at": "2018-06-26T12:44:25Z",
    "updated_at": "2018-06-26T12:45:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30043533,
    "owner_login": "jainishkpd",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30043533?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 122472878,
    "name": "postmanCollections",
    "full_name": "deepakjaggi/postmanCollections",
    "description": null,
    "fork": false,
    "created_at": "2018-02-22T12:01:58Z",
    "updated_at": "2018-05-25T07:34:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26724632,
    "owner_login": "deepakjaggi",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/26724632?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 121357740,
    "name": "PostmanLogin",
    "full_name": "KingSoloMona/PostmanLogin",
    "description": null,
    "fork": false,
    "created_at": "2018-02-13T08:32:39Z",
    "updated_at": "2018-02-13T08:32:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30595611,
    "owner_login": "KingSoloMona",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/30595611?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 158262617,
    "name": "postman",
    "full_name": "jnafolayan/postman",
    "description": "minimal api testing interface",
    "fork": false,
    "created_at": "2018-11-19T17:09:33Z",
    "updated_at": "2018-11-20T04:09:21Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44870530,
    "owner_login": "jnafolayan",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/44870530?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "face",
      "interface",
      "mini",
      "minimal"
    ]
  },
  {
    "id": 161052802,
    "name": "RAWDATA_E2018_Exercise4_3-testing",
    "full_name": "JonasMGit/RAWDATA_E2018_Exercise4_3-testing",
    "description": "testing postman",
    "fork": false,
    "created_at": "2018-12-09T15:23:25Z",
    "updated_at": "2018-12-10T14:21:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17292555,
    "owner_login": "JonasMGit",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/17292555?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 227934755,
    "name": "PostmanGettingStarted",
    "full_name": "jeisenbergTechtonic/PostmanGettingStarted",
    "description": null,
    "fork": false,
    "created_at": "2019-12-13T22:49:52Z",
    "updated_at": "2019-12-13T22:52:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51173111,
    "owner_login": "jeisenbergTechtonic",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51173111?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 99050227,
    "name": "nman-bdd",
    "full_name": "Micah-N/nman-bdd",
    "description": "Postman/Newman API testing using the 'Postman-BDD' library",
    "fork": false,
    "created_at": "2017-08-01T23:04:16Z",
    "updated_at": "2017-08-01T23:13:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 29662198,
    "owner_login": "Micah-N",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/29662198?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "library"
    ]
  },
  {
    "id": 59385468,
    "name": "jetman",
    "full_name": "hantuzun/jetman",
    "description": "A better tool for testing APIs",
    "fork": false,
    "created_at": "2016-05-21T23:10:31Z",
    "updated_at": "2020-03-02T17:57:12Z",
    "stargazers_count": 23,
    "watchers_count": 23,
    "forks": 0,
    "watchers": 23,
    "score": 1,
    "owner_id": 2770895,
    "owner_login": "hantuzun",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/2770895?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "tool",
      "better"
    ]
  },
  {
    "id": 205783089,
    "name": "postmancontracttest",
    "full_name": "gururajhm/postmancontracttest",
    "description": "postman contract testing",
    "fork": false,
    "created_at": "2019-09-02T05:30:19Z",
    "updated_at": "2019-09-03T17:20:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3702097,
    "owner_login": "gururajhm",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/3702097?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "contract"
    ]
  },
  {
    "id": 146475696,
    "name": "pmat",
    "full_name": "josuamanuel/pmat",
    "description": "postman automation testing",
    "fork": false,
    "created_at": "2018-08-28T16:27:32Z",
    "updated_at": "2019-04-11T12:57:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 39583890,
    "owner_login": "josuamanuel",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/39583890?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "automat",
      "automation"
    ]
  },
  {
    "id": 249818745,
    "name": "nodejs-test",
    "full_name": "amathm/nodejs-test",
    "description": "testing postman and nodejs",
    "fork": false,
    "created_at": "2020-03-24T21:10:45Z",
    "updated_at": "2020-03-24T21:13:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16358458,
    "owner_login": "amathm",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/16358458?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "node",
      "nodejs"
    ]
  },
  {
    "id": 183025789,
    "name": "Postman-USG",
    "full_name": "johntenezaca7/Postman-USG",
    "description": "Using Postman's Newman and Jenkins to create a monitoring system for an automated testing suite.",
    "fork": false,
    "created_at": "2019-04-23T13:53:00Z",
    "updated_at": "2019-05-02T18:57:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 28611728,
    "owner_login": "johntenezaca7",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/28611728?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "auto",
      "automat",
      "system",
      "automate",
      "automated",
      "monitor",
      "suite",
      "monitoring"
    ]
  },
  {
    "id": 174174657,
    "name": "postman-api",
    "full_name": "WondrousSquirrel/postman-api",
    "description": null,
    "fork": false,
    "created_at": "2019-03-06T15:52:03Z",
    "updated_at": "2019-03-07T16:12:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 18142093,
    "owner_login": "WondrousSquirrel",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/18142093?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 25633634,
    "name": "sendcloud-postman",
    "full_name": "allmonday/sendcloud-postman",
    "description": null,
    "fork": false,
    "created_at": "2014-10-23T11:28:28Z",
    "updated_at": "2014-10-24T08:04:52Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 2917822,
    "owner_login": "allmonday",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/2917822?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 117375939,
    "name": "postman-runner",
    "full_name": "coatsnmore/postman-runner",
    "description": "Opinionated Postman Collection Runner for advanced API testing",
    "fork": false,
    "created_at": "2018-01-13T20:30:07Z",
    "updated_at": "2018-04-28T10:06:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2763721,
    "owner_login": "coatsnmore",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/2763721?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "advance",
      "advanced"
    ]
  },
  {
    "id": 143575014,
    "name": "postman-integration",
    "full_name": "rodrigosenger/postman-integration",
    "description": null,
    "fork": false,
    "created_at": "2018-08-05T01:35:58Z",
    "updated_at": "2018-11-07T12:31:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10156623,
    "owner_login": "rodrigosenger",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/10156623?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 200875528,
    "name": "Postman_Redline",
    "full_name": "w100frt/Postman_Redline",
    "description": null,
    "fork": false,
    "created_at": "2019-08-06T15:12:10Z",
    "updated_at": "2019-08-06T15:18:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41997349,
    "owner_login": "w100frt",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/41997349?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 161302850,
    "name": "POSTMAN_interface",
    "full_name": "ChalmersRobotPostman/POSTMAN_interface",
    "description": null,
    "fork": false,
    "created_at": "2018-12-11T08:35:39Z",
    "updated_at": "2018-12-11T08:37:07Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45686768,
    "owner_login": "ChalmersRobotPostman",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/45686768?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 234312819,
    "name": "CRUD-Postman",
    "full_name": "Sarveshjhanwar/CRUD-Postman",
    "description": null,
    "fork": false,
    "created_at": "2020-01-16T12:14:25Z",
    "updated_at": "2020-01-17T07:26:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47262165,
    "owner_login": "Sarveshjhanwar",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/47262165?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 244882311,
    "name": "LAB-postman",
    "full_name": "todztor1984/LAB-postman",
    "description": null,
    "fork": false,
    "created_at": "2020-03-04T11:23:40Z",
    "updated_at": "2020-03-04T11:31:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 52730803,
    "owner_login": "todztor1984",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/52730803?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 239475694,
    "name": "postman-blog",
    "full_name": "postmanlabs/postman-blog",
    "description": null,
    "fork": false,
    "created_at": "2020-02-10T09:41:00Z",
    "updated_at": "2020-03-20T17:30:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10251060,
    "owner_login": "postmanlabs",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/10251060?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 1434820,
    "name": "postman-splash",
    "full_name": "obeattie/postman-splash",
    "description": null,
    "fork": false,
    "created_at": "2011-03-03T12:10:25Z",
    "updated_at": "2013-10-13T16:25:35Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 5988,
    "owner_login": "obeattie",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/5988?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 80216622,
    "name": "MeetupPostman",
    "full_name": "jhenaoz/MeetupPostman",
    "description": null,
    "fork": false,
    "created_at": "2017-01-27T15:00:41Z",
    "updated_at": "2017-01-27T15:00:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2055110,
    "owner_login": "jhenaoz",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/2055110?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 73812889,
    "name": "plugin-postman",
    "full_name": "redline13/plugin-postman",
    "description": null,
    "fork": false,
    "created_at": "2016-11-15T12:46:01Z",
    "updated_at": "2018-10-10T07:58:24Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 3903698,
    "owner_login": "redline13",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/3903698?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 113273443,
    "name": "ARCHIVED-simple_http_postman",
    "full_name": "XccelerateOrg/ARCHIVED-simple_http_postman",
    "description": "Simple HTTP for testing Postman",
    "fork": false,
    "created_at": "2017-12-06T05:34:04Z",
    "updated_at": "2018-01-17T09:33:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 24907171,
    "owner_login": "XccelerateOrg",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/24907171?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 177233854,
    "name": "cookies-test-header-postman",
    "full_name": "treygithub/cookies-test-header-postman",
    "description": "testing header and cookies postman style chia librarry",
    "fork": false,
    "created_at": "2019-03-23T02:18:14Z",
    "updated_at": "2019-03-23T02:21:52Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 33182842,
    "owner_login": "treygithub",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/33182842?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "header",
      "style",
      "cookies"
    ]
  },
  {
    "id": 194604642,
    "name": "postman-vm-package-injector",
    "full_name": "jerowang/postman-vm-package-injector",
    "description": null,
    "fork": false,
    "created_at": "2019-07-01T05:20:59Z",
    "updated_at": "2019-07-11T04:59:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16468982,
    "owner_login": "jerowang",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/16468982?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 166793480,
    "name": "medium-postman-testing",
    "full_name": "bornfight/medium-postman-testing",
    "description": null,
    "fork": false,
    "created_at": "2019-01-21T10:17:54Z",
    "updated_at": "2019-01-30T09:59:48Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 3583407,
    "owner_login": "bornfight",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/3583407?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 246356616,
    "name": "PostManHelper",
    "full_name": "tsudodog/PostManHelper",
    "description": null,
    "fork": false,
    "created_at": "2020-03-10T16:49:08Z",
    "updated_at": "2020-03-10T17:37:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 29548050,
    "owner_login": "tsudodog",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/29548050?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 219755270,
    "name": "postman-routing-exercise",
    "full_name": "ncoughlin/postman-routing-exercise",
    "description": "Bootcamp Express App testing routing and testing with Postman",
    "fork": false,
    "created_at": "2019-11-05T13:45:13Z",
    "updated_at": "2019-11-07T19:20:11Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3167700,
    "owner_login": "ncoughlin",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/3167700?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "routing"
    ]
  },
  {
    "id": 228789243,
    "name": "smart_house_postman",
    "full_name": "Torvictor/smart_house_postman",
    "description": "For testing API of smart house",
    "fork": false,
    "created_at": "2019-12-18T08:04:32Z",
    "updated_at": "2020-01-14T05:48:11Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 38391733,
    "owner_login": "Torvictor",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/38391733?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "smart"
    ]
  },
  {
    "id": 176357663,
    "name": "CRUDMongoExpress",
    "full_name": "emirjemmali/CRUDMongoExpress",
    "description": "For testing,you can use postman",
    "fork": false,
    "created_at": "2019-03-18T19:41:33Z",
    "updated_at": "2019-03-18T19:52:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44018871,
    "owner_login": "emirjemmali",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/44018871?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 216735282,
    "name": "yapi-plugin-export-postman-json",
    "full_name": "EickeOe/yapi-plugin-export-postman-json",
    "description": null,
    "fork": false,
    "created_at": "2019-10-22T06:05:55Z",
    "updated_at": "2020-01-15T09:41:52Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 22267244,
    "owner_login": "EickeOe",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/22267244?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 147935327,
    "name": "postman-collection",
    "full_name": "vibhudadhichi/postman-collection",
    "description": "Automated API testing framework using Postman Jenkins Newman",
    "fork": false,
    "created_at": "2018-09-08T13:22:22Z",
    "updated_at": "2018-09-08T13:23:48Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 14141170,
    "owner_login": "vibhudadhichi",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/14141170?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "framework"
    ]
  },
  {
    "id": 81129803,
    "name": "apis-and-postman-v-000",
    "full_name": "DEV-learn-co-students/apis-and-postman-v-000",
    "description": null,
    "fork": false,
    "created_at": "2017-02-06T20:26:32Z",
    "updated_at": "2017-02-06T20:26:32Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 8825410,
    "owner_login": "DEV-learn-co-students",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/8825410?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 204039033,
    "name": "postman-qademo",
    "full_name": "cpressler/postman-qademo",
    "description": "An example of using maven and postman for testing apis",
    "fork": false,
    "created_at": "2019-08-23T17:04:58Z",
    "updated_at": "2019-08-23T20:35:05Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1030822,
    "owner_login": "cpressler",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1030822?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "example",
      "maven"
    ]
  },
  {
    "id": 170028377,
    "name": "Test-Automation-API-Testing-with-Postman",
    "full_name": "sza313/Test-Automation-API-Testing-with-Postman",
    "description": "API testing sample project with Postman",
    "fork": false,
    "created_at": "2019-02-10T21:18:02Z",
    "updated_at": "2019-02-10T21:26:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 24241788,
    "owner_login": "sza313",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/24241788?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "sample"
    ]
  },
  {
    "id": 126024343,
    "name": "postman",
    "full_name": "TakuCoder/postman",
    "description": "Postman is a REST API testing tool for Android devices. It helps to test REST API without desktops. can submit a HTTP request with several headers, parameters and raw request body by 6 different HTTP methods including GET, POST, HEAD, PUT, DELETE and PATCH. HTTP response can be shown as three styles including pretty, raw and preview. Response status code and headers are also supported in Postman-Android. Currently in Development Stage",
    "fork": false,
    "created_at": "2018-03-20T13:47:04Z",
    "updated_at": "2020-03-09T08:39:18Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 2,
    "watchers": 3,
    "score": 1,
    "owner_id": 13318707,
    "owner_login": "TakuCoder",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/13318707?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "request",
      "tool",
      "code",
      "help",
      "response",
      "rent",
      "stat",
      "view",
      "method",
      "ever",
      "support",
      "methods",
      "including",
      "header",
      "status",
      "parameter",
      "review",
      "style",
      "helps",
      "desktop",
      "three",
      "supported",
      "several",
      "devices",
      "desktops"
    ]
  },
  {
    "id": 155298347,
    "name": "restler",
    "full_name": "tiagohm/restler",
    "description": "Restler is a beautiful and powerful Android app for quickly testing REST API anywhere and anytime.",
    "fork": false,
    "created_at": "2018-10-30T00:11:24Z",
    "updated_at": "2020-03-29T22:27:34Z",
    "stargazers_count": 19,
    "watchers_count": 19,
    "forks": 4,
    "watchers": 19,
    "score": 1,
    "owner_id": 16495338,
    "owner_login": "tiagohm",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/16495338?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "powerful",
      "quickly"
    ]
  },
  {
    "id": 238456574,
    "name": "Postman",
    "full_name": "SaneleNkosi/Postman",
    "description": "API testing",
    "fork": false,
    "created_at": "2020-02-05T13:27:37Z",
    "updated_at": "2020-02-05T13:27:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 60699373,
    "owner_login": "SaneleNkosi",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/60699373?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 209939186,
    "name": "melody-api-test-tool",
    "full_name": "melodyWxy/melody-api-test-tool",
    "description": "this is a web tool for testing apis, like postman…",
    "fork": false,
    "created_at": "2019-09-21T06:51:46Z",
    "updated_at": "2020-02-25T03:54:20Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 44901373,
    "owner_login": "melodyWxy",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/44901373?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "tool"
    ]
  },
  {
    "id": 51982148,
    "name": "apiTesting",
    "full_name": "aditisen/apiTesting",
    "description": "api testing using postman",
    "fork": false,
    "created_at": "2016-02-18T05:38:36Z",
    "updated_at": "2016-02-18T05:38:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17308486,
    "owner_login": "aditisen",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/17308486?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 219868156,
    "name": "PostmanProject",
    "full_name": "Purushothamanan/PostmanProject",
    "description": "Run Api testing using postman",
    "fork": false,
    "created_at": "2019-11-05T23:11:42Z",
    "updated_at": "2019-11-05T23:29:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 55029541,
    "owner_login": "Purushothamanan",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/55029541?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 128648282,
    "name": "postman-api-test",
    "full_name": "soledad-fernandez/postman-api-test",
    "description": "API testing using postman",
    "fork": false,
    "created_at": "2018-04-08T14:14:47Z",
    "updated_at": "2018-04-08T14:14:47Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10940943,
    "owner_login": "soledad-fernandez",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/10940943?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 123917517,
    "name": "POSTMANTEST",
    "full_name": "kamal-bhatt/POSTMANTEST",
    "description": "use for testing api",
    "fork": false,
    "created_at": "2018-03-05T12:39:46Z",
    "updated_at": "2019-01-16T06:50:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22490116,
    "owner_login": "kamal-bhatt",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/22490116?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 201450171,
    "name": "APItest",
    "full_name": "steffmcmullan/APItest",
    "description": "testing API s with Postman",
    "fork": false,
    "created_at": "2019-08-09T10:56:21Z",
    "updated_at": "2019-08-09T12:37:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51993783,
    "owner_login": "steffmcmullan",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/51993783?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 217512699,
    "name": "PostmanTest-WeatherTest",
    "full_name": "SnehaRajB/PostmanTest-WeatherTest",
    "description": "Postman Tests for testing Weather API",
    "fork": false,
    "created_at": "2019-10-25T10:45:54Z",
    "updated_at": "2019-10-25T10:46:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57000230,
    "owner_login": "SnehaRajB",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/57000230?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 240101004,
    "name": "Postman-API",
    "full_name": "ahutch21/Postman-API",
    "description": "Files for testing API in Postman",
    "fork": false,
    "created_at": "2020-02-12T19:49:10Z",
    "updated_at": "2020-02-12T19:49:10Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31278443,
    "owner_login": "ahutch21",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/31278443?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 242461467,
    "name": "API_Postman",
    "full_name": "sahaiswat/API_Postman",
    "description": null,
    "fork": false,
    "created_at": "2020-02-23T05:22:31Z",
    "updated_at": "2020-02-23T22:32:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 61317806,
    "owner_login": "sahaiswat",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/61317806?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 117924168,
    "name": "api-postman",
    "full_name": "jogijatin15/api-postman",
    "description": "API testing using Newman (Postman CLI)",
    "fork": false,
    "created_at": "2018-01-18T03:01:47Z",
    "updated_at": "2018-03-14T05:10:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 17865993,
    "owner_login": "jogijatin15",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/17865993?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 206964139,
    "name": "api-tests-postman",
    "full_name": "NageshJoy007/api-tests-postman",
    "description": "Perform api testing using postman",
    "fork": false,
    "created_at": "2019-09-07T12:19:39Z",
    "updated_at": "2019-09-07T16:37:45Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16208506,
    "owner_login": "NageshJoy007",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/16208506?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "form"
    ]
  },
  {
    "id": 207528819,
    "name": "APIDataDriverTestingWithPostman",
    "full_name": "raghwendra-sonu/APIDataDriverTestingWithPostman",
    "description": "https://medium.com/@Raghwendra.sonu/data-driven-testing-with-postman-using-csv-and-json-files-c4f112015eb3?source=friends_link&sk=d0e70700ef7d717ecb4c86dded9552ef",
    "fork": false,
    "created_at": "2019-09-10T10:21:39Z",
    "updated_at": "2019-11-14T03:48:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7844894,
    "owner_login": "raghwendra-sonu",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/7844894?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "file",
      "json",
      "http",
      "files",
      "https",
      "source",
      "link",
      "drive",
      "driven",
      "friend"
    ]
  },
  {
    "id": 228353837,
    "name": "postmanrepo",
    "full_name": "Prafulkumarbheemanathi/postmanrepo",
    "description": "creating for testing web services with API",
    "fork": false,
    "created_at": "2019-12-16T09:48:25Z",
    "updated_at": "2019-12-16T11:00:48Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57483099,
    "owner_login": "Prafulkumarbheemanathi",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/57483099?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "service",
      "services",
      "creating"
    ]
  },
  {
    "id": 83566258,
    "name": "PostmanRESTService",
    "full_name": "jameswentworth/PostmanRESTService",
    "description": "Structuring tests for API Web REST Service testing and automation using Java, JS etc.",
    "fork": false,
    "created_at": "2017-03-01T14:54:18Z",
    "updated_at": "2017-03-01T14:54:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 26117494,
    "owner_login": "jameswentworth",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/26117494?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "tests",
      "tests ",
      "auto",
      "automat",
      "automation"
    ]
  },
  {
    "id": 149172245,
    "name": "POSTMAN-SCRIPTS",
    "full_name": "sindhureddy2903/POSTMAN-SCRIPTS",
    "description": "API testing on real-time books api of trello.com",
    "fork": false,
    "created_at": "2018-09-17T18:47:23Z",
    "updated_at": "2018-09-17T19:21:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25784327,
    "owner_login": "sindhureddy2903",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/25784327?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "book",
      "books",
      "trello"
    ]
  },
  {
    "id": 167958540,
    "name": "postman_api_test_example",
    "full_name": "saif-beast/postman_api_test_example",
    "description": "Collection of code reference for testing api in postman",
    "fork": false,
    "created_at": "2019-01-28T12:27:02Z",
    "updated_at": "2019-01-28T12:27:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41823093,
    "owner_login": "saif-beast",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/41823093?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "code",
      "reference"
    ]
  },
  {
    "id": 173055599,
    "name": "API_Postman-Newman",
    "full_name": "VanessaXuLi/API_Postman-Newman",
    "description": null,
    "fork": false,
    "created_at": "2019-02-28T06:34:46Z",
    "updated_at": "2019-02-28T06:45:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 48055166,
    "owner_login": "VanessaXuLi",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/48055166?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 205871299,
    "name": "postman-collection",
    "full_name": "marishkavasiuk/postman-collection",
    "description": "REST API testing with postman",
    "fork": false,
    "created_at": "2019-09-02T14:12:00Z",
    "updated_at": "2019-09-02T14:26:05Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22868519,
    "owner_login": "marishkavasiuk",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/22868519?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 233606025,
    "name": "Postman_API_Test",
    "full_name": "crystal178/Postman_API_Test",
    "description": "This is for APP API testing",
    "fork": false,
    "created_at": "2020-01-13T13:48:54Z",
    "updated_at": "2020-01-15T07:36:50Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 36843796,
    "owner_login": "crystal178",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/36843796?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 214487587,
    "name": "FoodBankApiPostman",
    "full_name": "ThomasW0221/FoodBankApiPostman",
    "description": null,
    "fork": false,
    "created_at": "2019-10-11T16:54:52Z",
    "updated_at": "2019-10-12T01:32:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40696002,
    "owner_login": "ThomasW0221",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40696002?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 140499117,
    "name": "api-testing-postman-bdd",
    "full_name": "gouthamik1/api-testing-postman-bdd",
    "description": "API testing using postman in BDD style",
    "fork": false,
    "created_at": "2018-07-10T23:53:21Z",
    "updated_at": "2018-07-10T23:57:07Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 39345113,
    "owner_login": "gouthamik1",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/39345113?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "style"
    ]
  },
  {
    "id": 196607386,
    "name": "REST_API_Testing_POSTMAN",
    "full_name": "qaespence/REST_API_Testing_POSTMAN",
    "description": "REST API testing using Postman for the site https://gorest.co.in",
    "fork": false,
    "created_at": "2019-07-12T15:58:08Z",
    "updated_at": "2019-08-10T03:28:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43244945,
    "owner_login": "qaespence",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/43244945?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "rest",
      "http",
      "https",
      "site"
    ]
  },
  {
    "id": 189385758,
    "name": "tadayApiPostman",
    "full_name": "qaitive/tadayApiPostman",
    "description": null,
    "fork": false,
    "created_at": "2019-05-30T09:32:24Z",
    "updated_at": "2019-05-30T09:41:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37244429,
    "owner_login": "qaitive",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/37244429?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 211065956,
    "name": "api-testing-postman",
    "full_name": "umangbudhwar/api-testing-postman",
    "description": "Demo project for automating API testing.",
    "fork": false,
    "created_at": "2019-09-26T10:46:33Z",
    "updated_at": "2019-09-26T11:29:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 14281150,
    "owner_login": "umangbudhwar",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/14281150?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "automat",
      "automating"
    ]
  },
  {
    "id": 216082426,
    "name": "postman_api_v1",
    "full_name": "twilliamscsd/postman_api_v1",
    "description": null,
    "fork": false,
    "created_at": "2019-10-18T18:13:18Z",
    "updated_at": "2019-11-13T19:19:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 39810350,
    "owner_login": "twilliamscsd",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/39810350?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 239275721,
    "name": "api-testing-with-postman",
    "full_name": "defiant-dj04/api-testing-with-postman",
    "description": null,
    "fork": false,
    "created_at": "2020-02-09T09:11:41Z",
    "updated_at": "2020-02-16T18:13:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 33468586,
    "owner_login": "defiant-dj04",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/33468586?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 133872474,
    "name": "postman_backup_api_test",
    "full_name": "ivanryuu/postman_backup_api_test",
    "description": null,
    "fork": false,
    "created_at": "2018-05-17T21:57:04Z",
    "updated_at": "2020-03-29T12:01:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3419886,
    "owner_login": "ivanryuu",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/3419886?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 98208954,
    "name": "api-postman-test",
    "full_name": "Isaiah-LeBlanc/api-postman-test",
    "description": null,
    "fork": false,
    "created_at": "2017-07-24T16:00:49Z",
    "updated_at": "2017-07-24T16:00:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30326253,
    "owner_login": "Isaiah-LeBlanc",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/30326253?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 161398695,
    "name": "postal-service",
    "full_name": "DavyJ0nes/postal-service",
    "description": "Simple postman testing against API",
    "fork": false,
    "created_at": "2018-12-11T21:54:58Z",
    "updated_at": "2018-12-12T09:12:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7294200,
    "owner_login": "DavyJ0nes",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/7294200?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 131674773,
    "name": "API-Postman-Chloe-",
    "full_name": "chloeboss/API-Postman-Chloe-",
    "description": "Automate testing with the Collection Runner ",
    "fork": false,
    "created_at": "2018-05-01T04:03:49Z",
    "updated_at": "2018-05-23T05:06:47Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 36338702,
    "owner_login": "chloeboss",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/36338702?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 182097085,
    "name": "Test-Api",
    "full_name": "Angsumanroy/Test-Api",
    "description": "Sample Api for testing in postman",
    "fork": false,
    "created_at": "2019-04-18T13:54:22Z",
    "updated_at": "2019-04-18T14:10:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 49455321,
    "owner_login": "Angsumanroy",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/49455321?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 179335977,
    "name": "API-testing",
    "full_name": "SimerjeetWalia/API-testing",
    "description": "Api testing using postman and restAssured",
    "fork": false,
    "created_at": "2019-04-03T17:14:52Z",
    "updated_at": "2019-04-03T18:22:50Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46979156,
    "owner_login": "SimerjeetWalia",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/46979156?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "rest"
    ]
  },
  {
    "id": 239748214,
    "name": "custom-shop-api-postman",
    "full_name": "billbeeio/custom-shop-api-postman",
    "description": "A postman collection for testing a Billbee custom shop api implementation",
    "fork": false,
    "created_at": "2020-02-11T11:42:33Z",
    "updated_at": "2020-02-11T12:11:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32762572,
    "owner_login": "billbeeio",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/32762572?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "testing",
      "postman collection",
      "implement",
      "implementation",
      "shop",
      "custom"
    ]
  },
  {
    "id": 242509054,
    "name": "postman_api_automation",
    "full_name": "arjunsk/postman_api_automation",
    "description": null,
    "fork": false,
    "created_at": "2020-02-23T12:01:26Z",
    "updated_at": "2020-02-23T12:06:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 9638314,
    "owner_login": "arjunsk",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/9638314?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 245438932,
    "name": "hack-api-postman",
    "full_name": "hughhopkins/hack-api-postman",
    "description": null,
    "fork": false,
    "created_at": "2020-03-06T14:22:01Z",
    "updated_at": "2020-03-06T14:54:12Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2920542,
    "owner_login": "hughhopkins",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/2920542?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 245399581,
    "name": "api-sample-flask-postman",
    "full_name": "vit-ganich/api-sample-flask-postman",
    "description": "Flask app for API testing with Postman",
    "fork": false,
    "created_at": "2020-03-06T11:13:05Z",
    "updated_at": "2020-03-06T12:29:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 36228694,
    "owner_login": "vit-ganich",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/36228694?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 119142124,
    "name": "q-postman",
    "full_name": "Digender/q-postman",
    "description": "A postman like app for api testing",
    "fork": false,
    "created_at": "2018-01-27T07:10:29Z",
    "updated_at": "2018-01-27T07:10:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 4971901,
    "owner_login": "Digender",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/4971901?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "postman like"
    ]
  },
  {
    "id": 216732303,
    "name": "postman-collections",
    "full_name": "hackoregon/postman-collections",
    "description": "Postman Collection Exports for API testing ",
    "fork": false,
    "created_at": "2019-10-22T05:45:22Z",
    "updated_at": "2019-11-11T05:11:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6343574,
    "owner_login": "hackoregon",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/6343574?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 203851519,
    "name": "Message-board-API",
    "full_name": "GarlandLai/Message-board-API",
    "description": "Practice creating API and testing through postman",
    "fork": false,
    "created_at": "2019-08-22T18:31:17Z",
    "updated_at": "2019-08-22T21:32:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 48932602,
    "owner_login": "GarlandLai",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/48932602?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "creating"
    ]
  },
  {
    "id": 39001898,
    "name": "mobbr-api-tests",
    "full_name": "mobbr/mobbr-api-tests",
    "description": "POSTMAN-scripts for API endpoint testing.",
    "fork": false,
    "created_at": "2015-07-13T09:01:00Z",
    "updated_at": "2015-07-13T09:01:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 710804,
    "owner_login": "mobbr",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/710804?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "script",
      "endpoint",
      "scripts"
    ]
  },
  {
    "id": 124559541,
    "name": "dkan-postman",
    "full_name": "dafeder/dkan-postman",
    "description": "Postman collection for testing DKAN APIs",
    "fork": false,
    "created_at": "2018-03-09T15:40:47Z",
    "updated_at": "2018-03-09T15:40:47Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 309671,
    "owner_login": "dafeder",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/309671?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing"
    ]
  },
  {
    "id": 192481648,
    "name": "postman-webex-meetings-xml",
    "full_name": "CiscoDevNet/postman-webex-meetings-xml",
    "description": "Webex Meetings XML API - Postman collection for reference and testing",
    "fork": false,
    "created_at": "2019-06-18T06:44:22Z",
    "updated_at": "2020-03-13T20:31:55Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 8827988,
    "owner_login": "CiscoDevNet",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/8827988?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "reference"
    ]
  },
  {
    "id": 216602709,
    "name": "tsr-postman-tests",
    "full_name": "margiani/tsr-postman-tests",
    "description": "Postman test collection for tsrpay.com client API testing",
    "fork": false,
    "created_at": "2019-10-21T15:30:27Z",
    "updated_at": "2019-10-21T15:36:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15003884,
    "owner_login": "margiani",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/15003884?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "client"
    ]
  },
  {
    "id": 123305512,
    "name": "Postman-Collection-for-VMware-Fusion-API-1.0",
    "full_name": "vmwarecode/Postman-Collection-for-VMware-Fusion-API-1.0",
    "description": null,
    "fork": false,
    "created_at": "2018-02-28T15:40:14Z",
    "updated_at": "2018-02-28T15:40:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 12194195,
    "owner_login": "vmwarecode",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/12194195?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 206338892,
    "name": "BBDN-Collab-Postman-REST",
    "full_name": "blackboard/BBDN-Collab-Postman-REST",
    "description": "This repository contains a postman collection for testing the Collaborate REST APIs.",
    "fork": false,
    "created_at": "2019-09-04T14:28:49Z",
    "updated_at": "2019-09-04T14:42:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 1282638,
    "owner_login": "blackboard",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1282638?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "repo",
      "testing",
      "postman collection",
      "repos",
      "repository",
      "contain"
    ]
  },
  {
    "id": 195776640,
    "name": "Postman-Load-Testing-App",
    "full_name": "bnaddison/Postman-Load-Testing-App",
    "description": "An open source and simple application for load testing with Postman collections using Newman.",
    "fork": false,
    "created_at": "2019-07-08T09:08:41Z",
    "updated_at": "2019-07-10T23:01:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42801329,
    "owner_login": "bnaddison",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/42801329?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "testing",
      "application",
      "load",
      "source",
      "open"
    ]
  },
  {
    "id": 213912287,
    "name": "ScorpioBroker-Postman",
    "full_name": "michaeI-s/ScorpioBroker-Postman",
    "description": "Postman collection for testing implementation status of the Scorpio NGSI-LD Broker",
    "fork": false,
    "created_at": "2019-10-09T12:26:24Z",
    "updated_at": "2019-12-13T01:02:03Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 54945591,
    "owner_login": "michaeI-s",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/54945591?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "implement",
      "stat",
      "implementation",
      "status"
    ]
  },
  {
    "id": 127412433,
    "name": "LoadTesting.withpostmanis.fun",
    "full_name": "Ayushverma8/LoadTesting.withpostmanis.fun",
    "description": "Helping developers to convert Postman collection to Load testing tools.",
    "fork": false,
    "created_at": "2018-03-30T09:57:25Z",
    "updated_at": "2018-10-04T10:58:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 15349623,
    "owner_login": "Ayushverma8",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/15349623?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "tool",
      "develop",
      "convert",
      "tools",
      "developer",
      "developers"
    ]
  },
  {
    "id": 191379250,
    "name": "Api_TestingFramework",
    "full_name": "sunnyCN34/Api_TestingFramework",
    "description": "Automated testing of API endpoint using postman collections ",
    "fork": false,
    "created_at": "2019-06-11T13:39:00Z",
    "updated_at": "2019-06-11T13:42:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 29710912,
    "owner_login": "sunnyCN34",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/29710912?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "collections",
      "testing",
      "postman collection",
      "endpoint",
      "postman collections"
    ]
  },
  {
    "id": 201471857,
    "name": "PostmanCollection",
    "full_name": "AndreyMaydanyuk/PostmanCollection",
    "description": "repository for testing with postman",
    "fork": false,
    "created_at": "2019-08-09T13:23:14Z",
    "updated_at": "2019-08-09T15:04:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 53942844,
    "owner_login": "AndreyMaydanyuk",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/53942844?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "testing",
      "repos",
      "repository"
    ]
  },
  {
    "id": 241825061,
    "name": "postmanCollection",
    "full_name": "SumSubstance/postmanCollection",
    "description": null,
    "fork": false,
    "created_at": "2020-02-20T07:54:57Z",
    "updated_at": "2020-02-20T08:01:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46716545,
    "owner_login": "SumSubstance",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/46716545?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 219198694,
    "name": "postmanCollections",
    "full_name": "shanakaweerasinghe/postmanCollections",
    "description": null,
    "fork": false,
    "created_at": "2019-11-02T18:47:46Z",
    "updated_at": "2019-11-08T19:02:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 22147070,
    "owner_login": "shanakaweerasinghe",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22147070?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 86394337,
    "name": "postmanCollections",
    "full_name": "Vijayabaskar03/postmanCollections",
    "description": null,
    "fork": false,
    "created_at": "2017-03-27T23:37:14Z",
    "updated_at": "2017-03-27T23:37:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 24304928,
    "owner_login": "Vijayabaskar03",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/24304928?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 75900843,
    "name": "edm-postman-collections",
    "full_name": "mytardis/edm-postman-collections",
    "description": "Postman collections for testing",
    "fork": false,
    "created_at": "2016-12-08T03:51:29Z",
    "updated_at": "2016-12-08T03:51:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1234844,
    "owner_login": "mytardis",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/1234844?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "testing"
    ]
  },
  {
    "id": 145001355,
    "name": "postman-collections",
    "full_name": "jaxxstone/postman-collections",
    "description": "copied from /grantorchard for testing vRA automation",
    "fork": false,
    "created_at": "2018-08-16T14:44:24Z",
    "updated_at": "2018-08-16T14:47:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15974596,
    "owner_login": "jaxxstone",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15974596?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "automat",
      "automation",
      "grant",
      "copied"
    ]
  },
  {
    "id": 159285492,
    "name": "Postman-Collection",
    "full_name": "DhrutiShahSparkle/Postman-Collection",
    "description": null,
    "fork": false,
    "created_at": "2018-11-27T06:14:52Z",
    "updated_at": "2018-11-27T06:25:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45381904,
    "owner_login": "DhrutiShahSparkle",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/45381904?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 205661750,
    "name": "postman_collection",
    "full_name": "AndriiL/postman_collection",
    "description": null,
    "fork": false,
    "created_at": "2019-09-01T10:35:37Z",
    "updated_at": "2019-09-01T10:47:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 24550689,
    "owner_login": "AndriiL",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/24550689?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 235199266,
    "name": "Postman_Collection",
    "full_name": "TrosinaM/Postman_Collection",
    "description": null,
    "fork": false,
    "created_at": "2020-01-20T21:06:44Z",
    "updated_at": "2020-01-21T16:03:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 18024838,
    "owner_login": "TrosinaM",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/18024838?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 250253240,
    "name": "Postman-request-collection-dummy-",
    "full_name": "Story-TellerX/Postman-request-collection-dummy-",
    "description": "This is first performance of my REST testing with Postman",
    "fork": false,
    "created_at": "2020-03-26T12:32:06Z",
    "updated_at": "2020-03-26T12:36:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 61885326,
    "owner_login": "Story-TellerX",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/61885326?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "form",
      "perform",
      "performance"
    ]
  },
  {
    "id": 250647911,
    "name": "bwaf-postman-collections",
    "full_name": "bwolmarans/bwaf-postman-collections",
    "description": null,
    "fork": false,
    "created_at": "2020-03-27T21:07:50Z",
    "updated_at": "2020-03-27T21:09:48Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 4404271,
    "owner_login": "bwolmarans",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/4404271?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 99628011,
    "name": "esb-stp-postman-collection",
    "full_name": "nzx-prash/esb-stp-postman-collection",
    "description": "Postman collection for testing Straight Through Processing  - Red Current",
    "fork": false,
    "created_at": "2017-08-07T23:04:06Z",
    "updated_at": "2017-08-07T23:05:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 20763079,
    "owner_login": "nzx-prash",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/20763079?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "rent"
    ]
  },
  {
    "id": 78666405,
    "name": "postman_collection_example",
    "full_name": "qaclub/postman_collection_example",
    "description": "Example of using postman collections for automating REST API testing",
    "fork": false,
    "created_at": "2017-01-11T18:21:30Z",
    "updated_at": "2017-01-11T18:21:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 19352771,
    "owner_login": "qaclub",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/19352771?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "collections",
      "testing",
      "postman collection",
      "auto",
      "automat",
      "postman collections",
      "automating"
    ]
  },
  {
    "id": 170207066,
    "name": "connectall-postman-collections",
    "full_name": "dougbass/connectall-postman-collections",
    "description": null,
    "fork": false,
    "created_at": "2019-02-11T21:43:09Z",
    "updated_at": "2019-02-11T21:50:08Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1144273,
    "owner_login": "dougbass",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1144273?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 189625254,
    "name": "postman-collections-public",
    "full_name": "bgarlow/postman-collections-public",
    "description": null,
    "fork": false,
    "created_at": "2019-05-31T16:25:20Z",
    "updated_at": "2019-05-31T19:09:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21367625,
    "owner_login": "bgarlow",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/21367625?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 167336847,
    "name": "postman-tfe-collection",
    "full_name": "nehrman/postman-tfe-collection",
    "description": null,
    "fork": false,
    "created_at": "2019-01-24T09:05:28Z",
    "updated_at": "2019-01-24T09:05:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 12544810,
    "owner_login": "nehrman",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/12544810?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 207670593,
    "name": "Postman-Collection-ARP",
    "full_name": "yzfvroom/Postman-Collection-ARP",
    "description": null,
    "fork": false,
    "created_at": "2019-09-10T21:59:18Z",
    "updated_at": "2019-09-18T23:13:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 38794887,
    "owner_login": "yzfvroom",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/38794887?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 206349498,
    "name": "amio-postman-collection",
    "full_name": "amio-io/amio-postman-collection",
    "description": null,
    "fork": false,
    "created_at": "2019-09-04T15:16:47Z",
    "updated_at": "2020-01-13T09:37:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13884288,
    "owner_login": "amio-io",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/13884288?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 224880563,
    "name": "Onboarding.Postman.Collection",
    "full_name": "YouLend/Onboarding.Postman.Collection",
    "description": null,
    "fork": false,
    "created_at": "2019-11-29T15:39:38Z",
    "updated_at": "2019-11-29T15:39:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58297271,
    "owner_login": "YouLend",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/58297271?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 248604257,
    "name": "Postman-test-collection",
    "full_name": "atanasovpld/Postman-test-collection",
    "description": null,
    "fork": false,
    "created_at": "2020-03-19T21:01:50Z",
    "updated_at": "2020-03-19T21:01:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 62113693,
    "owner_login": "atanasovpld",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/62113693?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 245716127,
    "name": "postman-collection-testing",
    "full_name": "anilkk/postman-collection-testing",
    "description": "Demo app of postman collection testing",
    "fork": false,
    "created_at": "2020-03-07T22:38:55Z",
    "updated_at": "2020-03-07T23:03:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1124415,
    "owner_login": "anilkk",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/1124415?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "testing",
      "postman collection"
    ]
  },
  {
    "id": 216838721,
    "name": "oci_waf_postman_collection",
    "full_name": "BaptisS/oci_waf_postman_collection",
    "description": null,
    "fork": false,
    "created_at": "2019-10-22T14:48:28Z",
    "updated_at": "2020-03-26T11:09:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 56864846,
    "owner_login": "BaptisS",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/56864846?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 66179059,
    "name": "orientdb-postman-collection",
    "full_name": "azusa0127/orientdb-postman-collection",
    "description": null,
    "fork": false,
    "created_at": "2016-08-21T03:16:22Z",
    "updated_at": "2016-08-21T03:16:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 16807434,
    "owner_login": "azusa0127",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/16807434?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 246331892,
    "name": "Collection-for-Bugred.ru",
    "full_name": "zhurba-alina/Collection-for-Bugred.ru",
    "description": "postman collection for testing users.bugred.ru",
    "fork": false,
    "created_at": "2020-03-10T15:02:31Z",
    "updated_at": "2020-03-10T15:26:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13964763,
    "owner_login": "zhurba-alina",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/13964763?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "postman collection",
      "user",
      "users"
    ]
  },
  {
    "id": 100525647,
    "name": "web-rest-postman",
    "full_name": "telosys-templates-v3/web-rest-postman",
    "description": "REST testing with Postman tests collection",
    "fork": false,
    "created_at": "2017-08-16T19:35:25Z",
    "updated_at": "2017-08-16T19:35:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 20856286,
    "owner_login": "telosys-templates-v3",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/20856286?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "testing",
      "tests",
      "tests "
    ]
  },
  {
    "id": 142274236,
    "name": "emailwizard-postman",
    "full_name": "emailwizard/emailwizard-postman",
    "description": "Postman collections which are useful for emailwizard API testing",
    "fork": false,
    "created_at": "2018-07-25T08:56:24Z",
    "updated_at": "2018-07-25T16:58:11Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41673165,
    "owner_login": "emailwizard",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/41673165?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "testing",
      "mail",
      "email",
      "useful",
      "emailwizard"
    ]
  },
  {
    "id": 52350083,
    "name": "gateway-agent-postman",
    "full_name": "KiiPlatform/gateway-agent-postman",
    "description": "postman contents for gateway-agent local REST api testing",
    "fork": false,
    "created_at": "2016-02-23T10:14:43Z",
    "updated_at": "2016-02-23T10:14:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3078752,
    "owner_login": "KiiPlatform",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/3078752?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "local",
      "gateway",
      "agent",
      "content",
      "contents"
    ]
  },
  {
    "id": 69216250,
    "name": "restful",
    "full_name": "aschambers/restful",
    "description": "creating a restful api using the node-restful library, and testing with postman.",
    "fork": false,
    "created_at": "2016-09-26T05:35:57Z",
    "updated_at": "2016-09-26T05:37:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16850576,
    "owner_login": "aschambers",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/16850576?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "rest",
      "node",
      "library",
      "restful",
      "creating"
    ]
  },
  {
    "id": 80252291,
    "name": "jboss-api",
    "full_name": "michaelepley/jboss-api",
    "description": "EE 7 REST api with JPA.  Postman for testing",
    "fork": false,
    "created_at": "2017-01-27T22:41:50Z",
    "updated_at": "2018-08-03T13:30:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 937497,
    "owner_login": "michaelepley",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/937497?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 182198685,
    "name": "RestApi-CRUD-Operations",
    "full_name": "Rutuja177/RestApi-CRUD-Operations",
    "description": "I have created 3 APIs( Heroes, Product, category) created in php and mysql. And testing it on POSTMAN",
    "fork": false,
    "created_at": "2019-04-19T03:58:44Z",
    "updated_at": "2019-04-19T04:03:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47986024,
    "owner_login": "Rutuja177",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/47986024?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "mysql"
    ]
  },
  {
    "id": 178538644,
    "name": "RestFul-API-Testing-server",
    "full_name": "admindebu/RestFul-API-Testing-server",
    "description": "This is the Server of testing restful web service. and your tool - postman / rest client act as an client.",
    "fork": false,
    "created_at": "2019-03-30T09:31:42Z",
    "updated_at": "2019-06-08T19:00:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46689581,
    "owner_login": "admindebu",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/46689581?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "rest",
      "service",
      "tool",
      "client",
      "restful"
    ]
  },
  {
    "id": 196596255,
    "name": "restful_task_API",
    "full_name": "Dev-Steven/restful_task_API",
    "description": "Created a RESTful task API and testing the API using Postman",
    "fork": false,
    "created_at": "2019-07-12T14:46:55Z",
    "updated_at": "2019-07-17T03:38:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21114178,
    "owner_login": "Dev-Steven",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/21114178?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "task"
    ]
  },
  {
    "id": 105032500,
    "name": "rest-api-testing-demo",
    "full_name": "szmc/rest-api-testing-demo",
    "description": "Repository for demo of rest api testing using different tools(Postman, Jmeter, SoapUI, curl, Rest-Assured)",
    "fork": false,
    "created_at": "2017-09-27T15:00:48Z",
    "updated_at": "2017-09-27T15:04:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 9567171,
    "owner_login": "szmc",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/9567171?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "rest",
      "tool",
      "demo",
      "rent",
      "tools",
      "rest api",
      "curl"
    ]
  },
  {
    "id": 249834793,
    "name": ".Net-Core-MVC-REST-Api",
    "full_name": "fisamodo/.Net-Core-MVC-REST-Api",
    "description": "REST Api made using .NET Core, Entity Framework, Microsoft SQL Server Managment Studio and Postman for testing",
    "fork": false,
    "created_at": "2020-03-24T22:47:27Z",
    "updated_at": "2020-03-25T20:39:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 56238728,
    "owner_login": "fisamodo",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/56238728?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 224702498,
    "name": "SpringBootJSONFileReading",
    "full_name": "Mahalakakshmi/SpringBootJSONFileReading",
    "description": "Reading a JSONObject File and Filtering Objects ,testing using Postman Rest",
    "fork": false,
    "created_at": "2019-11-28T17:39:01Z",
    "updated_at": "2019-11-28T19:03:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22996277,
    "owner_login": "Mahalakakshmi",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22996277?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 179158889,
    "name": "Creating-a-RESTFul-API-With-CRUD-Operations-Using-Flask-and-POSTMAN",
    "full_name": "KrishnaGupta72/Creating-a-RESTFul-API-With-CRUD-Operations-Using-Flask-and-POSTMAN",
    "description": "In this project, We'll show you how to perform CREATE/READ/UPDATE/DELETE requests using Python, Flask and POSTMAN(an API testing app)",
    "fork": false,
    "created_at": "2019-04-02T21:08:00Z",
    "updated_at": "2019-04-02T21:11:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46058679,
    "owner_login": "KrishnaGupta72",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/46058679?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "request",
      "form",
      "requests",
      "perform"
    ]
  },
  {
    "id": 161655015,
    "name": "rest-api-setup",
    "full_name": "bwainaina380/rest-api-setup",
    "description": "This is practice for setting up a REST API with routes and a server and testing that everything is working using Postman client",
    "fork": false,
    "created_at": "2018-12-13T15:03:27Z",
    "updated_at": "2018-12-17T12:57:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 38376660,
    "owner_login": "bwainaina380",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/38376660?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "server",
      "client",
      "route",
      "routes",
      "very",
      "working",
      "ever",
      "practice",
      "setting",
      "every"
    ]
  },
  {
    "id": 31053659,
    "name": "restful-db-interface",
    "full_name": "skyupadhya/restful-db-interface",
    "description": "RESTFUL INVENTORY MANAGEMENT SYSTEM: Rest based inventory management system implemented using Bottle (python based) web framework. System testing was done using Postman REST client.",
    "fork": false,
    "created_at": "2015-02-20T06:27:44Z",
    "updated_at": "2016-10-02T00:42:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 11071792,
    "owner_login": "skyupadhya",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/11071792?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "client",
      "based",
      "implement",
      "framework",
      "manage",
      "python",
      "system",
      "management",
      "implemented",
      "done",
      "inventory"
    ]
  },
  {
    "id": 140914228,
    "name": "ss-pygre",
    "full_name": "aviskase/ss-pygre",
    "description": "simple & stupid \"rest\" api select caller for PostgreSQL for integration testing via Postman",
    "fork": false,
    "created_at": "2018-07-14T03:55:21Z",
    "updated_at": "2018-07-14T04:10:09Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3819473,
    "owner_login": "aviskase",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/3819473?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "rest",
      "call",
      "integration",
      "select",
      "\"rest",
      "stupid"
    ]
  },
  {
    "id": 163047051,
    "name": "REST-CarApp",
    "full_name": "Marqueb82/REST-CarApp",
    "description": "REST-Service for car management allowing viewing list of cars, finding by id, updating, deleting and adding new vehicles.  Used Postman for testing of service. ",
    "fork": false,
    "created_at": "2018-12-25T04:52:25Z",
    "updated_at": "2018-12-25T05:12:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 33797265,
    "owner_login": "Marqueb82",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/33797265?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "service",
      "manage",
      "list",
      "view",
      "management",
      "find",
      "updating",
      "adding",
      "vehicles"
    ]
  },
  {
    "id": 193544594,
    "name": "rent-a-movie",
    "full_name": "cerqueiraedu/rent-a-movie",
    "description": "Rent a Movie - an introduction on using Postman for testing REST APIs",
    "fork": false,
    "created_at": "2019-06-24T16:52:56Z",
    "updated_at": "2019-07-12T17:42:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41631585,
    "owner_login": "cerqueiraedu",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/41631585?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "intro",
      "introduction"
    ]
  },
  {
    "id": 193138872,
    "name": "user-api",
    "full_name": "sverlo/user-api",
    "description": "Simple MVC REST User API + load and API testing (Postman, SoapUI, JMeter)",
    "fork": false,
    "created_at": "2019-06-21T17:47:21Z",
    "updated_at": "2019-06-23T16:29:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32516435,
    "owner_login": "sverlo",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/32516435?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "load"
    ]
  },
  {
    "id": 80963792,
    "name": "WebAPI_HW1",
    "full_name": "patriciafig/WebAPI_HW1",
    "description": "The purpose of this assignment is to work with Postman, become familiar with HTTP, and REST through the testing  framework provided by Postman.",
    "fork": false,
    "created_at": "2017-02-05T02:38:47Z",
    "updated_at": "2017-02-10T05:11:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16803322,
    "owner_login": "patriciafig",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/16803322?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "sign",
      "framework",
      "provide",
      "provided",
      "assignment",
      "familiar",
      "become"
    ]
  },
  {
    "id": 8925825,
    "name": "grails-simple-app",
    "full_name": "johannescarlen/grails-simple-app",
    "description": "A playaround with Grails. Creating a REST post and get with basic authentication. Also some simple domain class scaffolding. Import the postman.json into Postman for API testing.",
    "fork": false,
    "created_at": "2013-03-21T09:57:33Z",
    "updated_at": "2013-12-06T12:51:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 688236,
    "owner_login": "johannescarlen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/688236?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "json",
      "auth",
      "authentication",
      "play",
      "main",
      "class",
      "around",
      "rails",
      "playaround"
    ]
  },
  {
    "id": 65252456,
    "name": "simpleRestAPI",
    "full_name": "zenithtekla/simpleRestAPI",
    "description": "RestAPI made simple, tested with Advanced REST client chromeApp, offered by chromerestclient.com, this App is much simpler, fast and light to perform testing than clumsy, complex Postman UI",
    "fork": false,
    "created_at": "2016-08-09T01:32:23Z",
    "updated_at": "2016-08-12T16:00:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11691367,
    "owner_login": "zenithtekla",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/11691367?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "form",
      "rest",
      "client",
      "tested",
      "perform",
      "light",
      "chrome",
      "complex",
      "offered",
      "restclient",
      "much"
    ]
  },
  {
    "id": 92599490,
    "name": "Create-order-using-oauth-rest-api-in-android",
    "full_name": "tarang777/Create-order-using-oauth-rest-api-in-android",
    "description": "Order not getting created with android app using rest api, but it works well with the postman ie rest api testing tool.",
    "fork": false,
    "created_at": "2017-05-27T13:11:51Z",
    "updated_at": "2017-05-27T13:11:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 20734635,
    "owner_login": "tarang777",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/20734635?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "testing",
      "rest",
      "tool",
      "rest api",
      "getting",
      "android"
    ]
  },
  {
    "id": 200635059,
    "name": "basic-api-with-react-django",
    "full_name": "YoLoADR/basic-api-with-react-django",
    "description": "We will setup a Django app and create a REST API with the Django Rest Framework. We will use Postman for API testing.",
    "fork": false,
    "created_at": "2019-08-05T10:34:54Z",
    "updated_at": "2019-08-05T10:34:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16499678,
    "owner_login": "YoLoADR",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/16499678?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "setup"
    ]
  },
  {
    "id": 191698993,
    "name": "REST-API",
    "full_name": "cmullins777/REST-API",
    "description": "A school database where registered users can retrieve, add, update, and delete courses in the database. This project uses REST API design, Node.js, and Express to create API routes, and the Sequelize ORM for data modeling, validation, and persistence, as well as Postman for testing.",
    "fork": false,
    "created_at": "2019-06-13T05:50:42Z",
    "updated_at": "2019-11-18T23:55:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15165828,
    "owner_login": "cmullins777",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/15165828?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "data",
      "testing",
      "database",
      "user",
      "sign",
      "route",
      "routes",
      "users",
      "update",
      "course",
      "delete",
      "uses",
      "model",
      "design",
      "validation",
      "retrieve",
      "register",
      "persistence",
      "school",
      "modeling"
    ]
  },
  {
    "id": 161524341,
    "name": "php_oop_rest_api",
    "full_name": "brankozecevic/php_oop_rest_api",
    "description": "This is a REST API using PHP and OOP principles. There is also MySQL database that you can use to import on your server (myblog.sql). This REST API is based on CRUD functionality (blog posts and blog categories). For testing use Postman app environment as a REST client.",
    "fork": false,
    "created_at": "2018-12-12T17:45:29Z",
    "updated_at": "2018-12-12T17:53:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45066671,
    "owner_login": "brankozecevic",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/45066671?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "server",
      "client",
      "database",
      "based",
      "environment",
      "function",
      "import",
      "functional",
      "functionality",
      "blog",
      "posts",
      "principles"
    ]
  },
  {
    "id": 190715549,
    "name": "ticket-viewer",
    "full_name": "SeepG/ticket-viewer",
    "description": "Javascript Ticket Viewer built using a simple REST API with NodeJS and Express. PostMan has been used for testing. HTML, Javascript and Bootstrap used for the front-end.",
    "fork": false,
    "created_at": "2019-06-07T09:01:10Z",
    "updated_at": "2019-07-31T07:53:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45259330,
    "owner_login": "SeepG",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/45259330?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "script",
      "built",
      "front",
      "been"
    ]
  },
  {
    "id": 231284840,
    "name": "FSJS-Project-Nine",
    "full_name": "Zandy12/FSJS-Project-Nine",
    "description": "Ninth project of the Full Stack JavaScript techdegree program offered by www.teamtreehouse.com. The project involves building a REST API using Node.js and testing with Postman.",
    "fork": false,
    "created_at": "2020-01-02T01:18:48Z",
    "updated_at": "2020-01-08T00:20:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35899477,
    "owner_login": "Zandy12",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/35899477?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "build",
      "program",
      "tech",
      "building",
      "offered",
      "degree",
      "involves"
    ]
  },
  {
    "id": 128530193,
    "name": "springboot-testing-mysql",
    "full_name": "ivangfr/springboot-testing-mysql",
    "description": "The goals of this project are: 1) Create a simple Spring Boot REST API to manage users called user-service. The database used is MySQL; 2) Explore the utilities and annotations that Spring Boot provides when testing applications. 3) Testing with Postman and Newman",
    "fork": false,
    "created_at": "2018-04-07T13:20:13Z",
    "updated_at": "2020-03-28T11:27:06Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 10564548,
    "owner_login": "ivangfr",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/10564548?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "application",
      "service",
      "call",
      "database",
      "user",
      "util",
      "manage",
      "users",
      "provide",
      "applications",
      "provides",
      "utilities",
      "goal",
      "notation",
      "goals"
    ]
  },
  {
    "id": 169711642,
    "name": "Todo-Api",
    "full_name": "sahilwasan000/Todo-Api",
    "description": "A REST API that lets the user, use the end points and create his own application using the API. It uses Node.js, Express and MongoDB for development and Mocha and Postman for testing purposes.",
    "fork": false,
    "created_at": "2019-02-08T09:32:10Z",
    "updated_at": "2019-04-07T15:56:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32892440,
    "owner_login": "sahilwasan000",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/32892440?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "application",
      "user",
      "develop",
      "points",
      "development",
      "uses",
      "purposes",
      "lets"
    ]
  },
  {
    "id": 123554860,
    "name": "MongoDBTutorial",
    "full_name": "JohnArg/MongoDBTutorial",
    "description": "(Learning Project) The code from a course while learning MongoDB with Node/Express. The result is the creation of a simple REST API using Mongoose and Postman for testing. Mocha, Expect and Supertest were also used for assertions.",
    "fork": false,
    "created_at": "2018-03-02T08:50:29Z",
    "updated_at": "2018-11-01T11:53:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 8913266,
    "owner_login": "JohnArg",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/8913266?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "code",
      "learn",
      "course",
      "learning",
      "result",
      "were",
      "creation",
      "assert",
      "while",
      "assertion"
    ]
  },
  {
    "id": 235235695,
    "name": "booking",
    "full_name": "tomashchuk/booking",
    "description": "REST API Booking Database with JWT authorization (using Bearer). Registration - https://bookingstest.herokuapp.com/auth/register/. Login - https://bookingstest.herokuapp.com/auth/login/ Root api: https://bookingstest.herokuapp.com/api/. Recommended to use Postman for testing purposes.",
    "fork": false,
    "created_at": "2020-01-21T01:58:08Z",
    "updated_at": "2020-01-21T03:03:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58090105,
    "owner_login": "tomashchuk",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/58090105?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "http",
      "auth",
      "https",
      "book",
      "login",
      "purposes",
      "heroku",
      "register",
      "authorization",
      "booking"
    ]
  },
  {
    "id": 205943793,
    "name": "admin-service-api",
    "full_name": "anandjat05/admin-service-api",
    "description": "Project based on Micro-services, I created REST API's, wrote Junit, testing the coverage, bug smell, vulnerability analysis on Sonarqube and static test analysis using Jococo, Jenkins, Postman and Newman deploy through the CI/CD pipeline in ECS cluster using EC2 instances, Dockerhub, Docker Container/image. ",
    "fork": false,
    "created_at": "2019-09-02T22:10:35Z",
    "updated_at": "2019-11-04T22:01:23Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 39242031,
    "owner_login": "anandjat05",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/39242031?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "service",
      "based",
      "line",
      "services",
      "stat",
      "image",
      "unit",
      "pipeline",
      "coverage",
      "instance",
      "vulnerability",
      "instances"
    ]
  },
  {
    "id": 144594204,
    "name": "PostmanIntegration",
    "full_name": "jdlawren/PostmanIntegration",
    "description": "testing postman integration",
    "fork": false,
    "created_at": "2018-08-13T14:51:40Z",
    "updated_at": "2018-08-13T14:53:11Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13338267,
    "owner_login": "jdlawren",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/13338267?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "integration"
    ]
  },
  {
    "id": 215287087,
    "name": "postman-test",
    "full_name": "vishaldot/postman-test",
    "description": "postman testing ",
    "fork": false,
    "created_at": "2019-10-15T11:56:49Z",
    "updated_at": "2019-10-16T11:22:32Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54182868,
    "owner_login": "vishaldot",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/54182868?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 238525562,
    "name": "testing",
    "full_name": "frankgmz123/testing",
    "description": "testing postman",
    "fork": false,
    "created_at": "2020-02-05T18:59:25Z",
    "updated_at": "2020-02-05T18:59:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57681117,
    "owner_login": "frankgmz123",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/57681117?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 133698405,
    "name": "testing_continues",
    "full_name": "luisg18997/testing_continues",
    "description": "practica de testing automatizado con postman, newman, jmeter y jenkins",
    "fork": false,
    "created_at": "2018-05-16T17:00:39Z",
    "updated_at": "2019-05-04T23:36:56Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 26290370,
    "owner_login": "luisg18997",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/26290370?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "auto",
      "automat",
      "newman",
      "jenkins",
      "jmeter",
      "automatizado",
      "practica"
    ]
  },
  {
    "id": 78614306,
    "name": "PostmanTest",
    "full_name": "kiranwilson/PostmanTest",
    "description": null,
    "fork": false,
    "created_at": "2017-01-11T07:35:37Z",
    "updated_at": "2017-01-11T07:35:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25051117,
    "owner_login": "kiranwilson",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/25051117?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 87941001,
    "name": "postmanTest",
    "full_name": "gkielar/postmanTest",
    "description": null,
    "fork": false,
    "created_at": "2017-04-11T14:02:09Z",
    "updated_at": "2018-03-27T14:19:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 27288223,
    "owner_login": "gkielar",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/27288223?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 116050891,
    "name": "PostmanTest",
    "full_name": "Mohsen3p200/PostmanTest",
    "description": null,
    "fork": false,
    "created_at": "2018-01-02T19:45:51Z",
    "updated_at": "2018-01-02T19:45:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26491836,
    "owner_login": "Mohsen3p200",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/26491836?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 239682309,
    "name": "PostmanTests",
    "full_name": "santhiparambalam/PostmanTests",
    "description": null,
    "fork": false,
    "created_at": "2020-02-11T05:17:02Z",
    "updated_at": "2020-02-11T08:32:09Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45686927,
    "owner_login": "santhiparambalam",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/45686927?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 59610957,
    "name": "postman-test1",
    "full_name": "witekcc/postman-test1",
    "description": "integration testing with postman",
    "fork": false,
    "created_at": "2016-05-24T21:47:37Z",
    "updated_at": "2016-05-24T21:47:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10201184,
    "owner_login": "witekcc",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/10201184?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "integration"
    ]
  },
  {
    "id": 117704554,
    "name": "dockerized-newman",
    "full_name": "lpuskas/dockerized-newman",
    "description": "End2End testing w/ postman",
    "fork": false,
    "created_at": "2018-01-16T15:50:13Z",
    "updated_at": "2018-01-16T15:53:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3776655,
    "owner_login": "lpuskas",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/3776655?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 139948895,
    "name": "postman-new",
    "full_name": "SlawomirRhode/postman-new",
    "description": "only for testing purpose",
    "fork": false,
    "created_at": "2018-07-06T07:27:31Z",
    "updated_at": "2018-07-06T07:27:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40883492,
    "owner_login": "SlawomirRhode",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/40883492?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 114692510,
    "name": "testapi",
    "full_name": "userbt1/testapi",
    "description": "testing postman connection to github",
    "fork": false,
    "created_at": "2017-12-18T22:08:33Z",
    "updated_at": "2017-12-18T22:08:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 34663540,
    "owner_login": "userbt1",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/34663540?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "connect",
      "github",
      "connection"
    ]
  },
  {
    "id": 152452474,
    "name": "TestPostmanDevOps",
    "full_name": "user-dyp/TestPostmanDevOps",
    "description": null,
    "fork": false,
    "created_at": "2018-10-10T16:09:29Z",
    "updated_at": "2018-10-11T15:50:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3206854,
    "owner_login": "user-dyp",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/3206854?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 94497950,
    "name": "postman-test",
    "full_name": "mabznz/postman-test",
    "description": null,
    "fork": false,
    "created_at": "2017-06-16T02:40:42Z",
    "updated_at": "2017-06-16T02:40:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5105313,
    "owner_login": "mabznz",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/5105313?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 110657568,
    "name": "Test_postman",
    "full_name": "sleepbruce/Test_postman",
    "description": null,
    "fork": false,
    "created_at": "2017-11-14T07:47:58Z",
    "updated_at": "2017-11-14T08:13:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21098407,
    "owner_login": "sleepbruce",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/21098407?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 237998911,
    "name": "postman-test",
    "full_name": "meg-delaunay/postman-test",
    "description": null,
    "fork": false,
    "created_at": "2020-02-03T15:35:31Z",
    "updated_at": "2020-02-03T15:35:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31994186,
    "owner_login": "meg-delaunay",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/31994186?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 219941474,
    "name": "Postman-testing",
    "full_name": "AntoMullen/Postman-testing",
    "description": "This repo is used for testing postman and the Git hub API",
    "fork": false,
    "created_at": "2019-11-06T07:54:19Z",
    "updated_at": "2019-11-06T07:54:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30256572,
    "owner_login": "AntoMullen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30256572?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "testing"
    ]
  },
  {
    "id": 236785748,
    "name": "postman-test",
    "full_name": "coloradohokie/postman-test",
    "description": null,
    "fork": false,
    "created_at": "2020-01-28T16:48:46Z",
    "updated_at": "2020-01-28T16:48:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58762097,
    "owner_login": "coloradohokie",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/58762097?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 145563852,
    "name": "Entity-Framework-Core",
    "full_name": "SibaDaki/Entity-Framework-Core",
    "description": "WebAPI - Using POSTMAN for testing",
    "fork": false,
    "created_at": "2018-08-21T12:53:52Z",
    "updated_at": "2018-08-22T12:36:21Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17512097,
    "owner_login": "SibaDaki",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/17512097?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 107832413,
    "name": "postman_test",
    "full_name": "lilysmiling/postman_test",
    "description": null,
    "fork": false,
    "created_at": "2017-10-22T02:48:17Z",
    "updated_at": "2017-10-22T02:48:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32890135,
    "owner_login": "lilysmiling",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/32890135?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 92922239,
    "name": "postman_test",
    "full_name": "zzz123455/postman_test",
    "description": null,
    "fork": false,
    "created_at": "2017-05-31T08:18:43Z",
    "updated_at": "2017-05-31T08:54:11Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26320758,
    "owner_login": "zzz123455",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/26320758?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 144866269,
    "name": "postman_tests",
    "full_name": "horseshoe9/postman_tests",
    "description": null,
    "fork": false,
    "created_at": "2018-08-15T14:50:56Z",
    "updated_at": "2018-08-15T18:44:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 4136824,
    "owner_login": "horseshoe9",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/4136824?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 235345055,
    "name": "postman_test",
    "full_name": "IulianaIagodka/postman_test",
    "description": null,
    "fork": false,
    "created_at": "2020-01-21T13:08:38Z",
    "updated_at": "2020-01-21T13:13:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10695285,
    "owner_login": "IulianaIagodka",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/10695285?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 143999986,
    "name": "postman-test",
    "full_name": "Plinzen/postman-test",
    "description": null,
    "fork": false,
    "created_at": "2018-08-08T10:47:49Z",
    "updated_at": "2018-08-08T10:47:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7579691,
    "owner_login": "Plinzen",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/7579691?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 207124319,
    "name": "Postman-test",
    "full_name": "FrauGerman/Postman-test",
    "description": null,
    "fork": false,
    "created_at": "2019-09-08T14:26:36Z",
    "updated_at": "2019-09-08T14:46:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54103719,
    "owner_login": "FrauGerman",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/54103719?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 158456480,
    "name": "postman-testing",
    "full_name": "themightykai90/postman-testing",
    "description": "Summary of Postman Pre-Req and Test Scripts useful in API testing",
    "fork": false,
    "created_at": "2018-11-20T21:58:19Z",
    "updated_at": "2018-11-20T21:58:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44848310,
    "owner_login": "themightykai90",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/44848310?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "useful"
    ]
  },
  {
    "id": 176674207,
    "name": "postman-testing",
    "full_name": "sangitar23/postman-testing",
    "description": null,
    "fork": false,
    "created_at": "2019-03-20T07:01:51Z",
    "updated_at": "2019-03-20T07:28:01Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 48080050,
    "owner_login": "sangitar23",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/48080050?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 185907292,
    "name": "Teste-postman",
    "full_name": "viniciuscsreistest/Teste-postman",
    "description": null,
    "fork": false,
    "created_at": "2019-05-10T02:47:38Z",
    "updated_at": "2019-05-10T02:47:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47014979,
    "owner_login": "viniciuscsreistest",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/47014979?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 197231356,
    "name": "postman-test",
    "full_name": "aminamos/postman-test",
    "description": null,
    "fork": false,
    "created_at": "2019-07-16T16:38:36Z",
    "updated_at": "2019-07-16T16:38:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26092352,
    "owner_login": "aminamos",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/26092352?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 210040861,
    "name": "Postman-tests",
    "full_name": "houndsofhell/Postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2019-09-21T19:16:47Z",
    "updated_at": "2019-09-21T19:29:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 55135764,
    "owner_login": "houndsofhell",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/55135764?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 172353263,
    "name": "Postman-tests",
    "full_name": "SACDES7204/Postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2019-02-24T15:16:43Z",
    "updated_at": "2019-11-14T16:47:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42696484,
    "owner_login": "SACDES7204",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/42696484?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 77899241,
    "name": "AndroidPostman",
    "full_name": "HwangJaeYoung/AndroidPostman",
    "description": "AndroidPostman for testing the oneM2M Server",
    "fork": false,
    "created_at": "2017-01-03T08:43:12Z",
    "updated_at": "2017-09-20T16:17:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7313213,
    "owner_login": "HwangJaeYoung",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7313213?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 143761244,
    "name": "postman-tutorial",
    "full_name": "HoldenRiot/postman-tutorial",
    "description": "A very basic Postman tutorial for testing purposes.",
    "fork": false,
    "created_at": "2018-08-06T17:29:37Z",
    "updated_at": "2018-08-09T13:45:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31134130,
    "owner_login": "HoldenRiot",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/31134130?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "very",
      "tutorial",
      "purposes"
    ]
  },
  {
    "id": 213428538,
    "name": "Regression-Testing-Postman",
    "full_name": "MasonChambers/Regression-Testing-Postman",
    "description": "regression testing for postman with newman and formatted html output",
    "fork": false,
    "created_at": "2019-10-07T16:08:18Z",
    "updated_at": "2019-10-07T16:08:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46990548,
    "owner_login": "MasonChambers",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/46990548?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "form",
      "newman",
      "format",
      "html",
      "output",
      "regression",
      "formatted"
    ]
  },
  {
    "id": 85604782,
    "name": "zTestPostman2",
    "full_name": "brankocelic/zTestPostman2",
    "description": null,
    "fork": false,
    "created_at": "2017-03-20T17:14:14Z",
    "updated_at": "2018-04-16T14:58:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26170537,
    "owner_login": "brankocelic",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/26170537?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 88755457,
    "name": "Test-from-postman",
    "full_name": "joshuaeobrian/Test-from-postman",
    "description": null,
    "fork": false,
    "created_at": "2017-04-19T14:36:34Z",
    "updated_at": "2017-04-19T14:36:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 23066776,
    "owner_login": "joshuaeobrian",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/23066776?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 149257864,
    "name": "httpbin-postman-tests",
    "full_name": "doubleedged2005/httpbin-postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2018-09-18T08:55:07Z",
    "updated_at": "2018-09-18T08:56:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42819984,
    "owner_login": "doubleedged2005",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/42819984?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 228446057,
    "name": "postman-backend-testing",
    "full_name": "bestchanges/postman-backend-testing",
    "description": "Example of how to implement HTTP API automation testing using Postman and Newman",
    "fork": false,
    "created_at": "2019-12-16T18:07:00Z",
    "updated_at": "2019-12-17T14:00:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 9627923,
    "owner_login": "bestchanges",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/9627923?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "automat",
      "implement",
      "automation"
    ]
  },
  {
    "id": 122568803,
    "name": "postman-newman-jenkins",
    "full_name": "rodionovmax/postman-newman-jenkins",
    "description": "project for testing API in postman",
    "fork": false,
    "created_at": "2018-02-23T03:29:43Z",
    "updated_at": "2018-02-23T03:29:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 36495062,
    "owner_login": "rodionovmax",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/36495062?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 251084762,
    "name": "IntegrationTest",
    "full_name": "pandeyashish/IntegrationTest",
    "description": "Integration testing for api using postman",
    "fork": false,
    "created_at": "2020-03-29T16:59:04Z",
    "updated_at": "2020-03-30T07:58:45Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13725689,
    "owner_login": "pandeyashish",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/13725689?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing"
    ]
  },
  {
    "id": 197026700,
    "name": "testing-and-automation",
    "full_name": "loopDelicious/testing-and-automation",
    "description": "Workshop for testing and automation in Postman",
    "fork": false,
    "created_at": "2019-07-15T15:36:28Z",
    "updated_at": "2019-07-22T23:45:05Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17693714,
    "owner_login": "loopDelicious",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/17693714?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "automat",
      "automation",
      "shop"
    ]
  },
  {
    "id": 234612174,
    "name": "Hello-Postman-2",
    "full_name": "Gencid/Hello-Postman-2",
    "description": "Repository for testing correct name and status 201",
    "fork": false,
    "created_at": "2020-01-17T18:33:36Z",
    "updated_at": "2020-01-17T18:33:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44362463,
    "owner_login": "Gencid",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/44362463?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "stat",
      "name",
      "status",
      "correct"
    ]
  },
  {
    "id": 90686720,
    "name": "API_Testing_AutomationWithNewmanFromCommandLine",
    "full_name": "OmarFlores1/API_Testing_AutomationWithNewmanFromCommandLine",
    "description": "API testing with Postman and Newman",
    "fork": false,
    "created_at": "2017-05-09T01:02:53Z",
    "updated_at": "2017-05-09T01:02:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 28547425,
    "owner_login": "OmarFlores1",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/28547425?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 235041529,
    "name": "JsonData",
    "full_name": "ritika-shakwar/JsonData",
    "description": "created json data for testing postman",
    "fork": false,
    "created_at": "2020-01-20T07:20:10Z",
    "updated_at": "2020-01-20T07:21:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 56882274,
    "owner_login": "ritika-shakwar",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/56882274?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "data",
      "testing",
      "json"
    ]
  },
  {
    "id": 181372159,
    "name": "litmus",
    "full_name": "avinashb98/litmus",
    "description": "Behaviour driven API testing framework for Postman",
    "fork": false,
    "created_at": "2019-04-14T21:39:28Z",
    "updated_at": "2019-04-14T21:39:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17886999,
    "owner_login": "avinashb98",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/17886999?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "framework",
      "drive",
      "driven"
    ]
  },
  {
    "id": 168756533,
    "name": "Postman-Newman-API-Testing-FCOM-Test-Phrase-",
    "full_name": "shasha131/Postman-Newman-API-Testing-FCOM-Test-Phrase-",
    "description": "How to use postman/Newman to do data driven(large data file) API request and testing ",
    "fork": false,
    "created_at": "2019-02-01T20:31:43Z",
    "updated_at": "2019-02-01T20:35:48Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41800014,
    "owner_login": "shasha131",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/41800014?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "data",
      "testing",
      "request",
      "file",
      "to do",
      "drive",
      "driven"
    ]
  },
  {
    "id": 115293928,
    "name": "AutoTests",
    "full_name": "CoproCodeForces-And-Friends/AutoTests",
    "description": "Some Autotest for testing KFC-API.",
    "fork": false,
    "created_at": "2017-12-25T00:26:36Z",
    "updated_at": "2019-11-14T12:04:59Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 33433403,
    "owner_login": "CoproCodeForces-And-Friends",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/33433403?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 184657737,
    "name": "cs122b-postman-tests",
    "full_name": "brandonteran/cs122b-postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2019-05-02T22:04:53Z",
    "updated_at": "2019-09-17T23:34:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 19476698,
    "owner_login": "brandonteran",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/19476698?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 192630025,
    "name": "HttpBinOrg-Postman-Test",
    "full_name": "ryma083/HttpBinOrg-Postman-Test",
    "description": null,
    "fork": false,
    "created_at": "2019-06-19T00:26:53Z",
    "updated_at": "2019-06-26T18:31:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47198277,
    "owner_login": "ryma083",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/47198277?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 171877231,
    "name": "Test_Automation_Newman_API",
    "full_name": "sza313/Test_Automation_Newman_API",
    "description": "Test automation framework in Postman / Newman for API testing",
    "fork": false,
    "created_at": "2019-02-21T13:30:51Z",
    "updated_at": "2019-03-13T14:24:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 24241788,
    "owner_login": "sza313",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/24241788?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "automat",
      "framework",
      "automation"
    ]
  },
  {
    "id": 234619024,
    "name": "Postman-Repository-okrwf6lgoj",
    "full_name": "Gencid/Postman-Repository-okrwf6lgoj",
    "description": "Repository for testing correct name and status 201",
    "fork": false,
    "created_at": "2020-01-17T19:12:24Z",
    "updated_at": "2020-01-17T19:12:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44362463,
    "owner_login": "Gencid",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/44362463?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "stat",
      "name",
      "status",
      "correct"
    ]
  },
  {
    "id": 55211213,
    "name": "beach-day",
    "full_name": "PepkorIT/beach-day",
    "description": "API integration testing as fun as a day on the beach",
    "fork": false,
    "created_at": "2016-04-01T07:08:42Z",
    "updated_at": "2020-02-04T13:04:41Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 1,
    "watchers": 3,
    "score": 1,
    "owner_id": 18207186,
    "owner_login": "PepkorIT",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/18207186?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "integration",
      "beach"
    ]
  },
  {
    "id": 160908222,
    "name": "newman-smoke-testing",
    "full_name": "vcamaral/newman-smoke-testing",
    "description": "Exemplo de smoke testing utilizando o Newman (Postman Collection Runner).",
    "fork": false,
    "created_at": "2018-12-08T05:44:58Z",
    "updated_at": "2018-12-08T05:53:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 860466,
    "owner_login": "vcamaral",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/860466?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "util",
      "utilizando",
      "smoke"
    ]
  },
  {
    "id": 235815766,
    "name": "selenium-example",
    "full_name": "aplorenzen/selenium-example",
    "description": "An example of how Selenium IDE, selenium-side-runner, Postman and newman can be used to automate regression and smoke testing",
    "fork": false,
    "created_at": "2020-01-23T14:48:26Z",
    "updated_at": "2020-01-23T14:48:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5021336,
    "owner_login": "aplorenzen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/5021336?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "auto",
      "example",
      "automat",
      "newman",
      "runner",
      "automate",
      "side",
      "smoke",
      "regression",
      "selenium"
    ]
  },
  {
    "id": 197917540,
    "name": "Complaint-Lodging",
    "full_name": "Shekhar-Shashank/Complaint-Lodging",
    "description": "It is an android complaint lodging app in which the front end is designed in android studio using java language. The restful API that the app interacts with is made using python flask. The database used is sqlite. And the language used to parse the data from the server is Json. For testing the requests like get and post we used postman as a dummy request generator.",
    "fork": false,
    "created_at": "2019-07-20T10:50:35Z",
    "updated_at": "2019-07-26T06:59:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 52148699,
    "owner_login": "Shekhar-Shashank",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/52148699?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "data",
      "testing",
      "request",
      "rest",
      "server",
      "database",
      "requests",
      "sign",
      "interact",
      "front",
      "java",
      "restful",
      "python",
      "generator",
      "lang",
      "design",
      "parse",
      "flask",
      "designed",
      "android",
      "front end",
      "plain",
      "language",
      "dummy",
      "sqlite",
      "studio",
      "complaint"
    ]
  },
  {
    "id": 249174449,
    "name": "postmanJson",
    "full_name": "PinkaCourt/postmanJson",
    "description": null,
    "fork": false,
    "created_at": "2020-03-22T12:03:41Z",
    "updated_at": "2020-03-22T12:03:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 50292671,
    "owner_login": "PinkaCourt",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/50292671?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 91568417,
    "name": "PostmanJson",
    "full_name": "Angael/PostmanJson",
    "description": null,
    "fork": false,
    "created_at": "2017-05-17T11:23:35Z",
    "updated_at": "2017-05-17T11:23:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21974933,
    "owner_login": "Angael",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/21974933?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 143275857,
    "name": "swagger2postman",
    "full_name": "thneeb/swagger2postman",
    "description": "This little nodejs tool gets a swagger.json on the one hand and generated a postman collection file for testing the specified api on the other hand.",
    "fork": false,
    "created_at": "2018-08-02T09:54:03Z",
    "updated_at": "2018-11-20T08:14:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26486066,
    "owner_login": "thneeb",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/26486066?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "testing",
      "postman collection",
      "file",
      "tool",
      "node",
      "json",
      "generate",
      "spec",
      "swagger",
      "nodejs",
      "generated",
      "gets",
      "little"
    ]
  },
  {
    "id": 199407927,
    "name": "ServletsTask_Part1",
    "full_name": "Mipside/ServletsTask_Part1",
    "description": " Servlets task with CRUD Operations, json files that are testing via Postman",
    "fork": false,
    "created_at": "2019-07-29T08:08:14Z",
    "updated_at": "2019-07-29T08:11:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 45482921,
    "owner_login": "Mipside",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/45482921?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "file",
      "json",
      "files",
      "task",
      "lets"
    ]
  },
  {
    "id": 212612216,
    "name": "Implementing-JWT-using-Node.js",
    "full_name": "mohitsood5934/Implementing-JWT-using-Node.js",
    "description": "I have implemented JSON Web Token for user authentication.I have used POSTMAN API for the testing purpose",
    "fork": false,
    "created_at": "2019-10-03T15:20:58Z",
    "updated_at": "2019-10-03T15:30:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26309496,
    "owner_login": "mohitsood5934",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/26309496?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "user",
      "implement",
      "auth",
      "authentication",
      "implemented"
    ]
  },
  {
    "id": 249718740,
    "name": "EmployeeMangement_CRUD_WebApi",
    "full_name": "SD7689/EmployeeMangement_CRUD_WebApi",
    "description": "JSON Server Employee CRUD API and testing using Postman and Swagger , Days Employee Login and Employee CRUD API using WebAPI ",
    "fork": false,
    "created_at": "2020-03-24T13:42:51Z",
    "updated_at": "2020-03-29T17:07:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59974361,
    "owner_login": "SD7689",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/59974361?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 177665978,
    "name": "Jedi",
    "full_name": "KennethNL/Jedi",
    "description": "This experimental project involved the conversion of a Gherkin-based input file to a JSON-based configuration of Postman with the end goal of API testing.",
    "fork": false,
    "created_at": "2019-03-25T21:16:17Z",
    "updated_at": "2019-04-10T10:01:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44347880,
    "owner_login": "KennethNL",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/44347880?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "file",
      "based",
      "version",
      "config",
      "configuration",
      "experiment",
      "goal",
      "experimental"
    ]
  },
  {
    "id": 198035809,
    "name": "Contact-Keeper-with-React",
    "full_name": "potaeko/Contact-Keeper-with-React",
    "description": "Contact Keeper with JWT authentication created with MongoDB Atlas cloud database, Express, React, Node.js (MERN) , JSON Web Tokens (JWT), Concurrently npm and testing routes with POSTMAN. Project from Udemy online course",
    "fork": false,
    "created_at": "2019-07-21T09:09:44Z",
    "updated_at": "2019-08-27T11:14:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30098599,
    "owner_login": "potaeko",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/30098599?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "data",
      "testing",
      "database",
      "auth",
      "line",
      "route",
      "routes",
      "authentication",
      "rent",
      "course",
      "cloud",
      "current",
      "online",
      "currently"
    ]
  },
  {
    "id": 138470813,
    "name": "node.js-socialNetwork",
    "full_name": "guys1444/node.js-socialNetwork",
    "description": "socialNetwork that ive made in node.js Building an extensive backend API with Node.js & Express Protecting routes/endpoints with JWT (JSON Web Tokens) Extensive API testing with Postman Integrating React with our backend in an elegant way, creating a great workflow Building our frontend to work with the API Using Redux for app state management Creating reducers and actions for our resources Creating many container components that integrate with Redux Testing with the Redux Chrome extension ,MERN STACK",
    "fork": false,
    "created_at": "2018-06-24T09:53:49Z",
    "updated_at": "2018-06-24T09:53:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32614636,
    "owner_login": "guys1444",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/32614636?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "node",
      "contain",
      "endpoint",
      "points",
      "route",
      "manage",
      "endpoints",
      "routes",
      "source",
      "front",
      "stat",
      "creating",
      "extension",
      "backend",
      "rating",
      "action",
      "resource",
      "management",
      "resources",
      "integrate",
      "frontend",
      "container",
      "many",
      "social",
      "workflow",
      "component",
      "components",
      "elegant"
    ]
  },
  {
    "id": 174555369,
    "name": "mern_devconnector",
    "full_name": "SalahEddine007/mern_devconnector",
    "description": "Welcome to \"MERN Stack Front To Back\". In this course we will build an in depth full stack social network application using Node.js, Express, React, Redux and MongoDB along with ES6+. We will start with a bank text editor and end with a deployed full stack application. This course includes...  Building an extensive backend API with Node.js & Express Protecting routes/endpoints with JWT (JSON Web Tokens) Extensive API testing with Postman Integrating React with our backend in an elegant way, creating a great workflow Building our frontend to work with the API Using Redux for app state management Creating reducers and actions for our resources Creating many container components that integrate with Redux Testing with the Redux Chrome extension Creating a build script, securing our keys and deploy to Heroku using Git This is NOT an \"Intro to React\" or \"Intro to Node\" course. It is a practical hands on course for building an app using the incredible MERN stack. I do try and explain everything as I go so it is possible to follow without React/Node experience but it is recommended that you know at least the basics first.",
    "fork": false,
    "created_at": "2019-03-08T14:50:34Z",
    "updated_at": "2019-03-08T14:50:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 34078780,
    "owner_login": "SalahEddine007",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/34078780?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "application",
      "script",
      "contain",
      "endpoint",
      "points",
      "route",
      "build",
      "manage",
      "endpoints",
      "full",
      "routes",
      "star",
      "source",
      "front",
      "stat",
      "creating",
      "course",
      "start",
      "extension",
      "very",
      "backend",
      "rating",
      "action",
      "resource",
      "long",
      "management",
      "stack",
      "ever",
      "building",
      "resources",
      "text",
      "integrate",
      "edit",
      "includes",
      "deployed",
      "frontend",
      "along",
      "container",
      "many",
      "network",
      "social",
      "plain",
      "workflow",
      "basics",
      "component",
      "full stack",
      "components",
      "editor",
      "explain",
      "bank",
      "elegant",
      "least",
      "practica",
      "every"
    ]
  },
  {
    "id": 191496578,
    "name": "API-Test-Lib",
    "full_name": "Krishank/API-Test-Lib",
    "description": "As we all know POSTMAN is a very powerful tool for API Testing this is a Simple POC for proving how can we use postman for API testing, export it collection dynamically and run it from any CI tool",
    "fork": false,
    "created_at": "2019-06-12T04:18:44Z",
    "updated_at": "2019-09-10T01:28:08Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7191100,
    "owner_login": "Krishank",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7191100?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "testing",
      "tool",
      "call",
      "export",
      "very",
      "dynamic",
      "powerful",
      "dynamically",
      "proving"
    ]
  },
  {
    "id": 249724934,
    "name": "webshop-back-config",
    "full_name": "fdmeregildo/webshop-back-config",
    "description": "docker file, database file, integration testing, readme example, postman file, others",
    "fork": false,
    "created_at": "2020-03-24T14:08:00Z",
    "updated_at": "2020-03-24T14:09:52Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15707963,
    "owner_login": "fdmeregildo",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15707963?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "data",
      "testing",
      "file",
      "database",
      "example",
      "integration",
      "read",
      "docker",
      "readme"
    ]
  },
  {
    "id": 145154752,
    "name": "mongotut",
    "full_name": "Greg1992/mongotut",
    "description": "Server set up to communicate with a MongoDB database, using modern security measures to encrypt data. Used POSTMAN and Node testing packages (Mocha and Chai)",
    "fork": false,
    "created_at": "2018-08-17T18:37:07Z",
    "updated_at": "2018-10-26T12:35:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37276159,
    "owner_login": "Greg1992",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/37276159?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "database",
      "package",
      "communicate",
      "packages",
      "security",
      "modern"
    ]
  },
  {
    "id": 184118378,
    "name": "command-line-physician",
    "full_name": "command-line-physician/command-line-physician",
    "description": "Our intention with this app is to let users find natural herbal based remedies for their ailments. Our app allows users to browse our specially curated herb database by name and latin name. Command-Line Physician also allows users to locate the nearest store where they can find their unique remedy, or a local resident who has the herb available to share. Tech stack: Command-line Physician is a RESTful api that utilizes Node, Express, Jest, end-to-end and unit testing. Our testing was carried out by Compass, Robo 3T, and Postman.",
    "fork": false,
    "created_at": "2019-04-29T17:57:06Z",
    "updated_at": "2019-05-29T23:32:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 4,
    "watchers": 0,
    "score": 1,
    "owner_id": 50116559,
    "owner_login": "command-line-physician",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/50116559?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "rest",
      "database",
      "user",
      "based",
      "line",
      "util",
      "spec",
      "local",
      "users",
      "store",
      "name",
      "side",
      "allows",
      "stack",
      "unit",
      "available",
      "find",
      "utilizes",
      "intention"
    ]
  },
  {
    "id": 87771466,
    "name": "Mean-Hotel",
    "full_name": "regeanish/Mean-Hotel",
    "description": "Created a Hotel API where user can add, delete, update hotel name and reviews using NodeJS(Express) and MongoDB. Used RESTful API HTTP client POSTMAN for testing.  Additionally,  building UI for displaying information coming from the server & database about the hotel using AngularJS",
    "fork": false,
    "created_at": "2017-04-10T05:50:10Z",
    "updated_at": "2017-08-21T03:13:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17118506,
    "owner_login": "regeanish",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/17118506?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "form",
      "server",
      "client",
      "database",
      "user",
      "format",
      "build",
      "update",
      "view",
      "delete",
      "info",
      "play",
      "name",
      "infor",
      "information",
      "building",
      "review",
      "display",
      "playing",
      "reviews",
      "hotel"
    ]
  },
  {
    "id": 140987980,
    "name": "face-recognition-api",
    "full_name": "shijiahu/face-recognition-api",
    "description": "- Built a facial recognition system, using React.js as front-end, Node.js and Express.js as back-end server, PostgreSQL as database, Postman as testing tool - Enabling sign up/sign in, recognize face from images features - Deployed the app to Heroku",
    "fork": false,
    "created_at": "2018-07-15T00:49:09Z",
    "updated_at": "2018-11-06T00:21:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 23464077,
    "owner_login": "shijiahu",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/23464077?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "tool",
      "server",
      "database",
      "sign",
      "front",
      "image",
      "face",
      "system",
      "feature",
      "features",
      "images",
      "recognition",
      "facial",
      "sign up"
    ]
  },
  {
    "id": 140487882,
    "name": "face-recognition",
    "full_name": "shijiahu/face-recognition",
    "description": "- Built a facial recognition system, using React.js as front-end, Node.js and Express.js as back-end server, PostgreSQL as database, Postman as testing tool - Enabling sign up/sign in, recognize face from images features - Deployed the app to Heroku",
    "fork": false,
    "created_at": "2018-07-10T21:13:56Z",
    "updated_at": "2018-11-05T23:53:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 23464077,
    "owner_login": "shijiahu",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/23464077?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "data",
      "testing",
      "tool",
      "server",
      "database",
      "sign",
      "front",
      "image",
      "face",
      "system",
      "feature",
      "features",
      "images",
      "recognition",
      "facial",
      "sign up"
    ]
  },
  {
    "id": 251235921,
    "name": "AutomatedAPITesting",
    "full_name": "djcruz93/AutomatedAPITesting",
    "description": "Automate the process of api testing using circleCI and postman",
    "fork": false,
    "created_at": "2020-03-30T07:45:47Z",
    "updated_at": "2020-03-30T09:08:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 51796498,
    "owner_login": "djcruz93",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/51796498?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "process"
    ]
  },
  {
    "id": 190750603,
    "name": "automated-swtesting-withpy",
    "full_name": "HuGomez/automated-swtesting-withpy",
    "description": "Learning about automated software testing with Python, BDD, Selenium WebDriver, and Postman, focusing on web applications",
    "fork": false,
    "created_at": "2019-06-07T13:46:17Z",
    "updated_at": "2019-06-10T22:59:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2131526,
    "owner_login": "HuGomez",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/2131526?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "application",
      "auto",
      "automat",
      "automate",
      "web app",
      "automated",
      "applications",
      "software",
      "river"
    ]
  },
  {
    "id": 117685246,
    "name": "dockerized-newman",
    "full_name": "banzaicloud/dockerized-newman",
    "description": "Automated end-2-end testing with Postman in Docker",
    "fork": false,
    "created_at": "2018-01-16T13:11:00Z",
    "updated_at": "2019-05-27T18:37:24Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 32848483,
    "owner_login": "banzaicloud",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/32848483?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing"
    ]
  },
  {
    "id": 215697817,
    "name": "concourceCI-newman-slack",
    "full_name": "karthick-git/concourceCI-newman-slack",
    "description": "This is an API automation framework built using Postman's Newman CLI (Docker image) integrated with Concourse (a CI tool) for continuous testing and automatic slack reporting feature.",
    "fork": false,
    "created_at": "2019-10-17T03:43:24Z",
    "updated_at": "2020-03-12T05:37:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 48290922,
    "owner_login": "karthick-git",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/48290922?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "tool",
      "auto",
      "automat",
      "framework",
      "built",
      "course",
      "image",
      "automation",
      "report",
      "feature",
      "integrate",
      "automatic",
      "integrated",
      "continuous",
      "slack",
      "reporting"
    ]
  },
  {
    "id": 122041309,
    "name": "Laravel-Articles",
    "full_name": "MaxDrljic/Laravel-Articles",
    "description": "Simple Laravel app made for testing CRUD functionality with Postman.",
    "fork": false,
    "created_at": "2018-02-19T09:29:05Z",
    "updated_at": "2018-02-19T10:22:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25199354,
    "owner_login": "MaxDrljic",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/25199354?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "function",
      "functional",
      "functionality"
    ]
  },
  {
    "id": 130136501,
    "name": "ClassSchedulerUsingSpring",
    "full_name": "amulyachennaboyena/ClassSchedulerUsingSpring",
    "description": "University project:create an application that will change a course schedule  When an application user select the first day of class, the application needs to change the dates in course schedule automatically If a class is canceled due to inclement weather, entire dates should be updated If the class didn’t finish the topics as scheduled, contents of course, quiz and assignment schedule should be updated  You may create a separate UI for testing purposes or utilize a Tool like SoapUI or PostMan.  You will need to use the latest of:          Java 8          Spring Framework          MySQL or Maria DB",
    "fork": false,
    "created_at": "2018-04-19T00:18:13Z",
    "updated_at": "2018-05-08T22:01:01Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35663002,
    "owner_login": "amulyachennaboyena",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/35663002?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "application",
      "call",
      "user",
      "auto",
      "automat",
      "sign",
      "util",
      "update",
      "course",
      "need",
      "class",
      "automatic",
      "needs",
      "automatically",
      "assignment",
      "should",
      "purposes",
      "updated",
      "latest",
      "content",
      "select",
      "schedule",
      "entire",
      "weather",
      "contents"
    ]
  },
  {
    "id": 130367620,
    "name": "classScheduler",
    "full_name": "AmulyaChen/classScheduler",
    "description": "University project:create an application that will change a course schedule  When an application user select the first day of class, the application needs to change the dates in course schedule automatically If a class is canceled due to inclement weather, entire dates should be updated If the class didn’t finish the topics as scheduled, contents of course, quiz and assignment schedule should be updated  You may create a separate UI for testing purposes or utilize a Tool like SoapUI or PostMan.  You will need to use the latest of:          Java 8          Spring Framework          MySQL or Maria DB",
    "fork": false,
    "created_at": "2018-04-20T13:43:16Z",
    "updated_at": "2018-04-20T13:43:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 38562529,
    "owner_login": "AmulyaChen",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/38562529?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "application",
      "call",
      "user",
      "auto",
      "automat",
      "sign",
      "util",
      "update",
      "course",
      "need",
      "class",
      "automatic",
      "needs",
      "automatically",
      "assignment",
      "should",
      "purposes",
      "updated",
      "latest",
      "content",
      "select",
      "schedule",
      "entire",
      "weather",
      "contents"
    ]
  },
  {
    "id": 139741753,
    "name": "BasicAPIWithNodeExpress",
    "full_name": "romeobleonor/BasicAPIWithNodeExpress",
    "description": "Basic API with Node, Express and MongoDB - Performed CRUD and Learned API testing tools - (PostMan) - Introuduction to MongoDB and Mongoose and ROBO 3T",
    "fork": false,
    "created_at": "2018-07-04T15:53:27Z",
    "updated_at": "2018-07-04T16:20:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2036634,
    "owner_login": "romeobleonor",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/2036634?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "form",
      "tool",
      "tools"
    ]
  },
  {
    "id": 187546007,
    "name": "Task-Manager-API",
    "full_name": "jjian4/Task-Manager-API",
    "description": "Create, read, update, delete users and tasks. Uses web tokens for account authentication. Built using Node.js, Express.js, and MongoDB/Mongoose. Used Postman for testing.",
    "fork": false,
    "created_at": "2019-05-20T01:07:05Z",
    "updated_at": "2019-05-23T02:59:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 39073669,
    "owner_login": "jjian4",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/39073669?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "user",
      "auth",
      "read",
      "authentication",
      "users",
      "update",
      "delete",
      "task",
      "token",
      "account",
      "tasks",
      "tokens"
    ]
  },
  {
    "id": 213521986,
    "name": "custom-api-with-express-and-mongodb",
    "full_name": "pui-kuan93/custom-api-with-express-and-mongodb",
    "description": "Creating a custom API using Express & MongoDB (and Postman for testing)",
    "fork": false,
    "created_at": "2019-10-08T01:32:20Z",
    "updated_at": "2019-10-10T03:38:01Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 56125713,
    "owner_login": "pui-kuan93",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/56125713?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "custom"
    ]
  },
  {
    "id": 201847461,
    "name": "knex_testing",
    "full_name": "imjonathanking/knex_testing",
    "description": "I am testing out building an express API using Knex as a SQL query builder/ ORM.  Routes will be tested in Postman.",
    "fork": false,
    "created_at": "2019-08-12T02:59:22Z",
    "updated_at": "2019-08-12T04:55:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44119837,
    "owner_login": "imjonathanking",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/44119837?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "express",
      " express",
      "tested",
      "build",
      "building",
      "query",
      "builder"
    ]
  },
  {
    "id": 219469277,
    "name": "pm-converter",
    "full_name": "qdriven/pm-converter",
    "description": "pm-converter convert postman to different api testing format",
    "fork": false,
    "created_at": "2019-11-04T09:57:52Z",
    "updated_at": "2019-11-28T03:26:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21341419,
    "owner_login": "qdriven",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/21341419?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "form",
      "format",
      "convert",
      "rent",
      "converte",
      "converter"
    ]
  },
  {
    "id": 211287084,
    "name": "go-test",
    "full_name": "spider1998/go-test",
    "description": "Interface testing tool for pure go language development (similar to postman)",
    "fork": false,
    "created_at": "2019-09-27T09:44:00Z",
    "updated_at": "2019-10-31T07:05:18Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 42063601,
    "owner_login": "spider1998",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/42063601?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "tool",
      "develop",
      "development",
      "face",
      "lang",
      "language",
      "pure"
    ]
  },
  {
    "id": 73948533,
    "name": "javascript-at",
    "full_name": "theuggla/javascript-at",
    "description": "ranging from small programs to full applications testing out javascript concepts, both as standalone applications, servers and client applications",
    "fork": false,
    "created_at": "2016-11-16T18:24:52Z",
    "updated_at": "2018-12-12T14:01:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 20565872,
    "owner_login": "theuggla",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/20565872?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "application",
      "script",
      "server",
      "client",
      "full",
      "java",
      "program",
      "small",
      "applications",
      "concept",
      "javascript",
      "both",
      "servers",
      "concepts",
      "standalone",
      "ranging"
    ]
  },
  {
    "id": 226859706,
    "name": "TesterQA-PROEM",
    "full_name": "rominamc/TesterQA-PROEM",
    "description": "Testing manual:documentación. Metodologias agiles.Kanban.Scrum.Ambientes de testing QC/QA. Software para testing de automatización:Registro de bugs:Redmine,Jira.Regresión: Selenium web driver.Katalon recorder.Testing unitario (java):JUnit.Webservice:Postman",
    "fork": false,
    "created_at": "2019-12-09T11:53:47Z",
    "updated_at": "2019-12-18T16:47:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 14793590,
    "owner_login": "rominamc",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/14793590?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "service",
      "document",
      "auto",
      "automat",
      "java",
      "unit",
      "drive",
      "todo",
      "order",
      "mine",
      "river",
      "manua",
      "agile"
    ]
  },
  {
    "id": 151757025,
    "name": "ESB-Training",
    "full_name": "vgane/ESB-Training",
    "description": "Using Mulesoft AnyPointStudio to implement various integration patterns. Uses Java, MySQL DB, MUNIT testing, Postman, SOAP API, Restful API, SOAP UI, maven, AWS SNS, CRM(Salesforce), batchjobs, cronjobs, error_handling",
    "fork": false,
    "created_at": "2018-10-05T17:40:38Z",
    "updated_at": "2019-11-04T19:55:26Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 30202836,
    "owner_login": "vgane",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/30202836?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "implement",
      "integration",
      "various",
      "handling",
      "maven",
      "error",
      "batch"
    ]
  },
  {
    "id": 170832484,
    "name": "Blockchain",
    "full_name": "mdsalik7/Blockchain",
    "description": "Building a Blockchain on Python using Web Application Framework Flask and testing it on Postman",
    "fork": false,
    "created_at": "2019-02-15T08:51:47Z",
    "updated_at": "2019-02-24T20:25:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42892152,
    "owner_login": "mdsalik7",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/42892152?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "testing",
      "chai"
    ]
  },
  {
    "id": 98640565,
    "name": "API-Testing-Framework",
    "full_name": "Akanksha461/API-Testing-Framework",
    "description": "Api testing framework using postman BDD and integrated with Jenkins for CI(continuous integration)",
    "fork": false,
    "created_at": "2017-07-28T10:50:34Z",
    "updated_at": "2018-01-25T16:31:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 27349720,
    "owner_login": "Akanksha461",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/27349720?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "testing",
      "framework",
      "integration",
      "integrate",
      "integrated",
      "continuous"
    ]
  },
  {
    "id": 201517749,
    "name": "note-app",
    "full_name": "luxie11/note-app",
    "description": "An API created for saving user tasks. For API testing used Postman. This API can be user for WEB application creation with React, Vue or any front-end framework. ",
    "fork": false,
    "created_at": "2019-08-09T18:03:55Z",
    "updated_at": "2019-08-09T19:53:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 29857050,
    "owner_login": "luxie11",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/29857050?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "testing",
      "application",
      "user",
      "framework",
      "front",
      "task",
      "creation",
      "tasks",
      "saving"
    ]
  },
  {
    "id": 159670446,
    "name": "QA-automation-programmer",
    "full_name": "TVoroshilova/QA-automation-programmer",
    "description": "At least 2 years experience in Testing Automation Development using known software testing tools and frameworks as Selenium, Appium, Postman, etc. ∙ Experience with Web, DB (SQL/NoSQL) and API testing – Must. ∙ Experience with working over Linux OS and public cloud environments – Must. ∙ Experience with defect tracking system (as GIT, Jira or VSTS/Azure Dev Ops) – Must. ∙ Experience in working with Docker – Advantage.We are seeking an experienced QA automation programmer that will be leading the testing automation activities for our SaaS product. ∙ The QA automation programmer will be part of an innovative team developing a challenging, cutting edge technology Web application for the e-Commerce world. ∙ Main responsibilities: Develop test plans including functional testing, end user testing, stress, performance, reliability and usability testing. o Evaluate product code according to specifications, report and track bugs and fixes. o Execute automatic tests on the product during development and pre-release stages. o Work closely with R&D and product teams on new features, system integration and performance testing as a part of a startup company stationed in Israel. o Participate in the complete development process using the agile methodology. ∙ Academic degree from a known institution.High level English – very good writing skills, fluent speech.The candidate agrees to work from Trust’s offices and not remotely from home.Salary expectations: Up to 2000 USD (Gross salary)",
    "fork": false,
    "created_at": "2018-11-29T13:27:02Z",
    "updated_at": "2018-11-29T13:27:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45455770,
    "owner_login": "TVoroshilova",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/45455770?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "form",
      "tests",
      "application",
      "tool",
      "tests ",
      "user",
      "develop",
      "auto",
      "code",
      "automat",
      "environment",
      "framework",
      "function",
      "spec",
      "integration",
      "star",
      "stat",
      "start",
      "tools",
      "development",
      "environments",
      "very",
      "perform",
      "functional",
      "method",
      "system",
      "automation",
      "working",
      "program",
      "report",
      "feature",
      "tech",
      "cloud",
      "complete",
      "product",
      "public",
      "features",
      "automatic",
      "specific",
      "including",
      "track",
      "software",
      "process",
      "writing",
      "remote",
      "according",
      "performance",
      "world",
      "home",
      "specification",
      "expect",
      "technology",
      "specifications",
      "agile",
      "developing",
      "during",
      "fluent",
      "skills",
      "seek",
      "degree",
      "office",
      "least",
      "release",
      "level",
      "frameworks",
      "tracking"
    ]
  },
  {
    "id": 178413776,
    "name": "PostmanToHtml_Markdown",
    "full_name": "zaycodes/PostmanToHtml_Markdown",
    "description": null,
    "fork": false,
    "created_at": "2019-03-29T13:48:47Z",
    "updated_at": "2019-10-30T11:34:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22375431,
    "owner_login": "zaycodes",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22375431?v=4",
    "pulled": 1,
    "tags": []
  }
]