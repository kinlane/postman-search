[
  {
    "id": 181494579,
    "name": "postman-code-generators",
    "full_name": "postmanlabs/postman-code-generators",
    "description": "Common repository for all code generators shipped with Postman",
    "fork": false,
    "created_at": "2019-04-15T13:38:39Z",
    "updated_at": "2020-04-01T03:23:53Z",
    "stargazers_count": 144,
    "watchers_count": 144,
    "forks": 70,
    "watchers": 144,
    "score": 1,
    "owner_id": 10251060,
    "owner_login": "postmanlabs",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/10251060?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "code",
      "generator"
    ]
  },
  {
    "id": 80538115,
    "name": "shopify-postman",
    "full_name": "lojabasico/shopify-postman",
    "description": "An updated Postman Collection repository for all Shopify API Endpoints",
    "fork": false,
    "created_at": "2017-01-31T16:24:09Z",
    "updated_at": "2020-02-28T10:58:48Z",
    "stargazers_count": 149,
    "watchers_count": 149,
    "forks": 47,
    "watchers": 149,
    "score": 1,
    "owner_id": 3584677,
    "owner_login": "lojabasico",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/3584677?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "points",
      "update",
      "updated"
    ]
  },
  {
    "user": "apigee",
    "repo": "apigee-management-api-postman",
    "pulled": "Organization",
    "id": 42210750,
    "name": "apigee-management-api-postman",
    "full_name": "apigee/apigee-management-api-postman",
    "description": "Official repo of Apigee Management API Postman collection",
    "fork": false,
    "created_at": "2015-09-09T23:46:13Z",
    "updated_at": "2020-02-26T03:13:19Z",
    "forks": 40,
    "open_issues": 3,
    "watchers": 47,
    "network_count": 40,
    "subscribers_count": 26,
    "owner_id": 19557821,
    "owner_login": "apigee",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/19557821?v=4",
    "owner_type": "Organization",
    "tags": [
      "collect",
      "collection",
      "repo"
    ]
  },
  {
    "user": "ganny26",
    "repo": "firebase-notification-postman-collection",
    "pulled": "User",
    "id": 156966361,
    "name": "firebase-notification-postman-collection",
    "full_name": "ganny26/firebase-notification-postman-collection",
    "description": "This repo contains postman collection of firebase REST API",
    "fork": false,
    "created_at": "2018-11-10T09:26:53Z",
    "updated_at": "2020-03-06T18:47:42Z",
    "forks": 18,
    "open_issues": 0,
    "watchers": 24,
    "network_count": 18,
    "subscribers_count": 3,
    "owner_id": 11629190,
    "owner_login": "ganny26",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/11629190?v=4",
    "owner_type": "User",
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "contain",
      "fire",
      "firebase"
    ]
  },
  {
    "user": "AuthorizeNet",
    "repo": "webhooks-postman-collection",
    "pulled": "Organization",
    "id": 72651924,
    "name": "webhooks-postman-collection",
    "full_name": "AuthorizeNet/webhooks-postman-collection",
    "description": "This repository contains a postman collection which allows you to easily configure and manage Authorize.Net Webhooks.",
    "fork": false,
    "created_at": "2016-11-02T15:11:39Z",
    "updated_at": "2020-02-29T14:44:46Z",
    "forks": 22,
    "open_issues": 1,
    "watchers": 10,
    "network_count": 22,
    "subscribers_count": 4,
    "owner_id": 6014037,
    "owner_login": "AuthorizeNet",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/6014037?v=4",
    "owner_type": "Organization",
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "contain",
      "manage",
      "config",
      "allows",
      "easily",
      "configure"
    ]
  },
  {
    "user": "twilio",
    "repo": "wireless-postman-collection",
    "pulled": "Organization",
    "id": 95825518,
    "name": "wireless-postman-collection",
    "full_name": "twilio/wireless-postman-collection",
    "description": "This repository includes a group of Programmable Wireless HTTP requests for your convenience. You can learn more about Programmable Wireless HTTP request formats in the Programmable Wireless Documentation.",
    "fork": false,
    "created_at": "2017-06-29T22:31:30Z",
    "updated_at": "2020-01-28T20:52:34Z",
    "forks": 11,
    "open_issues": 0,
    "watchers": 16,
    "network_count": 11,
    "subscribers_count": 14,
    "owner_id": 109142,
    "owner_login": "twilio",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/109142?v=4",
    "owner_type": "Organization",
    "tags": [
      "repo",
      "request",
      "form",
      "repos",
      "repository",
      "requests",
      "format",
      "learn",
      "more",
      "includes",
      "group"
    ]
  },
  {
    "user": "Rasbandit",
    "repo": "postman-test-server",
    "pulled": "User",
    "id": 153728688,
    "name": "postman-test-server",
    "full_name": "Rasbandit/postman-test-server",
    "description": null,
    "fork": false,
    "created_at": "2018-10-19T04:58:15Z",
    "updated_at": "2018-11-15T16:42:35Z",
    "forks": 34,
    "open_issues": 0,
    "watchers": 0,
    "network_count": 34,
    "subscribers_count": 0,
    "owner_id": 22157796,
    "owner_login": "Rasbandit",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/22157796?v=4",
    "owner_type": "User",
    "tags": []
  },
  {
    "id": 123840000,
    "name": "awesome-newman-html-template",
    "full_name": "MarcosEllys/awesome-newman-html-template",
    "description": " :sunglasses: A newman html report very detailed",
    "fork": false,
    "created_at": "2018-03-04T23:43:34Z",
    "updated_at": "2020-03-04T03:58:21Z",
    "stargazers_count": 53,
    "watchers_count": 53,
    "forks": 48,
    "watchers": 53,
    "score": 1,
    "owner_id": 6751242,
    "owner_login": "MarcosEllys",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/6751242?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "newman",
      "very",
      "html",
      "report",
      "sunglasses"
    ]
  },
  {
    "user": "Azure-Samples",
    "repo": "media-services-v3-rest-postman",
    "pulled": "Organization",
    "id": 133431080,
    "name": "media-services-v3-rest-postman",
    "full_name": "Azure-Samples/media-services-v3-rest-postman",
    "description": "The postman collection in this repository contains REST calls to Azure Media Services v3 APIs.",
    "fork": false,
    "created_at": "2018-05-14T23:01:17Z",
    "updated_at": "2020-01-23T04:45:02Z",
    "forks": 11,
    "open_issues": 3,
    "watchers": 9,
    "network_count": 11,
    "subscribers_count": 36,
    "owner_id": 1844662,
    "owner_login": "Azure-Samples",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1844662?v=4",
    "owner_type": "Organization",
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "call",
      "contain",
      "calls"
    ]
  },
  {
    "user": "avidit",
    "repo": "newman-reporter-slack",
    "pulled": "User",
    "id": 144174658,
    "name": "newman-reporter-slack",
    "full_name": "avidit/newman-reporter-slack",
    "description": "A newman reporter for slack",
    "fork": false,
    "created_at": "2018-08-09T15:56:06Z",
    "updated_at": "2020-02-22T03:27:22Z",
    "forks": 10,
    "open_issues": 5,
    "watchers": 4,
    "network_count": 10,
    "subscribers_count": 1,
    "owner_id": 1406153,
    "owner_login": "avidit",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/1406153?v=4",
    "owner_type": "User",
    "tags": [
      "repo",
      "newman",
      "report",
      "reporter",
      "slack"
    ]
  },
  {
    "user": "postmanlabs",
    "repo": "postman-validator",
    "pulled": "Organization",
    "id": 22014709,
    "name": "postman-validator",
    "full_name": "postmanlabs/postman-validator",
    "description": null,
    "fork": false,
    "created_at": "2014-07-19T17:08:16Z",
    "updated_at": "2019-06-08T13:48:08Z",
    "forks": 5,
    "open_issues": 3,
    "watchers": 2,
    "network_count": 5,
    "subscribers_count": 7,
    "owner_id": 10251060,
    "owner_login": "postmanlabs",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/10251060?v=4",
    "owner_type": "Organization",
    "tags": []
  },
  {
    "user": "droidkfx",
    "repo": "IEX-Postman-Collections",
    "pulled": "User",
    "id": 191413080,
    "name": "IEX-Postman-Collections",
    "full_name": "droidkfx/IEX-Postman-Collections",
    "description": "This is a repository to hold the interface implementation of the IEX cloud api in postman",
    "fork": false,
    "created_at": "2019-06-11T16:49:11Z",
    "updated_at": "2020-03-05T13:20:13Z",
    "forks": 3,
    "open_issues": 0,
    "watchers": 13,
    "network_count": 3,
    "subscribers_count": 1,
    "owner_id": 12535476,
    "owner_login": "droidkfx",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/12535476?v=4",
    "owner_type": "User",
    "tags": [
      " postman",
      "repo",
      "repos",
      "repository",
      "implement",
      "face",
      "implementation",
      "cloud",
      "interface",
      "hold"
    ]
  },
  {
    "user": "sendwyre",
    "repo": "wyre-postman-collection",
    "pulled": "Organization",
    "id": 183311400,
    "name": "wyre-postman-collection",
    "full_name": "sendwyre/wyre-postman-collection",
    "description": "This repo is filled to the brim with sample Postman API requests that allow you to test our back-end endpoints.",
    "fork": false,
    "created_at": "2019-04-24T21:46:31Z",
    "updated_at": "2019-12-17T23:07:15Z",
    "forks": 6,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 6,
    "subscribers_count": 3,
    "owner_id": 6931243,
    "owner_login": "sendwyre",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/6931243?v=4",
    "owner_type": "Organization",
    "tags": [
      "test",
      "repo",
      "request",
      "requests",
      "endpoint",
      "points",
      "sample",
      "endpoints",
      "filled"
    ]
  },
  {
    "user": "DannyDainton",
    "repo": "newman-reporter-htmlextra",
    "pulled": "User",
    "id": 160851438,
    "name": "newman-reporter-htmlextra",
    "full_name": "DannyDainton/newman-reporter-htmlextra",
    "description": "A HTML reporter  for Postman's Command Line Runner, Newman. Includes Non Aggregated Runs broken down by Iterations, Skipped Tests, Console Logs and the handlebars helpers module for better custom templates.",
    "fork": false,
    "created_at": "2018-12-07T16:52:56Z",
    "updated_at": "2020-03-24T02:46:53Z",
    "forks": 34,
    "open_issues": 2,
    "watchers": 107,
    "network_count": 34,
    "subscribers_count": 11,
    "owner_id": 17089546,
    "owner_login": "DannyDainton",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/17089546?v=4",
    "owner_type": "User",
    "tags": [
      "repo",
      "help",
      "plate",
      "module",
      "report",
      "template",
      "custom",
      "handle",
      "reporter",
      "templates",
      "better",
      "helper",
      "helpers"
    ]
  },
  {
    "user": "smooch",
    "repo": "smooch-postman-collection-public",
    "pulled": "Organization",
    "id": 138314017,
    "name": "smooch-postman-collection-public",
    "full_name": "smooch/smooch-postman-collection-public",
    "description": "A public repository for the Smooch Postman Collection",
    "fork": false,
    "created_at": "2018-06-22T14:46:21Z",
    "updated_at": "2020-03-23T12:20:00Z",
    "forks": 3,
    "open_issues": 0,
    "watchers": 2,
    "network_count": 3,
    "subscribers_count": 20,
    "owner_id": 14301989,
    "owner_login": "smooch",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/14301989?v=4",
    "owner_type": "Organization",
    "tags": [
      "repo",
      "repos",
      "repository",
      "public"
    ]
  },
  {
    "user": "nandymandy1",
    "repo": "role_based_authentication_With-MEN",
    "pulled": "User",
    "id": 174181931,
    "name": "role_based_authentication_With-MEN",
    "full_name": "nandymandy1/role_based_authentication_With-MEN",
    "description": "In this repository I have created simple role based authentication using Node.js express mongodb and tested with Postman.",
    "fork": false,
    "created_at": "2019-03-06T16:35:33Z",
    "updated_at": "2020-03-17T19:34:48Z",
    "forks": 6,
    "open_issues": 0,
    "watchers": 14,
    "network_count": 6,
    "subscribers_count": 1,
    "owner_id": 29309671,
    "owner_login": "nandymandy1",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/29309671?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository",
      "based",
      "express",
      "mongo",
      " express",
      "auth",
      "tested",
      "authentication",
      "mongod",
      "mongodb",
      "role"
    ]
  },
  {
    "user": "tines-io",
    "repo": "VirusTotal-Postman-Collection",
    "pulled": "User",
    "id": 152559497,
    "name": "VirusTotal-Postman-Collection",
    "full_name": "tines-io/VirusTotal-Postman-Collection",
    "description": "This repo contains a Postman collection for interacting with the VirusTotal Public API.",
    "fork": false,
    "created_at": "2018-10-11T08:42:55Z",
    "updated_at": "2019-11-06T09:52:03Z",
    "forks": 3,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 3,
    "subscribers_count": 0,
    "owner_id": 39128869,
    "owner_login": "tines-io",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/39128869?v=4",
    "owner_type": "User",
    "tags": [
      "collect",
      "collection",
      "repo",
      "contain",
      "interact",
      "interacting"
    ]
  },
  {
    "user": "HrithikMittal",
    "repo": "Nexus-Account",
    "pulled": "User",
    "id": 188982255,
    "name": "Nexus-Account",
    "full_name": "HrithikMittal/Nexus-Account",
    "description": "It is the backend repository of Mobile App enabling MSMEs to track finances and manage accounts and inventory📱",
    "fork": false,
    "created_at": "2019-05-28T07:59:58Z",
    "updated_at": "2020-03-23T19:30:23Z",
    "forks": 4,
    "open_issues": 2,
    "watchers": 10,
    "network_count": 4,
    "subscribers_count": 1,
    "owner_id": 42075023,
    "owner_login": "HrithikMittal",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/42075023?v=4",
    "owner_type": "User",
    "tags": [
      "repo",
      "repos",
      "repository",
      "manage",
      "backend",
      "track",
      "account",
      "inventory",
      "accounts",
      "enabling"
    ]
  },
  {
    "user": "Nexosis",
    "repo": "nexosis-api-postman",
    "pulled": "Organization",
    "id": 107676036,
    "name": "nexosis-api-postman",
    "full_name": "Nexosis/nexosis-api-postman",
    "description": "Official repository of the Nexosis API Postman collection",
    "fork": false,
    "created_at": "2017-10-20T12:35:03Z",
    "updated_at": "2019-05-16T08:34:53Z",
    "forks": 2,
    "open_issues": 0,
    "watchers": 2,
    "network_count": 2,
    "subscribers_count": 4,
    "owner_id": 15932631,
    "owner_login": "Nexosis",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15932631?v=4",
    "owner_type": "Organization",
    "tags": [
      "collect",
      "collection",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "user": "reportportal",
    "repo": "agent-postman",
    "pulled": "Organization",
    "id": 166978675,
    "name": "agent-postman",
    "full_name": "reportportal/agent-postman",
    "description": "Agent for Postman reporting (based on NewMan runner)",
    "fork": false,
    "created_at": "2019-01-22T10:58:21Z",
    "updated_at": "2019-12-24T03:54:47Z",
    "forks": 2,
    "open_issues": 3,
    "watchers": 6,
    "network_count": 2,
    "subscribers_count": 22,
    "owner_id": 17636279,
    "owner_login": "reportportal",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/17636279?v=4",
    "owner_type": "Organization",
    "tags": [
      "repo",
      "based",
      "runner",
      "report",
      "reporting"
    ]
  },
  {
    "user": "crowcoder",
    "repo": "PostmanDelivers",
    "pulled": "User",
    "id": 213064829,
    "name": "PostmanDelivers",
    "full_name": "crowcoder/PostmanDelivers",
    "description": null,
    "fork": false,
    "created_at": "2019-10-05T20:11:58Z",
    "updated_at": "2020-02-25T21:01:47Z",
    "forks": 2,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 2,
    "subscribers_count": 2,
    "owner_id": 4210624,
    "owner_login": "crowcoder",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/4210624?v=4",
    "owner_type": "User",
    "tags": []
  },
  {
    "user": "adform",
    "repo": "Adform-Postman-Collections",
    "pulled": "Organization",
    "id": 110564561,
    "name": "Adform-Postman-Collections",
    "full_name": "adform/Adform-Postman-Collections",
    "description": "This repository contains Adform API Postman collections",
    "fork": false,
    "created_at": "2017-11-13T15:20:11Z",
    "updated_at": "2019-06-28T13:12:40Z",
    "forks": 2,
    "open_issues": 0,
    "watchers": 0,
    "network_count": 2,
    "subscribers_count": 1,
    "owner_id": 1998909,
    "owner_login": "adform",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/1998909?v=4",
    "owner_type": "Organization",
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "form",
      "repos",
      "repository",
      "contain"
    ]
  },
  {
    "user": "YKKKY",
    "repo": "yaoyi-postman-express-json",
    "pulled": "User",
    "id": 60532197,
    "name": "yaoyi-postman-express-json",
    "full_name": "YKKKY/yaoyi-postman-express-json",
    "description": null,
    "fork": false,
    "created_at": "2016-06-06T13:57:28Z",
    "updated_at": "2016-06-26T10:17:59Z",
    "forks": 2,
    "open_issues": 1,
    "watchers": 0,
    "network_count": 2,
    "subscribers_count": 1,
    "owner_id": 18323447,
    "owner_login": "YKKKY",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/18323447?v=4",
    "owner_type": "User",
    "tags": []
  },
  {
    "user": "tutagomes",
    "repo": "Postman-Testing",
    "pulled": "User",
    "id": 161397888,
    "name": "Postman-Testing",
    "full_name": "tutagomes/Postman-Testing",
    "description": "A repository to store some data and testing scripts used by my tutorial about postman testing.",
    "fork": false,
    "created_at": "2018-12-11T21:47:16Z",
    "updated_at": "2020-03-24T22:53:24Z",
    "forks": 1,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 1,
    "subscribers_count": 2,
    "owner_id": 7077493,
    "owner_login": "tutagomes",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7077493?v=4",
    "owner_type": "User",
    "tags": [
      "test",
      " postman",
      "repo",
      "data",
      "testing",
      "repos",
      "repository",
      "script",
      "scripts",
      "store",
      "tutorial"
    ]
  },
  {
    "user": "Earthport",
    "repo": "rest-api-postman",
    "pulled": "Organization",
    "id": 148662512,
    "name": "rest-api-postman",
    "full_name": "Earthport/rest-api-postman",
    "description": "This repository contains Postman collections to help Earthport clients test their integration into Earthport's APIs",
    "fork": false,
    "created_at": "2018-09-13T15:56:25Z",
    "updated_at": "2019-10-16T12:55:10Z",
    "forks": 0,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 0,
    "subscribers_count": 1,
    "owner_id": 40466066,
    "owner_login": "Earthport",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/40466066?v=4",
    "owner_type": "Organization",
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository",
      "client",
      "contain",
      "help",
      "integration",
      "clients"
    ]
  },
  {
    "user": "arfaram",
    "repo": "ezplatform_rest_api_postman",
    "pulled": "User",
    "id": 178227430,
    "name": "ezplatform_rest_api_postman",
    "full_name": "arfaram/ezplatform_rest_api_postman",
    "description": null,
    "fork": false,
    "created_at": "2019-03-28T15:05:49Z",
    "updated_at": "2020-01-26T10:22:54Z",
    "forks": 0,
    "open_issues": 0,
    "watchers": 3,
    "network_count": 0,
    "subscribers_count": 2,
    "owner_id": 793247,
    "owner_login": "arfaram",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/793247?v=4",
    "owner_type": "User",
    "tags": []
  },
  {
    "id": 166978675,
    "name": "agent-postman",
    "full_name": "reportportal/agent-postman",
    "description": "Agent for Postman reporting (based on NewMan runner)",
    "fork": false,
    "created_at": "2019-01-22T10:58:21Z",
    "updated_at": "2019-12-24T03:54:47Z",
    "stargazers_count": 6,
    "watchers_count": 6,
    "forks": 2,
    "watchers": 6,
    "score": 1,
    "owner_id": 17636279,
    "owner_login": "reportportal",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/17636279?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "based",
      "runner",
      "report",
      "reporting"
    ]
  },
  {
    "id": 110564561,
    "name": "Adform-Postman-Collections",
    "full_name": "adform/Adform-Postman-Collections",
    "description": "This repository contains Adform API Postman collections",
    "fork": false,
    "created_at": "2017-11-13T15:20:11Z",
    "updated_at": "2019-06-28T13:12:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 2,
    "watchers": 0,
    "score": 1,
    "owner_id": 1998909,
    "owner_login": "adform",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/1998909?v=4",
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "form",
      "repos",
      "repository",
      "contain"
    ]
  },
  {
    "id": 161397888,
    "name": "Postman-Testing",
    "full_name": "tutagomes/Postman-Testing",
    "description": "A repository to store some data and testing scripts used by my tutorial about postman testing.",
    "fork": false,
    "created_at": "2018-12-11T21:47:16Z",
    "updated_at": "2020-03-24T22:53:24Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 1,
    "watchers": 3,
    "score": 1,
    "owner_id": 7077493,
    "owner_login": "tutagomes",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7077493?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "data",
      "testing",
      "repos",
      "repository",
      "script",
      "scripts",
      "store",
      "tutorial"
    ]
  },
  {
    "id": 148662512,
    "name": "rest-api-postman",
    "full_name": "Earthport/rest-api-postman",
    "description": "This repository contains Postman collections to help Earthport clients test their integration into Earthport's APIs",
    "fork": false,
    "created_at": "2018-09-13T15:56:25Z",
    "updated_at": "2019-10-16T12:55:10Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 0,
    "watchers": 3,
    "score": 1,
    "owner_id": 40466066,
    "owner_login": "Earthport",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/40466066?v=4",
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository",
      "client",
      "contain",
      "help",
      "integration",
      "clients"
    ]
  },
  {
    "id": 178227430,
    "name": "ezplatform_rest_api_postman",
    "full_name": "arfaram/ezplatform_rest_api_postman",
    "description": null,
    "fork": false,
    "created_at": "2019-03-28T15:05:49Z",
    "updated_at": "2020-01-26T10:22:54Z",
    "stargazers_count": 3,
    "watchers_count": 3,
    "forks": 0,
    "watchers": 3,
    "score": 1,
    "owner_id": 793247,
    "owner_login": "arfaram",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/793247?v=4",
    "tags": []
  },
  {
    "id": 193646786,
    "name": "github-api-test-using-testcafe-postman",
    "full_name": "Nahid71/github-api-test-using-testcafe-postman",
    "description": "This repository is created for showing my  project code to technovilla solution limited.",
    "fork": false,
    "created_at": "2019-06-25T06:20:35Z",
    "updated_at": "2019-07-14T05:54:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 19364433,
    "owner_login": "Nahid71",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/19364433?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos",
      "repository",
      "code",
      "tech",
      "showing",
      "solution",
      "technovilla"
    ]
  },
  {
    "id": 118181235,
    "name": "express-practice",
    "full_name": "michaelbrian93/express-practice",
    "description": "a repo making POST, PUT, DELETE requests with Express & Postman",
    "fork": false,
    "created_at": "2018-01-19T21:37:25Z",
    "updated_at": "2018-01-19T21:38:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 14987708,
    "owner_login": "michaelbrian93",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/14987708?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "request",
      "requests",
      "making"
    ]
  },
  {
    "id": 240128652,
    "name": "TestingBackup",
    "full_name": "tvaroglu/TestingBackup",
    "description": "Backup repo for Postman and k6 testing files",
    "fork": false,
    "created_at": "2020-02-12T22:29:58Z",
    "updated_at": "2020-03-23T15:11:07Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58891447,
    "owner_login": "tvaroglu",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/58891447?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "file",
      "files"
    ]
  },
  {
    "id": 104810035,
    "name": "logspout_newman_reporter",
    "full_name": "shankj3/logspout_newman_reporter",
    "description": "Newman reporter that prints JSON lines for ingestion by logspout",
    "fork": false,
    "created_at": "2017-09-25T22:53:02Z",
    "updated_at": "2017-09-26T00:22:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11891205,
    "owner_login": "shankj3",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/11891205?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "line",
      "report",
      "print",
      "lines",
      "reporter",
      "logs",
      "prints"
    ]
  },
  {
    "id": 144176266,
    "name": "newman-reporter-testrail-extra",
    "full_name": "avidit/newman-reporter-testrail-extra",
    "description": "A newman reporter for testrail",
    "fork": false,
    "created_at": "2018-08-09T16:12:13Z",
    "updated_at": "2020-03-17T22:59:35Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 1406153,
    "owner_login": "avidit",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/1406153?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "newman",
      "report",
      "reporter",
      "testrail"
    ]
  },
  {
    "id": 91668126,
    "name": "newman-reporter-phpunit",
    "full_name": "semlabs/newman-reporter-phpunit",
    "description": "A newman reporter with a PHPUnit like style",
    "fork": false,
    "created_at": "2017-05-18T08:25:39Z",
    "updated_at": "2017-05-19T13:08:53Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 1,
    "watchers": 2,
    "score": 1,
    "owner_id": 16690341,
    "owner_login": "semlabs",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/16690341?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "newman",
      "report",
      "style",
      "reporter"
    ]
  },
  {
    "id": 122210073,
    "name": "redox_integrations_demo",
    "full_name": "cloudmine/redox_integrations_demo",
    "description": "This repo houses a Postman collection and Javascript snippets which form a Redox demo.",
    "fork": false,
    "created_at": "2018-02-20T14:38:02Z",
    "updated_at": "2018-02-21T21:43:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 1031632,
    "owner_login": "cloudmine",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/1031632?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "repo",
      "form",
      "script",
      "demo",
      "uses",
      "snippet",
      "snippets",
      "houses"
    ]
  },
  {
    "id": 144174658,
    "name": "newman-reporter-slack",
    "full_name": "avidit/newman-reporter-slack",
    "description": "A newman reporter for slack",
    "fork": false,
    "created_at": "2018-08-09T15:56:06Z",
    "updated_at": "2020-02-22T03:27:22Z",
    "stargazers_count": 4,
    "watchers_count": 4,
    "forks": 10,
    "watchers": 4,
    "score": 1,
    "owner_id": 1406153,
    "owner_login": "avidit",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/1406153?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "newman",
      "report",
      "reporter",
      "slack"
    ]
  },
  {
    "id": 174181931,
    "name": "role_based_authentication_With-MEN",
    "full_name": "nandymandy1/role_based_authentication_With-MEN",
    "description": "In this repository I have created simple role based authentication using Node.js express mongodb and tested with Postman.",
    "fork": false,
    "created_at": "2019-03-06T16:35:33Z",
    "updated_at": "2020-03-17T19:34:48Z",
    "stargazers_count": 14,
    "watchers_count": 14,
    "forks": 6,
    "watchers": 14,
    "score": 1,
    "owner_id": 29309671,
    "owner_login": "nandymandy1",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/29309671?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository",
      "based",
      "express",
      "mongo",
      " express",
      "auth",
      "tested",
      "authentication",
      "mongod",
      "mongodb",
      "role"
    ]
  },
  {
    "id": 188982255,
    "name": "Nexus-Account",
    "full_name": "HrithikMittal/Nexus-Account",
    "description": "It is the backend repository of Mobile App enabling MSMEs to track finances and manage accounts and inventory📱",
    "fork": false,
    "created_at": "2019-05-28T07:59:58Z",
    "updated_at": "2020-03-23T19:30:23Z",
    "stargazers_count": 10,
    "watchers_count": 10,
    "forks": 4,
    "watchers": 10,
    "score": 1,
    "owner_id": 42075023,
    "owner_login": "HrithikMittal",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/42075023?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "manage",
      "backend",
      "track",
      "account",
      "inventory",
      "accounts",
      "enabling"
    ]
  },
  {
    "id": 118089723,
    "name": "postman",
    "full_name": "anujtiwari05/postman",
    "description": "This repository is for API  testing",
    "fork": false,
    "created_at": "2018-01-19T07:01:29Z",
    "updated_at": "2019-06-15T08:26:34Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 34908204,
    "owner_login": "anujtiwari05",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/34908204?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "repos",
      "repository"
    ]
  },
  {
    "id": 223012150,
    "name": "postman",
    "full_name": "api-evangelist/postman",
    "description": "This is a repo for working with the Postman API.",
    "fork": false,
    "created_at": "2019-11-20T19:32:21Z",
    "updated_at": "2019-12-22T00:59:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3026872,
    "owner_login": "api-evangelist",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/3026872?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "working"
    ]
  },
  {
    "id": 227845591,
    "name": "postman",
    "full_name": "elidakirigo/postman",
    "description": null,
    "fork": false,
    "created_at": "2019-12-13T13:24:55Z",
    "updated_at": "2019-12-13T13:24:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 42931101,
    "owner_login": "elidakirigo",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/42931101?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 236466515,
    "name": "Postman",
    "full_name": "alfonsodelag/Postman",
    "description": null,
    "fork": false,
    "created_at": "2020-01-27T10:31:01Z",
    "updated_at": "2020-02-10T14:32:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 56563344,
    "owner_login": "alfonsodelag",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/56563344?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 70537484,
    "name": "Postman",
    "full_name": "waffleman45/Postman",
    "description": "A repository for the Postman collections that we run on a daily basis.",
    "fork": false,
    "created_at": "2016-10-10T23:33:46Z",
    "updated_at": "2017-11-29T23:56:27Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 22756847,
    "owner_login": "waffleman45",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/22756847?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository",
      "daily"
    ]
  },
  {
    "id": 208562257,
    "name": "PostmanRepository",
    "full_name": "shreyaps/PostmanRepository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-09-15T08:11:34Z",
    "updated_at": "2019-09-15T08:11:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30948390,
    "owner_login": "shreyaps",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30948390?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 71074068,
    "name": "PostmanTests",
    "full_name": "genesiscruz/PostmanTests",
    "description": "This is a repository that will consist of version control for postman tests",
    "fork": false,
    "created_at": "2016-10-16T20:04:47Z",
    "updated_at": "2016-10-16T20:04:47Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21108788,
    "owner_login": "genesiscruz",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/21108788?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "repos",
      "repository",
      "tests",
      "version",
      "control",
      "postman tests",
      "consist"
    ]
  },
  {
    "id": 152119863,
    "name": "postman-tests",
    "full_name": "antonioortegajr/postman-tests",
    "description": "I like writing tests in postman for my collections. This repo is generic examples of these tests for mostly my own reference.",
    "fork": false,
    "created_at": "2018-10-08T17:33:00Z",
    "updated_at": "2018-10-08T17:34:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6744175,
    "owner_login": "antonioortegajr",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/6744175?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "collections",
      "repo",
      "tests",
      "tests ",
      "example",
      "examples",
      "reference",
      "writing",
      "generic",
      "mostly"
    ]
  },
  {
    "id": 132895455,
    "name": "postman-scripts",
    "full_name": "ahmedramez/postman-scripts",
    "description": null,
    "fork": false,
    "created_at": "2018-05-10T12:11:55Z",
    "updated_at": "2018-05-10T12:20:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25851356,
    "owner_login": "ahmedramez",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/25851356?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 236985415,
    "name": "postman_methods",
    "full_name": "andreshincapie82132/postman_methods",
    "description": "A short repository with most useful posman resources",
    "fork": false,
    "created_at": "2020-01-29T13:13:43Z",
    "updated_at": "2020-01-29T13:40:25Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22172178,
    "owner_login": "andreshincapie82132",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22172178?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "source",
      "resource",
      "resources",
      "useful",
      "posman"
    ]
  },
  {
    "id": 247909386,
    "name": "postman-sync",
    "full_name": "qbikez/postman-sync",
    "description": null,
    "fork": false,
    "created_at": "2020-03-17T07:49:20Z",
    "updated_at": "2020-03-17T07:49:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 365935,
    "owner_login": "qbikez",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/365935?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 105577853,
    "name": "postman-wrapper",
    "full_name": "wagneralkmim/postman-wrapper",
    "description": null,
    "fork": false,
    "created_at": "2017-10-02T19:48:52Z",
    "updated_at": "2018-05-17T07:19:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5919314,
    "owner_login": "wagneralkmim",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/5919314?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 127256302,
    "name": "digibp-postman",
    "full_name": "DigiBP/digibp-postman",
    "description": "This repository contains Postman collections and environment code.",
    "fork": false,
    "created_at": "2018-03-29T07:47:35Z",
    "updated_at": "2018-04-17T08:03:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25099178,
    "owner_login": "DigiBP",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/25099178?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository",
      "code",
      "contain",
      "environment"
    ]
  },
  {
    "id": 207105253,
    "name": "postman-api-tutorial",
    "full_name": "kingokeke/postman-api-tutorial",
    "description": "This repo is for a tutorial on how to build out API endpoints using only Postman",
    "fork": false,
    "created_at": "2019-09-08T11:53:28Z",
    "updated_at": "2019-09-08T11:54:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 36895542,
    "owner_login": "kingokeke",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/36895542?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "endpoint",
      "points",
      "build",
      "endpoints",
      "tutorial"
    ]
  },
  {
    "id": 246814040,
    "name": "postman-runtime-test",
    "full_name": "Samarth175/postman-runtime-test",
    "description": null,
    "fork": false,
    "created_at": "2020-03-12T11:11:30Z",
    "updated_at": "2020-03-12T11:24:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25552339,
    "owner_login": "Samarth175",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/25552339?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 218439495,
    "name": "laravel-postman-api",
    "full_name": "kre8mymedia/laravel-postman-api",
    "description": null,
    "fork": false,
    "created_at": "2019-10-30T03:54:41Z",
    "updated_at": "2020-03-16T08:10:23Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 40816745,
    "owner_login": "kre8mymedia",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/40816745?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 214826797,
    "name": "postman-newman-testing",
    "full_name": "scampiuk/postman-newman-testing",
    "description": "Git repo to go along with the article on dev.to",
    "fork": false,
    "created_at": "2019-10-13T13:38:47Z",
    "updated_at": "2019-10-13T14:09:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 1496616,
    "owner_login": "scampiuk",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1496616?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "long",
      "along",
      "article"
    ]
  },
  {
    "id": 193561082,
    "name": "postman-report-test-rest",
    "full_name": "carlaulloa/postman-report-test-rest",
    "description": "App to generate reports with Postman and Newman",
    "fork": false,
    "created_at": "2019-06-24T18:48:32Z",
    "updated_at": "2020-03-23T17:12:32Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 21971661,
    "owner_login": "carlaulloa",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/21971661?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "generate",
      "report",
      "reports"
    ]
  },
  {
    "id": 40419319,
    "name": "V1-API-Postman-Collections",
    "full_name": "aWhereAPI/V1-API-Postman-Collections",
    "description": "These Postman Collections are for the old version of aWhere's APIs. Please use the API Postman Collections repository. Requires the free Chrome application, Postman, from getpostman.com",
    "fork": false,
    "created_at": "2015-08-08T23:26:46Z",
    "updated_at": "2015-10-18T15:21:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 11070642,
    "owner_login": "aWhereAPI",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/11070642?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "application",
      "version",
      "getpost",
      "free"
    ]
  },
  {
    "id": 78628418,
    "name": "Nessus-REST-API-Postman-Collection",
    "full_name": "sanjogpandasp/Nessus-REST-API-Postman-Collection",
    "description": "This repository contains the POSTman collection of almost all the REST API being exposed by Nessus endpoint. ",
    "fork": false,
    "created_at": "2017-01-11T10:30:23Z",
    "updated_at": "2017-01-11T15:16:33Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 5404943,
    "owner_login": "sanjogpandasp",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/5404943?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "repo",
      "repos",
      "repository",
      "contain",
      "endpoint",
      "expose",
      "being",
      "almost"
    ]
  },
  {
    "id": 245520159,
    "name": "Automated-API-test-with-Postman",
    "full_name": "anirudh710-AB/Automated-API-test-with-Postman",
    "description": null,
    "fork": false,
    "created_at": "2020-03-06T21:31:04Z",
    "updated_at": "2020-03-06T21:43:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57012690,
    "owner_login": "anirudh710-AB",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/57012690?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 95618242,
    "name": "emma-postman",
    "full_name": "dcypherthis/emma-postman",
    "description": "A Postman Collection repository for all Emma Public API Endpoints",
    "fork": false,
    "created_at": "2017-06-28T02:00:15Z",
    "updated_at": "2017-06-28T06:02:01Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3697176,
    "owner_login": "dcypherthis",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/3697176?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "points"
    ]
  },
  {
    "id": 250509760,
    "name": "covid-postman-collection",
    "full_name": "made2591/covid-postman-collection",
    "description": "A repository with a Postman collection to play with Covid Global API",
    "fork": false,
    "created_at": "2020-03-27T10:53:13Z",
    "updated_at": "2020-03-27T11:35:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1695839,
    "owner_login": "made2591",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/1695839?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "repo",
      "repos",
      "repository",
      "play"
    ]
  },
  {
    "id": 220979985,
    "name": "Tines-Postman",
    "full_name": "tines-io/Tines-Postman",
    "description": "This repository contains a Postman collection for the Tines API",
    "fork": false,
    "created_at": "2019-11-11T12:47:26Z",
    "updated_at": "2019-11-11T13:48:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 39128869,
    "owner_login": "tines-io",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/39128869?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "repo",
      "repos",
      "repository",
      "contain"
    ]
  },
  {
    "id": 198596780,
    "name": "API-Changelog",
    "full_name": "Arcadier/API-Changelog",
    "description": "The source repository of our changelog page. Contents of the page are edited here.",
    "fork": false,
    "created_at": "2019-07-24T08:55:46Z",
    "updated_at": "2020-02-26T02:14:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 3,
    "watchers": 0,
    "score": 1,
    "owner_id": 6611854,
    "owner_login": "Arcadier",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/6611854?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "source",
      "edit",
      "changelog"
    ]
  },
  {
    "id": 218914810,
    "name": "bim360-mcapi-postman.test",
    "full_name": "xiaodongliang/bim360-mcapi-postman.test",
    "description": "This repository provides two collections of Postman,one follows API Reference, the other follows Tutorials of Model Coordination API.",
    "fork": false,
    "created_at": "2019-11-01T04:46:06Z",
    "updated_at": "2020-03-05T22:20:31Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 5087461,
    "owner_login": "xiaodongliang",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/5087461?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository",
      "provide",
      "provides"
    ]
  },
  {
    "id": 123628525,
    "name": "api4-postman",
    "full_name": "PsDevOperations/api4-postman",
    "description": "Postman backup repo",
    "fork": false,
    "created_at": "2018-03-02T20:40:22Z",
    "updated_at": "2018-04-26T20:45:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37002184,
    "owner_login": "PsDevOperations",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/37002184?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "backup"
    ]
  },
  {
    "id": 222843942,
    "name": "postmanTestApis",
    "full_name": "vassiri/postmanTestApis",
    "description": null,
    "fork": false,
    "created_at": "2019-11-20T03:35:48Z",
    "updated_at": "2019-11-20T03:53:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17148765,
    "owner_login": "vassiri",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/17148765?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 232994616,
    "name": "PostmanCollection_AutomationAPI",
    "full_name": "skylauriam/PostmanCollection_AutomationAPI",
    "description": "This repository has been created to collect all file related to postman collection in CI",
    "fork": false,
    "created_at": "2020-01-10T07:51:33Z",
    "updated_at": "2020-03-04T12:32:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54891224,
    "owner_login": "skylauriam",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/54891224?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "create",
      "repo",
      "postman collection",
      "file",
      "repos",
      "repository",
      "been",
      "related"
    ]
  },
  {
    "id": 238009776,
    "name": "arc-publishing-platform-postman-collection",
    "full_name": "washingtonpost/arc-publishing-platform-postman-collection",
    "description": "This repo contains the Postman Collection for using the Arc Publishing Platform APIs. ",
    "fork": false,
    "created_at": "2020-02-03T16:27:40Z",
    "updated_at": "2020-02-20T14:33:57Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 1963554,
    "owner_login": "washingtonpost",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/1963554?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "form",
      "contain"
    ]
  },
  {
    "id": 217399342,
    "name": "api.postman",
    "full_name": "pscarpioni/api.postman",
    "description": "This repository contains requests about Integra Commerce API",
    "fork": false,
    "created_at": "2019-10-24T21:35:24Z",
    "updated_at": "2020-01-06T21:29:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22650213,
    "owner_login": "pscarpioni",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/22650213?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "request",
      "repos",
      "repository",
      "requests",
      "contain"
    ]
  },
  {
    "id": 100196377,
    "name": "apig-postman",
    "full_name": "nwayve/apig-postman",
    "description": null,
    "fork": false,
    "created_at": "2017-08-13T18:25:38Z",
    "updated_at": "2017-08-13T18:25:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1729221,
    "owner_login": "nwayve",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/1729221?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 148436698,
    "name": "APITesting-Postman",
    "full_name": "rizwanr5s/APITesting-Postman",
    "description": null,
    "fork": false,
    "created_at": "2018-09-12T07:02:15Z",
    "updated_at": "2018-09-18T04:06:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43171492,
    "owner_login": "rizwanr5s",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/43171492?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 179918929,
    "name": "API_Postman",
    "full_name": "PansyLi/API_Postman",
    "description": null,
    "fork": false,
    "created_at": "2019-04-07T04:44:15Z",
    "updated_at": "2019-04-07T04:46:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47636396,
    "owner_login": "PansyLi",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/47636396?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 240568572,
    "name": "POSTMAN-API",
    "full_name": "sergepak10/POSTMAN-API",
    "description": "This is API repository",
    "fork": false,
    "created_at": "2020-02-14T17:57:43Z",
    "updated_at": "2020-02-22T18:46:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58562519,
    "owner_login": "sergepak10",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/58562519?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 153701798,
    "name": "postman-API",
    "full_name": "saniyagit/postman-API",
    "description": null,
    "fork": false,
    "created_at": "2018-10-18T23:53:43Z",
    "updated_at": "2018-10-19T00:21:43Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41412717,
    "owner_login": "saniyagit",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/41412717?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 124939758,
    "name": "postman-api",
    "full_name": "armin--nukic/postman-api",
    "description": null,
    "fork": false,
    "created_at": "2018-03-12T19:22:58Z",
    "updated_at": "2018-03-12T19:22:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 5891919,
    "owner_login": "armin--nukic",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/5891919?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 178106768,
    "name": "Postman_API",
    "full_name": "michael-mck-doyle/Postman_API",
    "description": null,
    "fork": false,
    "created_at": "2019-03-28T02:01:19Z",
    "updated_at": "2019-03-28T02:01:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 33753027,
    "owner_login": "michael-mck-doyle",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/33753027?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 195737499,
    "name": "Public-APIs",
    "full_name": "Koredotcom/Public-APIs",
    "description": "This repository contains the postman collection of all Public APIs provided by KORE.ai",
    "fork": false,
    "created_at": "2019-07-08T04:39:34Z",
    "updated_at": "2019-11-12T04:35:58Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 7521496,
    "owner_login": "Koredotcom",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7521496?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "contain",
      "provide",
      "provided"
    ]
  },
  {
    "id": 170375084,
    "name": "PostmanIntegration",
    "full_name": "mchartrand-brt/PostmanIntegration",
    "description": "A sample repo to test integrating a Postman API test into CI/CD",
    "fork": false,
    "created_at": "2019-02-12T19:08:28Z",
    "updated_at": "2019-02-13T14:12:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43351142,
    "owner_login": "mchartrand-brt",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/43351142?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "sample",
      "rating",
      "integrating"
    ]
  },
  {
    "id": 159535885,
    "name": "postman-tests",
    "full_name": "RamVadranam/postman-tests",
    "description": "Validating api reponses with postman",
    "fork": false,
    "created_at": "2018-11-28T16:57:53Z",
    "updated_at": "2018-11-28T17:06:50Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 925507,
    "owner_login": "RamVadranam",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/925507?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "repo",
      "reponses"
    ]
  },
  {
    "id": 142439143,
    "name": "Postman_LearnAPI",
    "full_name": "r1990v/Postman_LearnAPI",
    "description": "This repo contains postman scripts for learning purposes.",
    "fork": false,
    "created_at": "2018-07-26T12:40:06Z",
    "updated_at": "2018-12-19T09:18:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 14290306,
    "owner_login": "r1990v",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/14290306?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "repo",
      "script",
      "contain",
      "scripts",
      "learn",
      "learning",
      "purposes",
      "postman scripts"
    ]
  },
  {
    "id": 190520774,
    "name": "PostmanTests-for-NewWorld",
    "full_name": "SivaPrasad186/PostmanTests-for-NewWorld",
    "description": "Private repository for having all the postman tests for the new world API's.",
    "fork": false,
    "created_at": "2019-06-06T05:38:10Z",
    "updated_at": "2019-07-10T08:18:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 48505922,
    "owner_login": "SivaPrasad186",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/48505922?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "repos",
      "repository",
      "tests",
      "tests ",
      "postman tests",
      "world",
      "having"
    ]
  },
  {
    "id": 79717293,
    "name": "API-2-Postman",
    "full_name": "OneHourTranslation/API-2-Postman",
    "description": null,
    "fork": false,
    "created_at": "2017-01-22T12:45:56Z",
    "updated_at": "2017-01-22T13:59:51Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 338564,
    "owner_login": "OneHourTranslation",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/338564?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 245731693,
    "name": "test-repo-from-api",
    "full_name": "edjacks/test-repo-from-api",
    "description": "Testing of repo create from postman",
    "fork": false,
    "created_at": "2020-03-08T01:15:22Z",
    "updated_at": "2020-03-08T01:15:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11890690,
    "owner_login": "edjacks",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/11890690?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "repo"
    ]
  },
  {
    "id": 171419078,
    "name": "Google-Cloud-Search-Postman",
    "full_name": "SaschaHeyer/Google-Cloud-Search-Postman",
    "description": "An Postman Collection repository for all Google Cloud Search API Endpoints",
    "fork": false,
    "created_at": "2019-02-19T06:34:34Z",
    "updated_at": "2019-02-19T06:36:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1991664,
    "owner_login": "SaschaHeyer",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/1991664?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "points"
    ]
  },
  {
    "id": 206338892,
    "name": "BBDN-Collab-Postman-REST",
    "full_name": "blackboard/BBDN-Collab-Postman-REST",
    "description": "This repository contains a postman collection for testing the Collaborate REST APIs.",
    "fork": false,
    "created_at": "2019-09-04T14:28:49Z",
    "updated_at": "2019-09-04T14:42:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 1282638,
    "owner_login": "blackboard",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1282638?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "repo",
      "testing",
      "postman collection",
      "repos",
      "repository",
      "contain"
    ]
  },
  {
    "id": 248737256,
    "name": "postman-CI-demo",
    "full_name": "MChodap1/postman-CI-demo",
    "description": "This repository contains a node project with the dependencies to run postman collection",
    "fork": false,
    "created_at": "2020-03-20T11:18:59Z",
    "updated_at": "2020-03-20T11:37:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54065867,
    "owner_login": "MChodap1",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/54065867?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "node",
      "contain",
      "dependencies"
    ]
  },
  {
    "id": 238942585,
    "name": "postman-newman-gitlab",
    "full_name": "shcarroll/postman-newman-gitlab",
    "description": "Example repo containing Postman collections of API tests, Newman command line runner for these and a Gitlab CI file",
    "fork": false,
    "created_at": "2020-02-07T14:23:23Z",
    "updated_at": "2020-02-10T09:59:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47427411,
    "owner_login": "shcarroll",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/47427411?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "collect",
      "collection",
      "collections",
      "repo",
      "file",
      "tests",
      "contain",
      "line",
      "runner",
      "command",
      "command line",
      "containing"
    ]
  },
  {
    "id": 201471857,
    "name": "PostmanCollection",
    "full_name": "AndreyMaydanyuk/PostmanCollection",
    "description": "repository for testing with postman",
    "fork": false,
    "created_at": "2019-08-09T13:23:14Z",
    "updated_at": "2019-08-09T15:04:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 53942844,
    "owner_login": "AndreyMaydanyuk",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/53942844?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "testing",
      "repos",
      "repository"
    ]
  },
  {
    "id": 241825061,
    "name": "postmanCollection",
    "full_name": "SumSubstance/postmanCollection",
    "description": null,
    "fork": false,
    "created_at": "2020-02-20T07:54:57Z",
    "updated_at": "2020-02-20T08:01:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46716545,
    "owner_login": "SumSubstance",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/46716545?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 219198694,
    "name": "postmanCollections",
    "full_name": "shanakaweerasinghe/postmanCollections",
    "description": null,
    "fork": false,
    "created_at": "2019-11-02T18:47:46Z",
    "updated_at": "2019-11-08T19:02:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 22147070,
    "owner_login": "shanakaweerasinghe",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22147070?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 86394337,
    "name": "postmanCollections",
    "full_name": "Vijayabaskar03/postmanCollections",
    "description": null,
    "fork": false,
    "created_at": "2017-03-27T23:37:14Z",
    "updated_at": "2017-03-27T23:37:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 24304928,
    "owner_login": "Vijayabaskar03",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/24304928?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 99602889,
    "name": "Postman-Collection",
    "full_name": "udemy-testuser7/Postman-Collection",
    "description": "This is a test postman collection repository",
    "fork": false,
    "created_at": "2017-08-07T17:28:40Z",
    "updated_at": "2017-08-07T17:28:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30807214,
    "owner_login": "udemy-testuser7",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/30807214?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository"
    ]
  },
  {
    "id": 250592776,
    "name": "postman-collections",
    "full_name": "Leaf-Agriculture/postman-collections",
    "description": "This repository contains sample collections to facilitate the understanding and usage of Leaf's API",
    "fork": false,
    "created_at": "2020-03-27T16:59:29Z",
    "updated_at": "2020-03-29T20:24:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54948009,
    "owner_login": "Leaf-Agriculture",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/54948009?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository",
      "contain",
      "sample",
      "under",
      "understanding",
      "facilitate"
    ]
  },
  {
    "id": 215302250,
    "name": "Postman-collection",
    "full_name": "SUBHRANSUSONAL/Postman-collection",
    "description": null,
    "fork": false,
    "created_at": "2019-10-15T13:11:54Z",
    "updated_at": "2019-10-17T04:19:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 33096402,
    "owner_login": "SUBHRANSUSONAL",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/33096402?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 104324536,
    "name": "postman-collections",
    "full_name": "miroslavmacko/postman-collections",
    "description": null,
    "fork": false,
    "created_at": "2017-09-21T08:53:53Z",
    "updated_at": "2017-10-04T14:22:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32139961,
    "owner_login": "miroslavmacko",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/32139961?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 150959039,
    "name": "postman-collection-runner",
    "full_name": "hanikhan/postman-collection-runner",
    "description": "Uses postman's newman module to run exported POSTMAN collections and generate detailed reports",
    "fork": false,
    "created_at": "2018-09-30T10:53:17Z",
    "updated_at": "2018-10-18T19:09:46Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 6334309,
    "owner_login": "hanikhan",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/6334309?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "collections",
      "repo",
      "newman",
      "generate",
      "export",
      "module",
      "report",
      "exported",
      "reports"
    ]
  },
  {
    "id": 8905449,
    "name": "postman",
    "full_name": "paulallies/postman",
    "description": "A repository with all postman collections",
    "fork": false,
    "created_at": "2013-03-20T13:59:54Z",
    "updated_at": "2014-08-14T04:10:11Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 580368,
    "owner_login": "paulallies",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/580368?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "collections",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "postman collections"
    ]
  },
  {
    "id": 87587158,
    "name": "mergePostmanCollection",
    "full_name": "edilsonjustiniano/mergePostmanCollection",
    "description": null,
    "fork": false,
    "created_at": "2017-04-07T21:09:44Z",
    "updated_at": "2017-04-07T21:09:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6611220,
    "owner_login": "edilsonjustiniano",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/6611220?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 95386364,
    "name": "postman-collections-ui",
    "full_name": "iamwillmassey/postman-collections-ui",
    "description": null,
    "fork": false,
    "created_at": "2017-06-25T21:19:21Z",
    "updated_at": "2017-06-26T20:14:45Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 29688310,
    "owner_login": "iamwillmassey",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/29688310?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 248051141,
    "name": "dreamfactory-postman-collection",
    "full_name": "dreamfactorysoftware/dreamfactory-postman-collection",
    "description": "A repository for hosting plug-n-play Postman collections",
    "fork": false,
    "created_at": "2020-03-17T19:02:43Z",
    "updated_at": "2020-03-23T20:08:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2593688,
    "owner_login": "dreamfactorysoftware",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/2593688?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository",
      "host",
      "play",
      "hosting"
    ]
  },
  {
    "id": 249513062,
    "name": "Passing-Postman-collection",
    "full_name": "dar-lys/Passing-Postman-collection",
    "description": null,
    "fork": false,
    "created_at": "2020-03-23T18:32:44Z",
    "updated_at": "2020-03-23T18:32:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 62504923,
    "owner_login": "dar-lys",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/62504923?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 59186801,
    "name": "postman-tests",
    "full_name": "martijnschouwe/postman-tests",
    "description": "POC repo for postman collections",
    "fork": false,
    "created_at": "2016-05-19T08:10:20Z",
    "updated_at": "2016-05-19T08:10:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2614463,
    "owner_login": "martijnschouwe",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/2614463?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "collections",
      "repo",
      "postman collection",
      "postman collections"
    ]
  },
  {
    "id": 209404776,
    "name": "Postman-Sync",
    "full_name": "jstep/Postman-Sync",
    "description": "Testing syncing Postman collection to remote repo without Postman Pro 💰",
    "fork": false,
    "created_at": "2019-09-18T21:11:20Z",
    "updated_at": "2019-09-18T21:11:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 3357628,
    "owner_login": "jstep",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/3357628?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "repo",
      "sync",
      "remote",
      "syncing"
    ]
  },
  {
    "id": 200146430,
    "name": "postman_test",
    "full_name": "Dusted-Wu/postman_test",
    "description": "create a repository to test postman collection",
    "fork": false,
    "created_at": "2019-08-02T01:57:00Z",
    "updated_at": "2019-08-02T02:00:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30411985,
    "owner_login": "Dusted-Wu",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/30411985?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "create",
      "repo",
      "postman collection",
      "repos",
      "repository"
    ]
  },
  {
    "id": 120403082,
    "name": "Postman_Testcases",
    "full_name": "SaiKiran-PanSoftware/Postman_Testcases",
    "description": "This repository contains the Postman Collections and Environments.",
    "fork": false,
    "created_at": "2018-02-06T04:47:22Z",
    "updated_at": "2018-02-06T04:47:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35203696,
    "owner_login": "SaiKiran-PanSoftware",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35203696?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "contain"
    ]
  },
  {
    "id": 170852040,
    "name": "PayU_Hub_Postman",
    "full_name": "maciejdorsz/PayU_Hub_Postman",
    "description": "PayU HUB repository for Postman collections.",
    "fork": false,
    "created_at": "2019-02-15T11:08:00Z",
    "updated_at": "2019-02-15T11:08:01Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6358930,
    "owner_login": "maciejdorsz",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/6358930?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "collections",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 220203174,
    "name": "New-Repo-Postman-testing-8",
    "full_name": "AntoMullen/New-Repo-Postman-testing-8",
    "description": "This is first repo tesing Git hub rest api",
    "fork": false,
    "created_at": "2019-11-07T09:49:57Z",
    "updated_at": "2019-11-07T09:49:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30256572,
    "owner_login": "AntoMullen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30256572?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "rest",
      "rest api",
      "tesing"
    ]
  },
  {
    "id": 220211545,
    "name": "New-Repo-Postman-testing-11",
    "full_name": "AntoMullen/New-Repo-Postman-testing-11",
    "description": "This is first repo tesing Git hub rest api",
    "fork": false,
    "created_at": "2019-11-07T10:34:37Z",
    "updated_at": "2019-11-07T10:34:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30256572,
    "owner_login": "AntoMullen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30256572?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "rest",
      "rest api",
      "tesing"
    ]
  },
  {
    "id": 177321042,
    "name": "postman-Bing_In_Zomato",
    "full_name": "asheeshmisra/postman-Bing_In_Zomato",
    "description": "This is a public repository having a postman collection to search for a restaurant near a specified place using Zomato API and Bing Maps REST API.",
    "fork": false,
    "created_at": "2019-03-23T17:43:50Z",
    "updated_at": "2019-03-23T19:07:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22025338,
    "owner_login": "asheeshmisra",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/22025338?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "rest",
      "spec",
      "search",
      "public",
      "place",
      "having",
      "restaurant"
    ]
  },
  {
    "id": 91365187,
    "name": "rest-api-tutorial",
    "full_name": "Sestri4kina/rest-api-tutorial",
    "description": null,
    "fork": false,
    "created_at": "2017-05-15T17:26:16Z",
    "updated_at": "2017-05-15T17:32:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 18619005,
    "owner_login": "Sestri4kina",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/18619005?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 169982266,
    "name": "restAssuredApiTestFramework",
    "full_name": "hirosht/restAssuredApiTestFramework",
    "description": "Sample framework written for API Testing using RestAssured/TestNg. Project is structured with the maven repo. The sample test cases are pointed to endpoints given from Postman.",
    "fork": false,
    "created_at": "2019-02-10T13:41:01Z",
    "updated_at": "2019-05-10T12:54:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13958097,
    "owner_login": "hirosht",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/13958097?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "endpoint",
      "points",
      "framework",
      "sample",
      "endpoints",
      "written",
      "struct",
      "case",
      "structure",
      "cases",
      "given",
      "maven"
    ]
  },
  {
    "id": 243348348,
    "name": "Spring_Boot_REST_Application",
    "full_name": "BasManerino/Spring_Boot_REST_Application",
    "description": "This repository is for the subject Integration & Communication, as part of the Spring Boot, REST & Postman assignment.",
    "fork": false,
    "created_at": "2020-02-26T19:31:16Z",
    "updated_at": "2020-02-29T22:21:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 33654457,
    "owner_login": "BasManerino",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/33654457?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "sign",
      "assignment",
      "subject"
    ]
  },
  {
    "id": 23479725,
    "name": "REST-request-collection",
    "full_name": "borgius/REST-request-collection",
    "description": "This repository contains a collection of request you could use with the Postman Chrome extension in order to try out the Telekom Global SMS API.",
    "fork": false,
    "created_at": "2014-08-29T22:40:53Z",
    "updated_at": "2018-03-15T07:54:08Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 868919,
    "owner_login": "borgius",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/868919?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "repo",
      "request",
      "repos",
      "repository",
      "contain",
      "extension",
      "order"
    ]
  },
  {
    "id": 147153426,
    "name": "FlaskDevTest",
    "full_name": "ntnshrm87/FlaskDevTest",
    "description": "This repo includes Flask REST-API development using Postman and deploying the app to cloud.",
    "fork": false,
    "created_at": "2018-09-03T04:56:53Z",
    "updated_at": "2018-09-06T06:45:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 12100496,
    "owner_login": "ntnshrm87",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/12100496?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "develop",
      "development",
      "cloud",
      "includes",
      "deploying"
    ]
  },
  {
    "id": 250102289,
    "name": "ProjetoSpring",
    "full_name": "daise18/ProjetoSpring",
    "description": "Projeto java com spring boot, spring jpa, utilizando conceitos de microsserviços/apis, banco de dados, json, anotação, repository, entity, rest controllers, testes manuais via postman., ",
    "fork": false,
    "created_at": "2020-03-25T22:08:08Z",
    "updated_at": "2020-03-25T22:12:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 62191842,
    "owner_login": "daise18",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/62191842?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "repos",
      "repository",
      "rest",
      "json",
      "util",
      "java",
      "boot",
      "spring",
      "control",
      "micro",
      "utilizando",
      "testes",
      "spring boot",
      "controller",
      "entity",
      "dados",
      "banco",
      "manua",
      "conceitos"
    ]
  },
  {
    "id": 139349790,
    "name": "Shircle",
    "full_name": "awaisbub/Shircle",
    "description": "It is Android aapplication back end code made for small local businesses. The back end of this application is in C# .NET using MVC architecture making REST APIs. And all the views are on Android. I worked as a back end developer in this app. Back end of the app is in c# using .NET entity framework. REST APIs developed using Model View Controller(MVC) architecture. Views were designed on android studio. The database was designed by using Code First Approach. (Visual Studio, Android Studio, Microsoft Azure, Microsoft SQL, SQLite, Postman, Entity Framework, MVC, Firebase REST API’s, REST API’s, JSON) This app has the following features: I. It provides all in one business solution to shopkeepers. Shopkeeper can setup his online store, manage sales through mobile POS, track of inventory, sale reports generation, market insights, and trending products. II. On the other hand, customer can view nearby stores through Google Maps & Shircle-Eye, add products to virtual cart, and view trending items according to their interests.",
    "fork": false,
    "created_at": "2018-07-01T17:54:53Z",
    "updated_at": "2018-07-01T18:16:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40741255,
    "owner_login": "awaisbub",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/40741255?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "data",
      "application",
      "rest",
      "database",
      "develop",
      "code",
      "sign",
      "line",
      "framework",
      "manage",
      "local",
      "view",
      "provide",
      "developer",
      "store",
      "shop",
      "developed",
      "report",
      "feature",
      "custom",
      "esse",
      "design",
      "product",
      "making",
      "small",
      "features",
      "were",
      "setup",
      "track",
      "solution",
      "designed",
      "android",
      "following",
      "mobile",
      "products",
      "online",
      "according",
      "generation",
      "provides",
      "entity",
      "customer",
      "worked",
      "back end",
      "inventory",
      "keep",
      "reports",
      "items",
      "insight",
      "business",
      "keeper",
      "studio",
      "businesses",
      "aapplication"
    ]
  },
  {
    "id": 91374388,
    "name": "JWT-Authentication",
    "full_name": "kpraneeth3456/JWT-Authentication",
    "description": "Project Title: JWT Authentication  Description: This project is a basic Authorization and Authentication which exchanges JSON web tokens between the client and the server for more security.  Execution: -Clone or download the repo from the GitHub link -npm install (to download the dependencies) -node index.js (To get the application running)  Working: -User has to enter his email and password to register his account.(Use any third-party rest-client like Postman on port 3000) -If the email already exists in the database it sends an error message and if the email does not exist it saves to the database. -If the user is signed up then he can go ahead and Sign-in with same username and password. -If the credentials are matched then a JSON web token will be sent to the client in the header. -If the username and password do not match then it sends back an error message.",
    "fork": false,
    "created_at": "2017-05-15T19:03:55Z",
    "updated_at": "2018-12-28T08:47:41Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 26414547,
    "owner_login": "kpraneeth3456",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/26414547?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "data",
      "application",
      "rest",
      "script",
      "server",
      "client",
      "node",
      "database",
      "user",
      "sign",
      "mail",
      "send",
      "load",
      "read",
      "running",
      "more",
      "email",
      "name",
      "token",
      "message",
      "to do",
      "install",
      "between",
      "link",
      "header",
      "account",
      "download",
      "enter",
      "ready",
      "party",
      "register",
      "sends",
      "third",
      "dependencies",
      "tokens",
      "error",
      "match",
      "security",
      "exchange",
      "matched"
    ]
  },
  {
    "id": 243425762,
    "name": "Test",
    "full_name": "rahulprasad13/Test",
    "description": "This postman repository",
    "fork": false,
    "created_at": "2020-02-27T03:55:18Z",
    "updated_at": "2020-02-27T03:55:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58101887,
    "owner_login": "rahulprasad13",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/58101887?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 76995489,
    "name": "postmanTest",
    "full_name": "rob-moore/postmanTest",
    "description": "This is your postman repo",
    "fork": false,
    "created_at": "2016-12-20T22:10:53Z",
    "updated_at": "2016-12-20T22:10:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16259450,
    "owner_login": "rob-moore",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/16259450?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "repo"
    ]
  },
  {
    "id": 152026682,
    "name": "PostmanTesting",
    "full_name": "rohith-iia/PostmanTesting",
    "description": null,
    "fork": false,
    "created_at": "2018-10-08T06:08:04Z",
    "updated_at": "2018-10-08T06:08:29Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37099636,
    "owner_login": "rohith-iia",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/37099636?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 141481909,
    "name": "PostmanAutomation",
    "full_name": "shanthalarb/PostmanAutomation",
    "description": "This repository has postman automation tests ",
    "fork": false,
    "created_at": "2018-07-18T19:39:01Z",
    "updated_at": "2018-07-18T19:40:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41392923,
    "owner_login": "shanthalarb",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/41392923?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "repos",
      "repository",
      "tests",
      "tests ",
      "auto",
      "automat",
      "automation"
    ]
  },
  {
    "id": 244853438,
    "name": "Test_Postman3",
    "full_name": "hwahit/Test_Postman3",
    "description": "This is your 3 repository",
    "fork": false,
    "created_at": "2020-03-04T09:02:31Z",
    "updated_at": "2020-03-04T09:02:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 61547984,
    "owner_login": "hwahit",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/61547984?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 208415348,
    "name": "PostmanRepo",
    "full_name": "shreyaps/PostmanRepo",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-09-14T09:04:08Z",
    "updated_at": "2019-09-14T09:04:08Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30948390,
    "owner_login": "shreyaps",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30948390?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 233936696,
    "name": "PostmanNotes",
    "full_name": "rajivpaulsingh/PostmanNotes",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-01-14T21:11:33Z",
    "updated_at": "2020-01-16T23:22:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7916287,
    "owner_login": "rajivpaulsingh",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/7916287?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 144596287,
    "name": "PostmanTest2",
    "full_name": "jdlawren/PostmanTest2",
    "description": null,
    "fork": false,
    "created_at": "2018-08-13T15:07:41Z",
    "updated_at": "2018-08-13T15:08:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13338267,
    "owner_login": "jdlawren",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/13338267?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 212698113,
    "name": "PostmanTestsDemo",
    "full_name": "crowcoder/PostmanTestsDemo",
    "description": null,
    "fork": false,
    "created_at": "2019-10-03T23:12:14Z",
    "updated_at": "2019-10-04T00:51:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 4210624,
    "owner_login": "crowcoder",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/4210624?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 242259179,
    "name": "Hello-Postman2",
    "full_name": "PaulinaCoding/Hello-Postman2",
    "description": "This is your Postman test repository",
    "fork": false,
    "created_at": "2020-02-22T01:15:03Z",
    "updated_at": "2020-02-22T01:15:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37420244,
    "owner_login": "PaulinaCoding",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/37420244?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 134369547,
    "name": "postmanrepo",
    "full_name": "sureshkodamala/postmanrepo",
    "description": "This is test repo",
    "fork": false,
    "created_at": "2018-05-22T06:20:34Z",
    "updated_at": "2018-05-22T06:20:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 39078607,
    "owner_login": "sureshkodamala",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/39078607?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo"
    ]
  },
  {
    "id": 90891713,
    "name": "test",
    "full_name": "bhushanyadhu/test",
    "description": "This is your first repository through postman",
    "fork": false,
    "created_at": "2017-05-10T17:38:19Z",
    "updated_at": "2017-05-17T23:08:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 28604945,
    "owner_login": "bhushanyadhu",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/28604945?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 241251156,
    "name": "PostmanRepo67",
    "full_name": "agarwalv123/PostmanRepo67",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-02-18T02:07:56Z",
    "updated_at": "2020-02-19T10:15:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59722582,
    "owner_login": "agarwalv123",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/59722582?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 241789922,
    "name": "PostmanRepo297",
    "full_name": "agarwalv123/PostmanRepo297",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-02-20T04:07:15Z",
    "updated_at": "2020-02-20T04:07:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59722582,
    "owner_login": "agarwalv123",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/59722582?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 246654566,
    "name": "-Postman-",
    "full_name": "Argenarn/-Postman-",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-03-11T18:49:57Z",
    "updated_at": "2020-03-11T18:49:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 61512838,
    "owner_login": "Argenarn",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/61512838?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 142996099,
    "name": "postman-jenkins",
    "full_name": "snspinn/postman-jenkins",
    "description": "some test repository",
    "fork": false,
    "created_at": "2018-07-31T09:59:16Z",
    "updated_at": "2018-07-31T09:59:16Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41950061,
    "owner_login": "snspinn",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/41950061?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 207028679,
    "name": "cicd-postman",
    "full_name": "nateachieve/cicd-postman",
    "description": "Test repo for cicd postman.",
    "fork": false,
    "created_at": "2019-09-07T21:39:03Z",
    "updated_at": "2019-09-07T21:41:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 49166289,
    "owner_login": "nateachieve",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/49166289?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "repo",
      "cicd"
    ]
  },
  {
    "id": 224480893,
    "name": "Postman-test1",
    "full_name": "piter156/Postman-test1",
    "description": "This is a test repository created in Postman",
    "fork": false,
    "created_at": "2019-11-27T17:14:11Z",
    "updated_at": "2019-11-27T17:14:11Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58180116,
    "owner_login": "piter156",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/58180116?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 137833717,
    "name": "postman-test",
    "full_name": "mash9738/postman-test",
    "description": "to test postman framework repo created",
    "fork": false,
    "created_at": "2018-06-19T03:06:48Z",
    "updated_at": "2018-06-19T03:17:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40376636,
    "owner_login": "mash9738",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/40376636?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "repo",
      "framework"
    ]
  },
  {
    "id": 150470746,
    "name": "Postman-Test-",
    "full_name": "ELFCHE/Postman-Test-",
    "description": null,
    "fork": false,
    "created_at": "2018-09-26T18:19:32Z",
    "updated_at": "2018-09-26T18:19:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 20455264,
    "owner_login": "ELFCHE",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/20455264?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 173234270,
    "name": "postman-tests",
    "full_name": "Jennysgithub/postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2019-03-01T04:23:07Z",
    "updated_at": "2019-03-21T03:28:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25733258,
    "owner_login": "Jennysgithub",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/25733258?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 219941474,
    "name": "Postman-testing",
    "full_name": "AntoMullen/Postman-testing",
    "description": "This repo is used for testing postman and the Git hub API",
    "fork": false,
    "created_at": "2019-11-06T07:54:19Z",
    "updated_at": "2019-11-06T07:54:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30256572,
    "owner_login": "AntoMullen",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/30256572?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "testing"
    ]
  },
  {
    "id": 236785748,
    "name": "postman-test",
    "full_name": "coloradohokie/postman-test",
    "description": null,
    "fork": false,
    "created_at": "2020-01-28T16:48:46Z",
    "updated_at": "2020-01-28T16:48:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58762097,
    "owner_login": "coloradohokie",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/58762097?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 224225659,
    "name": "Postman-test",
    "full_name": "piter156/Postman-test",
    "description": "This is a test repository created in Postman",
    "fork": false,
    "created_at": "2019-11-26T15:33:38Z",
    "updated_at": "2019-11-26T15:33:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58180116,
    "owner_login": "piter156",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/58180116?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 239631036,
    "name": "postman-tests",
    "full_name": "ehCruz/postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2020-02-10T22:57:32Z",
    "updated_at": "2020-02-10T23:55:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 18473015,
    "owner_login": "ehCruz",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/18473015?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 74125604,
    "name": "test_postman",
    "full_name": "flex888/test_postman",
    "description": null,
    "fork": false,
    "created_at": "2016-11-18T11:54:27Z",
    "updated_at": "2016-11-18T11:54:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7943899,
    "owner_login": "flex888",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7943899?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 137679478,
    "name": "postman-tests",
    "full_name": "yaroslavkratsylo/postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2018-06-17T19:05:12Z",
    "updated_at": "2018-06-18T22:00:07Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11705070,
    "owner_login": "yaroslavkratsylo",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/11705070?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 193679640,
    "name": "testcase_postman",
    "full_name": "zhangxiaodia/testcase_postman",
    "description": null,
    "fork": false,
    "created_at": "2019-06-25T09:42:59Z",
    "updated_at": "2019-06-25T09:42:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45590543,
    "owner_login": "zhangxiaodia",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/45590543?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 234736877,
    "name": "Postman-Test",
    "full_name": "dionysisr/Postman-Test",
    "description": "This repository was created by postman request",
    "fork": false,
    "created_at": "2020-01-18T13:13:38Z",
    "updated_at": "2020-01-18T13:13:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10625950,
    "owner_login": "dionysisr",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/10625950?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "repo",
      "request",
      "repos",
      "repository"
    ]
  },
  {
    "id": 246107509,
    "name": "postman-test",
    "full_name": "guilherme-rojas-movile/postman-test",
    "description": null,
    "fork": false,
    "created_at": "2020-03-09T18:05:58Z",
    "updated_at": "2020-03-09T18:06:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 60233385,
    "owner_login": "guilherme-rojas-movile",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/60233385?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 73389903,
    "name": "TestRepo",
    "full_name": "CDonoghue94/TestRepo",
    "description": "This is a test repo for postman",
    "fork": false,
    "created_at": "2016-11-10T14:32:32Z",
    "updated_at": "2016-11-10T14:32:32Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 23311644,
    "owner_login": "CDonoghue94",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/23311644?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo"
    ]
  },
  {
    "id": 143004702,
    "name": "postman-newman-jenkins",
    "full_name": "snspinn/postman-newman-jenkins",
    "description": "some test repository",
    "fork": false,
    "created_at": "2018-07-31T11:23:14Z",
    "updated_at": "2018-08-23T15:24:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 41950061,
    "owner_login": "snspinn",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/41950061?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 225478887,
    "name": "test",
    "full_name": "itsatya/test",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-12-02T22:13:05Z",
    "updated_at": "2019-12-02T22:32:32Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11086631,
    "owner_login": "itsatya",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/11086631?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 206581953,
    "name": "Test",
    "full_name": "patricklwanga/Test",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-09-05T14:19:36Z",
    "updated_at": "2019-09-05T14:19:36Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 36103753,
    "owner_login": "patricklwanga",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/36103753?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 242243711,
    "name": "Hello-Postman",
    "full_name": "PaulinaCoding/Hello-Postman",
    "description": "This is your Postman test repository",
    "fork": false,
    "created_at": "2020-02-21T22:45:23Z",
    "updated_at": "2020-02-21T22:45:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37420244,
    "owner_login": "PaulinaCoding",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/37420244?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 233922731,
    "name": "Github-test11",
    "full_name": "bagepallis/Github-test11",
    "description": "This repos is created by Postman",
    "fork": false,
    "created_at": "2020-01-14T19:49:49Z",
    "updated_at": "2020-01-14T19:49:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59847351,
    "owner_login": "bagepallis",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/59847351?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos"
    ]
  },
  {
    "id": 198571421,
    "name": "TEST",
    "full_name": "devashish9599/TEST",
    "description": "Test repository of MVC. Used Postman and followed SOLID.",
    "fork": false,
    "created_at": "2019-07-24T06:21:14Z",
    "updated_at": "2019-07-24T06:26:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37358525,
    "owner_login": "devashish9599",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/37358525?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "followed"
    ]
  },
  {
    "id": 234682406,
    "name": "Postman-course",
    "full_name": "alesneva/Postman-course",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-01-18T04:42:23Z",
    "updated_at": "2020-01-18T04:42:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 28774032,
    "owner_login": "alesneva",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/28774032?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224260569,
    "name": "Testrepository",
    "full_name": "MusolQA/Testrepository",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:33:26Z",
    "updated_at": "2019-11-26T18:33:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 162435319,
    "name": "Postman-task",
    "full_name": "samovolkinmaxim/Postman-task",
    "description": "This is a test repo for Postman task",
    "fork": false,
    "created_at": "2018-12-19T12:37:16Z",
    "updated_at": "2018-12-19T12:57:49Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40469143,
    "owner_login": "samovolkinmaxim",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/40469143?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "task"
    ]
  },
  {
    "id": 215278682,
    "name": "postman-dummy-test",
    "full_name": "niroshan009/postman-dummy-test",
    "description": null,
    "fork": false,
    "created_at": "2019-10-15T11:12:01Z",
    "updated_at": "2019-10-16T06:32:04Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 55729320,
    "owner_login": "niroshan009",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/55729320?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 244408959,
    "name": "Test_Postman_Public_Update",
    "full_name": "hwahit/Test_Postman_Public_Update",
    "description": "This is your 2 repository",
    "fork": false,
    "created_at": "2020-03-02T15:43:30Z",
    "updated_at": "2020-03-03T16:52:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 61547984,
    "owner_login": "hwahit",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/61547984?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224730515,
    "name": "Test-Postman-Repo",
    "full_name": "adityamandhare/Test-Postman-Repo",
    "description": "This is a repo created using postman and GitHub APIs",
    "fork": false,
    "created_at": "2019-11-28T21:12:10Z",
    "updated_at": "2019-11-28T21:12:14Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 12976588,
    "owner_login": "adityamandhare",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/12976588?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "repo"
    ]
  },
  {
    "id": 207535181,
    "name": "MyPostmanTests",
    "full_name": "y6ec813/MyPostmanTests",
    "description": null,
    "fork": false,
    "created_at": "2019-09-10T10:57:30Z",
    "updated_at": "2019-09-10T10:57:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 30580299,
    "owner_login": "y6ec813",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/30580299?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 220267332,
    "name": "httpbin-postman-tests",
    "full_name": "ViorelBanu/httpbin-postman-tests",
    "description": "This is your first repository",
    "fork": false,
    "created_at": "2019-11-07T15:23:10Z",
    "updated_at": "2019-11-07T15:27:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 56996774,
    "owner_login": "ViorelBanu",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/56996774?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 244690905,
    "name": "Test_Postman_Public3",
    "full_name": "hwahit/Test_Postman_Public3",
    "description": "This is your 3 repository",
    "fork": false,
    "created_at": "2020-03-03T16:49:31Z",
    "updated_at": "2020-03-03T16:49:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 61547984,
    "owner_login": "hwahit",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/61547984?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 233402784,
    "name": "postman_simple_tests",
    "full_name": "VadimAronax/postman_simple_tests",
    "description": null,
    "fork": false,
    "created_at": "2020-01-12T14:11:15Z",
    "updated_at": "2020-02-01T13:18:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59536755,
    "owner_login": "VadimAronax",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/59536755?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 224731565,
    "name": "Test-Postman-Repo-1",
    "full_name": "adityamandhare/Test-Postman-Repo-1",
    "description": "This is a repo created using postman and GitHub APIs",
    "fork": false,
    "created_at": "2019-11-28T21:19:28Z",
    "updated_at": "2019-11-28T21:19:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 12976588,
    "owner_login": "adityamandhare",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/12976588?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "repo"
    ]
  },
  {
    "id": 182437304,
    "name": "CastillePostmanTest",
    "full_name": "pavledimovic/CastillePostmanTest",
    "description": null,
    "fork": false,
    "created_at": "2019-04-20T17:48:50Z",
    "updated_at": "2019-04-20T18:00:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45795620,
    "owner_login": "pavledimovic",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/45795620?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 161686355,
    "name": "jenkins-postman-test",
    "full_name": "brunohafonso95/jenkins-postman-test",
    "description": null,
    "fork": false,
    "created_at": "2018-12-13T19:36:27Z",
    "updated_at": "2019-02-14T18:16:50Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43271781,
    "owner_login": "brunohafonso95",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/43271781?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 180793421,
    "name": "test-postman-newman",
    "full_name": "manfer993/test-postman-newman",
    "description": null,
    "fork": false,
    "created_at": "2019-04-11T13:03:11Z",
    "updated_at": "2019-11-09T02:35:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 44501187,
    "owner_login": "manfer993",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/44501187?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 219174248,
    "name": "postman_collestion_test",
    "full_name": "testanna/postman_collestion_test",
    "description": null,
    "fork": false,
    "created_at": "2019-11-02T15:35:33Z",
    "updated_at": "2019-11-02T15:42:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 26113389,
    "owner_login": "testanna",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/26113389?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 142165649,
    "name": "Advanced-Automated-Testing-Postman",
    "full_name": "SaadIsrar/Advanced-Automated-Testing-Postman",
    "description": null,
    "fork": false,
    "created_at": "2018-07-24T13:54:38Z",
    "updated_at": "2018-07-24T14:07:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 39806380,
    "owner_login": "SaadIsrar",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/39806380?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 151120028,
    "name": "postman-test-jenkins",
    "full_name": "tagilan/postman-test-jenkins",
    "description": null,
    "fork": false,
    "created_at": "2018-10-01T16:26:08Z",
    "updated_at": "2018-10-01T16:27:10Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 37104841,
    "owner_login": "tagilan",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/37104841?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 221273418,
    "name": "Test-repository-By-Postman",
    "full_name": "phrobinet/Test-repository-By-Postman",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-12T17:25:08Z",
    "updated_at": "2019-11-12T17:25:08Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 38053370,
    "owner_login": "phrobinet",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/38053370?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 236598778,
    "name": "Postman-Tests-Monetha",
    "full_name": "zivile-b/Postman-Tests-Monetha",
    "description": null,
    "fork": false,
    "created_at": "2020-01-27T21:26:37Z",
    "updated_at": "2020-01-27T21:42:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45869851,
    "owner_login": "zivile-b",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/45869851?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 245208572,
    "name": "Test_REp_from_Postman",
    "full_name": "my4thdimension/Test_REp_from_Postman",
    "description": "This is your first repository",
    "fork": false,
    "created_at": "2020-03-05T16:07:19Z",
    "updated_at": "2020-03-05T16:07:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58442256,
    "owner_login": "my4thdimension",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/58442256?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 148644874,
    "name": "petsore-swager-postman-tests",
    "full_name": "maxmayr95/petsore-swager-postman-tests",
    "description": null,
    "fork": false,
    "created_at": "2018-09-13T13:51:00Z",
    "updated_at": "2018-09-14T08:13:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 27785831,
    "owner_login": "maxmayr95",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/27785831?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 146228658,
    "name": "campaigns_postman_tests",
    "full_name": "jamesespie/campaigns_postman_tests",
    "description": null,
    "fork": false,
    "created_at": "2018-08-27T00:50:24Z",
    "updated_at": "2018-08-27T00:54:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16568947,
    "owner_login": "jamesespie",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/16568947?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 149601905,
    "name": "postman_integration_test",
    "full_name": "turing-95/postman_integration_test",
    "description": null,
    "fork": false,
    "created_at": "2018-09-20T11:55:19Z",
    "updated_at": "2018-09-20T12:58:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 10664004,
    "owner_login": "turing-95",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/10664004?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 214897212,
    "name": "Test-repository-Postman",
    "full_name": "vicontesse/Test-repository-Postman",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-10-13T21:33:28Z",
    "updated_at": "2019-10-13T21:33:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54743236,
    "owner_login": "vicontesse",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/54743236?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 232444301,
    "name": "test-postman-action",
    "full_name": "jarrodparkes/test-postman-action",
    "description": null,
    "fork": false,
    "created_at": "2020-01-08T00:34:38Z",
    "updated_at": "2020-01-08T01:14:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1331063,
    "owner_login": "jarrodparkes",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/1331063?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 232560118,
    "name": "Test-Repository",
    "full_name": "lindazondi/Test-Repository",
    "description": "This is repository was created in postman",
    "fork": false,
    "created_at": "2020-01-08T12:37:54Z",
    "updated_at": "2020-01-08T12:37:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59610798,
    "owner_login": "lindazondi",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/59610798?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 238409138,
    "name": "Test-repository",
    "full_name": "PeterAtCofra/Test-repository",
    "description": "This is a repository created by Postman",
    "fork": false,
    "created_at": "2020-02-05T09:09:39Z",
    "updated_at": "2020-02-05T09:09:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43744406,
    "owner_login": "PeterAtCofra",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/43744406?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 238833892,
    "name": "newmanTest",
    "full_name": "Verma-Shreya/newmanTest",
    "description": "Observing how newman reporter works for Postman",
    "fork": false,
    "created_at": "2020-02-07T03:13:27Z",
    "updated_at": "2020-02-07T03:44:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 60766221,
    "owner_login": "Verma-Shreya",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/60766221?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "newman",
      "report",
      "reporter"
    ]
  },
  {
    "id": 214901678,
    "name": "Test-repository-Postman-Twillio",
    "full_name": "vicontesse/Test-repository-Postman-Twillio",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-10-13T22:12:55Z",
    "updated_at": "2019-10-13T22:12:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54743236,
    "owner_login": "vicontesse",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/54743236?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 243183725,
    "name": "Postman-Test-Repo-1",
    "full_name": "virenbochare/Postman-Test-Repo-1",
    "description": "This is test repository for Postman",
    "fork": false,
    "created_at": "2020-02-26T06:16:45Z",
    "updated_at": "2020-02-26T06:16:45Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58376947,
    "owner_login": "virenbochare",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/58376947?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 214885596,
    "name": "Test-Repository-2",
    "full_name": "LKReis/Test-Repository-2",
    "description": "This is a repository created using Postman",
    "fork": false,
    "created_at": "2019-10-13T20:02:41Z",
    "updated_at": "2019-10-13T20:02:41Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15893864,
    "owner_login": "LKReis",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15893864?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224263746,
    "name": "Test-repository922.4581869625572",
    "full_name": "MusolQA/Test-repository922.4581869625572",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:51:44Z",
    "updated_at": "2019-11-26T18:51:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 124437063,
    "name": "yarn-postman-newman",
    "full_name": "saimatsumoto/yarn-postman-newman",
    "description": "a mock-up repo to test out running postman API test with newman, installed via yarn instead of npm",
    "fork": false,
    "created_at": "2018-03-08T19:18:57Z",
    "updated_at": "2018-03-08T19:18:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25797778,
    "owner_login": "saimatsumoto",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/25797778?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "newman",
      "running",
      "mock",
      "install",
      "installed",
      "instead"
    ]
  },
  {
    "id": 224834700,
    "name": "Test-repository390.31342831253914",
    "full_name": "MusolQA/Test-repository390.31342831253914",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-29T10:46:18Z",
    "updated_at": "2019-11-29T10:46:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224260835,
    "name": "Test-repositoryNaN",
    "full_name": "MusolQA/Test-repositoryNaN",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:34:56Z",
    "updated_at": "2019-11-26T18:34:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224834690,
    "name": "Test-repository568.8996070678116",
    "full_name": "MusolQA/Test-repository568.8996070678116",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-29T10:46:15Z",
    "updated_at": "2019-11-29T10:46:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224261196,
    "name": "Test-repository500.8800526140156",
    "full_name": "MusolQA/Test-repository500.8800526140156",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:36:55Z",
    "updated_at": "2019-11-26T18:36:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224261524,
    "name": "Test-repository988.8426864011375",
    "full_name": "MusolQA/Test-repository988.8426864011375",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:38:42Z",
    "updated_at": "2019-11-26T18:38:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224267647,
    "name": "Test-repository111.03144054306213",
    "full_name": "MusolQA/Test-repository111.03144054306213",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T19:15:23Z",
    "updated_at": "2019-11-26T19:15:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224263697,
    "name": "Test-repository713.7768787670547",
    "full_name": "MusolQA/Test-repository713.7768787670547",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:51:24Z",
    "updated_at": "2019-11-26T18:51:24Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 233174507,
    "name": "Test-Repository1",
    "full_name": "lindazondi/Test-Repository1",
    "description": "This is repository was created in postman",
    "fork": false,
    "created_at": "2020-01-11T04:11:33Z",
    "updated_at": "2020-01-11T04:11:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59610798,
    "owner_login": "lindazondi",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/59610798?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 234618943,
    "name": "Github-test-auto",
    "full_name": "bagepallis/Github-test-auto",
    "description": "This repos is created by Postman",
    "fork": false,
    "created_at": "2020-01-17T19:11:56Z",
    "updated_at": "2020-01-17T19:11:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59847351,
    "owner_login": "bagepallis",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/59847351?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos"
    ]
  },
  {
    "id": 214885696,
    "name": "Test-Repository-3",
    "full_name": "LKReis/Test-Repository-3",
    "description": "This is a repository created using Postman",
    "fork": false,
    "created_at": "2019-10-13T20:03:35Z",
    "updated_at": "2019-10-13T20:03:35Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15893864,
    "owner_login": "LKReis",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15893864?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224263866,
    "name": "Test-repository224.1962010892926",
    "full_name": "MusolQA/Test-repository224.1962010892926",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:52:28Z",
    "updated_at": "2019-11-26T18:52:28Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 246137040,
    "name": "Postman-Repo9",
    "full_name": "Sibi1989/Postman-Repo9",
    "description": "This is your first repository for Postman Testing",
    "fork": false,
    "created_at": "2020-03-09T20:36:46Z",
    "updated_at": "2020-03-09T20:36:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47094656,
    "owner_login": "Sibi1989",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/47094656?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 246133681,
    "name": "Postman-Repo2",
    "full_name": "Sibi1989/Postman-Repo2",
    "description": "This is your first repository for Postman Testing",
    "fork": false,
    "created_at": "2020-03-09T20:19:26Z",
    "updated_at": "2020-03-09T20:19:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47094656,
    "owner_login": "Sibi1989",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/47094656?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224262277,
    "name": "Test-repository467.0666792556317",
    "full_name": "MusolQA/Test-repository467.0666792556317",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:43:06Z",
    "updated_at": "2019-11-26T18:43:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 215131323,
    "name": "Test-Repository-4",
    "full_name": "LKReis/Test-Repository-4",
    "description": "This is a repository created using Postman",
    "fork": false,
    "created_at": "2019-10-14T19:43:46Z",
    "updated_at": "2019-10-14T19:43:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15893864,
    "owner_login": "LKReis",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15893864?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224262011,
    "name": "Test-repository654.2149555032304",
    "full_name": "MusolQA/Test-repository654.2149555032304",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:41:27Z",
    "updated_at": "2019-11-26T18:41:27Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224834708,
    "name": "Test-repository449.91348115256756",
    "full_name": "MusolQA/Test-repository449.91348115256756",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-29T10:46:21Z",
    "updated_at": "2019-11-29T10:46:21Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 224834429,
    "name": "Test-repository339.3132527268292",
    "full_name": "MusolQA/Test-repository339.3132527268292",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-29T10:44:30Z",
    "updated_at": "2019-11-29T10:44:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 244866979,
    "name": "repositoryName5293",
    "full_name": "prajwalabhat/repositoryName5293",
    "description": "This is Test repository from Postman",
    "fork": false,
    "created_at": "2020-03-04T10:06:06Z",
    "updated_at": "2020-03-04T10:06:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 60467330,
    "owner_login": "prajwalabhat",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/60467330?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 245084854,
    "name": "repositoryName254",
    "full_name": "prajwalabhat/repositoryName254",
    "description": "This is Test repository from Postman",
    "fork": false,
    "created_at": "2020-03-05T06:20:01Z",
    "updated_at": "2020-03-05T06:20:01Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 60467330,
    "owner_login": "prajwalabhat",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/60467330?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 245725511,
    "name": "My-repository-ut9nezhhiuo",
    "full_name": "edjacks/My-repository-ut9nezhhiuo",
    "description": "Testing of repo create from postman",
    "fork": false,
    "created_at": "2020-03-08T00:09:19Z",
    "updated_at": "2020-03-08T00:09:19Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11890690,
    "owner_login": "edjacks",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/11890690?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "create",
      "repo"
    ]
  },
  {
    "id": 244815781,
    "name": "repositoryName5399",
    "full_name": "prajwalabhat/repositoryName5399",
    "description": "This is Test repository from Postman",
    "fork": false,
    "created_at": "2020-03-04T05:30:20Z",
    "updated_at": "2020-03-04T05:30:20Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 60467330,
    "owner_login": "prajwalabhat",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/60467330?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224261680,
    "name": "Test-repository497.875242683308",
    "full_name": "MusolQA/Test-repository497.875242683308",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:39:31Z",
    "updated_at": "2019-11-26T18:39:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 234618838,
    "name": "Github-test-new",
    "full_name": "bagepallis/Github-test-new",
    "description": "This repos is created by Postman",
    "fork": false,
    "created_at": "2020-01-17T19:11:18Z",
    "updated_at": "2020-01-17T19:11:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59847351,
    "owner_login": "bagepallis",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/59847351?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos"
    ]
  },
  {
    "id": 215132727,
    "name": "Test-Repository-repoNum-",
    "full_name": "LKReis/Test-Repository-repoNum-",
    "description": "This is a repository created using Postman",
    "fork": false,
    "created_at": "2019-10-14T19:51:37Z",
    "updated_at": "2019-10-14T19:51:37Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15893864,
    "owner_login": "LKReis",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15893864?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 224263825,
    "name": "Test-repository94.67458235917991",
    "full_name": "MusolQA/Test-repository94.67458235917991",
    "description": "This is repo created by POSTMAN",
    "fork": false,
    "created_at": "2019-11-26T18:52:13Z",
    "updated_at": "2019-11-26T18:52:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40713510,
    "owner_login": "MusolQA",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/40713510?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo"
    ]
  },
  {
    "id": 215132781,
    "name": "Test-Repository-w2dkcq",
    "full_name": "LKReis/Test-Repository-w2dkcq",
    "description": "This is a repository created using Postman",
    "fork": false,
    "created_at": "2019-10-14T19:51:57Z",
    "updated_at": "2019-10-14T19:51:57Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15893864,
    "owner_login": "LKReis",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15893864?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 204939862,
    "name": "Repos-Created-By-Postman",
    "full_name": "fpachelli/Repos-Created-By-Postman",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-08-28T13:35:00Z",
    "updated_at": "2019-08-28T13:35:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 53526290,
    "owner_login": "fpachelli",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/53526290?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 246136477,
    "name": "Postman-Repo8",
    "full_name": "Sibi1989/Postman-Repo8",
    "description": "This is your first repository for Postman Testing",
    "fork": false,
    "created_at": "2020-03-09T20:33:58Z",
    "updated_at": "2020-03-09T20:33:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47094656,
    "owner_login": "Sibi1989",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/47094656?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 249636771,
    "name": "Kanwar-Github-Postman-Assignment",
    "full_name": "KanwarNarania/Kanwar-Github-Postman-Assignment",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-03-24T07:06:15Z",
    "updated_at": "2020-03-27T04:09:47Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 62278020,
    "owner_login": "KanwarNarania",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/62278020?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 241943397,
    "name": "Postman-Repo1",
    "full_name": "Sibi1989/Postman-Repo1",
    "description": "This is your first repository for Postman Testing",
    "fork": false,
    "created_at": "2020-02-20T17:13:25Z",
    "updated_at": "2020-02-23T02:21:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 47094656,
    "owner_login": "Sibi1989",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/47094656?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 227245974,
    "name": "This-is-a-test-repos",
    "full_name": "bentonluu0/This-is-a-test-repos",
    "description": "This is a repos using Postman",
    "fork": false,
    "created_at": "2019-12-11T01:04:10Z",
    "updated_at": "2019-12-11T01:04:10Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 52401216,
    "owner_login": "bentonluu0",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/52401216?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos"
    ]
  },
  {
    "id": 236539572,
    "name": "TestingExample",
    "full_name": "KarthikBommineni/TestingExample",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-01-27T16:43:58Z",
    "updated_at": "2020-01-27T16:43:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35219166,
    "owner_login": "KarthikBommineni",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35219166?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 213965065,
    "name": "TestrepositoryA",
    "full_name": "Zerep08/TestrepositoryA",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-10-09T16:12:52Z",
    "updated_at": "2019-10-09T16:12:52Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32379040,
    "owner_login": "Zerep08",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/32379040?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 238392878,
    "name": "MyFirstPostmanTestSuite",
    "full_name": "Aleena10/MyFirstPostmanTestSuite",
    "description": null,
    "fork": false,
    "created_at": "2020-02-05T07:30:40Z",
    "updated_at": "2020-02-05T07:34:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 20670474,
    "owner_login": "Aleena10",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/20670474?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 245209576,
    "name": "Test_REp2_from_Postman",
    "full_name": "my4thdimension/Test_REp2_from_Postman",
    "description": "This is your first repository",
    "fork": false,
    "created_at": "2020-03-05T16:11:40Z",
    "updated_at": "2020-03-05T16:11:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58442256,
    "owner_login": "my4thdimension",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/58442256?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 245209431,
    "name": "Test_REp1_from_Postman",
    "full_name": "my4thdimension/Test_REp1_from_Postman",
    "description": "This is your first repository",
    "fork": false,
    "created_at": "2020-03-05T16:11:03Z",
    "updated_at": "2020-03-05T16:11:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58442256,
    "owner_login": "my4thdimension",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/58442256?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 233061344,
    "name": "Test1-repository",
    "full_name": "Preetha-github/Test1-repository",
    "description": "This is a test1 repository created by Postman",
    "fork": false,
    "created_at": "2020-01-10T14:14:23Z",
    "updated_at": "2020-01-10T14:14:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59710717,
    "owner_login": "Preetha-github",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/59710717?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository",
      "test1"
    ]
  },
  {
    "id": 226272359,
    "name": "test5",
    "full_name": "itsatya/test5",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-12-06T07:36:31Z",
    "updated_at": "2019-12-06T07:36:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 11086631,
    "owner_login": "itsatya",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/11086631?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 220164831,
    "name": "TestRepositary",
    "full_name": "Archana-design/TestRepositary",
    "description": "This is a test repositary created by Postman",
    "fork": false,
    "created_at": "2019-11-07T06:14:51Z",
    "updated_at": "2019-11-07T07:03:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54472782,
    "owner_login": "Archana-design",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/54472782?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repositary"
    ]
  },
  {
    "id": 222802381,
    "name": "TestRepository",
    "full_name": "Radeek/TestRepository",
    "description": " This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-19T22:30:42Z",
    "updated_at": "2019-11-19T22:30:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57967232,
    "owner_login": "Radeek",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/57967232?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 222803929,
    "name": "TestRepository2",
    "full_name": "Radeek/TestRepository2",
    "description": " This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-19T22:41:55Z",
    "updated_at": "2019-11-19T22:41:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57967232,
    "owner_login": "Radeek",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/57967232?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 249230237,
    "name": "TestRepository2856",
    "full_name": "dar-lys/TestRepository2856",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-03-22T16:58:56Z",
    "updated_at": "2020-03-22T16:58:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 62504923,
    "owner_login": "dar-lys",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/62504923?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 223670680,
    "name": "testRepository5",
    "full_name": "Radeek/testRepository5",
    "description": " This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-24T00:11:45Z",
    "updated_at": "2019-11-24T00:11:45Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57967232,
    "owner_login": "Radeek",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/57967232?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 222805628,
    "name": "testRepository4",
    "full_name": "Radeek/testRepository4",
    "description": " This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-19T22:54:23Z",
    "updated_at": "2019-11-19T23:36:30Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57967232,
    "owner_login": "Radeek",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/57967232?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 223806435,
    "name": "TestRepository5.287448086179117",
    "full_name": "Radeek/TestRepository5.287448086179117",
    "description": " This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-24T20:35:55Z",
    "updated_at": "2019-11-24T20:35:55Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57967232,
    "owner_login": "Radeek",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/57967232?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 241952547,
    "name": "Test2-repository-",
    "full_name": "Camonadas/Test2-repository-",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-02-20T17:54:39Z",
    "updated_at": "2020-02-20T17:54:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7605559,
    "owner_login": "Camonadas",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/7605559?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 222804087,
    "name": "testRepository3",
    "full_name": "Radeek/testRepository3",
    "description": " This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-19T22:42:59Z",
    "updated_at": "2019-11-19T22:42:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57967232,
    "owner_login": "Radeek",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/57967232?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 241952450,
    "name": "Test2-repository-.-RandomName-",
    "full_name": "Camonadas/Test2-repository-.-RandomName-",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-02-20T17:54:11Z",
    "updated_at": "2020-02-20T17:54:11Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7605559,
    "owner_login": "Camonadas",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/7605559?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 213963233,
    "name": "Testrepo",
    "full_name": "Zerep08/Testrepo",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-10-09T16:04:33Z",
    "updated_at": "2019-10-09T16:04:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 32379040,
    "owner_login": "Zerep08",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/32379040?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 164997909,
    "name": "testrail",
    "full_name": "bharath411/testrail",
    "description": "This repository contains testrail restapi requests in postman collections.",
    "fork": false,
    "created_at": "2019-01-10T05:45:51Z",
    "updated_at": "2019-01-11T17:02:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 8632970,
    "owner_login": "bharath411",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/8632970?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "collections",
      "repo",
      "request",
      "postman collection",
      "repos",
      "repository",
      "rest",
      "requests",
      "contain",
      "postman collections",
      "restapi",
      "testrail"
    ]
  },
  {
    "id": 206310641,
    "name": "Testing",
    "full_name": "akspj/Testing",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-09-04T12:09:59Z",
    "updated_at": "2019-09-04T12:09:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46963954,
    "owner_login": "akspj",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/46963954?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 236507592,
    "name": "Testing",
    "full_name": "KarthikBommineni/Testing",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-01-27T14:22:54Z",
    "updated_at": "2020-01-27T14:22:54Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35219166,
    "owner_login": "KarthikBommineni",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35219166?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 207448841,
    "name": "Test-repository",
    "full_name": "Susee73/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-09-10T02:35:44Z",
    "updated_at": "2019-09-10T02:35:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 54784569,
    "owner_login": "Susee73",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/54784569?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 221714016,
    "name": "Test-repository",
    "full_name": "anniebnt/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-14T14:16:42Z",
    "updated_at": "2019-11-14T14:16:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 57755501,
    "owner_login": "anniebnt",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/57755501?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 239347673,
    "name": "Test-repository",
    "full_name": "JishaKackattil/Test-repository",
    "description": "This is a test repository created by postman",
    "fork": false,
    "created_at": "2020-02-09T17:51:31Z",
    "updated_at": "2020-02-09T17:51:31Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 60303121,
    "owner_login": "JishaKackattil",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/60303121?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 246624118,
    "name": "Test-repository",
    "full_name": "ronnsicuan/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-03-11T16:32:23Z",
    "updated_at": "2020-03-11T16:32:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7823813,
    "owner_login": "ronnsicuan",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7823813?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 230868727,
    "name": "Test-repository",
    "full_name": "charithardhreddy/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-12-30T07:24:01Z",
    "updated_at": "2019-12-30T07:24:01Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 59354353,
    "owner_login": "charithardhreddy",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/59354353?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 236500983,
    "name": "Test-repositorya",
    "full_name": "KarthikBommineni/Test-repositorya",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-01-27T13:51:33Z",
    "updated_at": "2020-01-27T13:51:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35219166,
    "owner_login": "KarthikBommineni",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35219166?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 223937967,
    "name": "Test-repository",
    "full_name": "AlinaFelinska/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-11-25T11:58:21Z",
    "updated_at": "2019-11-25T11:58:21Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 58171752,
    "owner_login": "AlinaFelinska",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/58171752?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 201205890,
    "name": "Test-repostory",
    "full_name": "GabrielaBuftea/Test-repostory",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-08-08T07:43:06Z",
    "updated_at": "2019-08-08T07:43:06Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40985461,
    "owner_login": "GabrielaBuftea",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/40985461?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 218095778,
    "name": "Test-repository",
    "full_name": "RebrykVasyl/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-10-28T16:32:03Z",
    "updated_at": "2019-10-28T16:32:03Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 55355139,
    "owner_login": "RebrykVasyl",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/55355139?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 210941039,
    "name": "Test-repository",
    "full_name": "Arshads2/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2019-09-25T21:09:40Z",
    "updated_at": "2019-09-25T21:09:40Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 55810742,
    "owner_login": "Arshads2",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/55810742?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 250093453,
    "name": "Test-repository",
    "full_name": "jshalabi/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-03-25T21:18:15Z",
    "updated_at": "2020-03-25T21:18:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 15658038,
    "owner_login": "jshalabi",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/15658038?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 250091231,
    "name": "Test-repository",
    "full_name": "kmonaheng73/Test-repository",
    "description": "This is a test repository created by Postman",
    "fork": false,
    "created_at": "2020-03-25T21:05:26Z",
    "updated_at": "2020-03-25T21:05:26Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 62523692,
    "owner_login": "kmonaheng73",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/62523692?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "create",
      "repo",
      "repos",
      "repository"
    ]
  },
  {
    "id": 176346742,
    "name": "PostmanMock",
    "full_name": "adanil/PostmanMock",
    "description": null,
    "fork": false,
    "created_at": "2019-03-18T18:30:27Z",
    "updated_at": "2019-05-15T12:10:07Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31052524,
    "owner_login": "adanil",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/31052524?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 168597703,
    "name": "gradle-newman-runner",
    "full_name": "gmanideep1991/gradle-newman-runner",
    "description": "Run postman collections and generate reports. Still in development.",
    "fork": false,
    "created_at": "2019-01-31T21:13:13Z",
    "updated_at": "2019-02-12T03:33:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2993845,
    "owner_login": "gmanideep1991",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/2993845?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "collections",
      "repo",
      "postman collection",
      "develop",
      "generate",
      "postman collections",
      "development",
      "report",
      "reports"
    ]
  },
  {
    "id": 214824652,
    "name": "car-rental-management",
    "full_name": "achu1998/car-rental-management",
    "description": "A Car-Rental-Management developed on node and mongodb and deployed in heroku. The postman collection is in postman-collection.json file.  Add car page doesn't have front end . Car are manually added through the body which is clearly mentioned in the README.md file. This repository has the files implemented in localhost.Visit this repo:",
    "fork": false,
    "created_at": "2019-10-13T13:25:18Z",
    "updated_at": "2019-10-14T15:35:10Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 43047640,
    "owner_login": "achu1998",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/43047640?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "file",
      "repos",
      "repository",
      "node",
      "json",
      "develop",
      "implement",
      "mongo",
      "files",
      "local",
      "front",
      "host",
      "mongod",
      "mongodb",
      "developed",
      "deployed",
      "implemented",
      "front end",
      "heroku",
      "added",
      "manua",
      "early"
    ]
  },
  {
    "id": 119091462,
    "name": "Zadanie_17_5",
    "full_name": "martinproxy0/Zadanie_17_5",
    "description": " 17. ExpressJS - ekspresowe tworzenie aplikacji w NodeJS Wyzwania: Dowiesz się czym jest ExpressJS Nauczysz się korzystać z routingu Poznasz czym są szablony 17.1. Wprowadzenie do Expressa Express jest jednym z najpopularniejszych frameworków dla aplikacji pisanych w Node.js. Jest bardzo lekki i pozwala na lepszą organizację aplikacji w modelu MVC. Ok, zwolnijmy. Już na samym starcie pojawiły się dwa pojęcia, których do tej pory nie omówiliśmy zbyt dokładnie: framework i MVC. Na początku przypomnijmy sobie czym jest framework.  Czym są frameworki? Framework to swego rodzaju szkielet, na którym opieramy budowę naszej aplikacji. Jest pewnym poziomem abstrakcji, na której konstruujemy naszą aplikację.  Czym jest abstrakcja? Abstrakcja w inżynierii oprogramowania to technika, dzięki której jesteśmy w stanie zapanować nad złożonością systemu. Najzwyczajniej w świecie nie da się myśleć na wielu płaszczyznach na raz, dlatego programiści dzielą problemy na pewne poziomy i to na nich rozwiązują mniejsze problemy. Przykładowo - programista korzystający z Reacta nie martwi się o niższy poziom abstrakcji, z którego nieświadomie korzysta używając Reacta. Korzystając z komputera także nie zastanawiamy się za bardzo co dzieje się w środku procesora czy też w jaki sposób jest skonstruowany. Tym poziomem abstrakcji po prostu nie zawracamy sobie głowy. Używając JavaScriptu nie myślimy w jaki sposób parser analizuje składnię języka. Jeśli nie jest to nam potrzebne, to możemy zająć się tym, co jest dla nas naprawdę istotne - pisaniem aplikacji internetowych!  Express to właśnie kolejny, wyższy poziom abstrakcji, dzięki któremu możemy skupić się na właściwym problemie. Zawiera zbiór generycznych (możliwych do zastosowania w wielu miejscach / uniwersalnych) funkcjonalności, które powtarzają się w obrębie każdej aplikacji. Cały zamysł frameworka opiera się na zasadzie - nie wymyślaj koła na nowo, bo można budować na podstawie dobrych, uniwersalnych rozwiązań. Po wykonaniu tego samego zadania wiele razy, człowiek instynktownie szuka sposobu na automatyzację problemu - szczególnie leniwy programista. :)  Framework ma niestety jedną wadę, która bywa momentami również zaletą - narzuca programiście sposób w jaki należy rozwiązać problem. Takie podejście z jednej strony nieco nas ogranicza, bo nie pozwala nam 'grzebać' w rozwiązaniu, a z drugiej strony zmniejsza ilość miejsc, w których moglibyśmy popełnić jakiś błąd. Zaletą takiego podejścia jest też to, że programiści korzystający z frameworków często borykają się z podobnymi problemami, przez co łatwo jest znaleźć rozwiązania, bo ktoś już na pewno zetknął się z czymś, co sprawia nam kłopot :)  Wracając do Expressa - jest on niewielkim frameworkiem, który daje programiście przyjemną podstawkę do tworzenia aplikacji, ale nie narzuca żadnych praktyk - może o tym świadczyć chociażby fakt, że wiele znanych frameworków opiera swoją budowę na Express. Można do nich zaliczyć przykładowo Loopbacka, Sailsa czy Krakena.  Model-View-Controller Ok, wiemy już czym jest framework - pora na pojęcie MVC :) Jest to skrót od ang. Model View Controller (Model Widok Kontroler). Jest jednym z najczęściej przewijających się wzorców architektonicznych w internecie. Popularnością pomału wypiera go architektura Flux, o której coraz częściej słychać (szczególnie w środowisku Reacta), ale o tym wzorcu powiemy sobie jeszcze przy okazji omawiania Reduxa - wróćmy do MVC.  Głównym założeniem przyjętym podczas projektowania MVC było oddzielenie warstwy prezentacji od logiki biznesowej aplikacji. To podejście umożliwia tworzenie narzędzi działających bez graficznego interfejsu (zastępuje go wtedy tzw. Command Line Interface, a.k.a. CLI) i jest dalej popularne w środowisku Unixowym. Tak więc:  Model jest reprezentacją logiki aplikacji / problemu z jakim się zmagamy / domeną. Widok opisuje w jaki sposób coś wyświetlić. W React są to komponenty (szczególnie te prezentacyjne). Kontroler przyjmuje dane od użytkownika aplikacji i reaguje na jego działania w obrębie widoku. Aktualizuje widok i model aplikacji. O samej architekturze można napisać osobny moduł tym bardziej, że jak już wcześniej wspomnieliśmy bardzo często przewija się on w środowisku front-end developerów i jest częścią składową wielu frameworków. Sama implementacja MVC wymaga wiedzy na temat programowania obiektowego i wzorców projektowych. Zainteresowanych zapraszam do przeczytania tej książki na temat wzorców projektowych stosowanych w JavaScripcie.  Express dostarcza wielu funkcjonalności do tworzenia aplikacji webowych. Jak już wspomniałem, ułatwia on przede wszystkim szybki rozwój aplikacji opartych na Node.js. Podstawowymi cechami tego frameworka są:  serwowanie plików statycznych za pomocą jednej komendy konfigurowanie middleware, czyli pośrednika między żądaniem a odpowiedzią w momencie, kiedy użytkownik wykonuje jakieś akcje, np. wysyła formularz, middleware może wykonać pewne czynności zanim dane zostaną zapisane. Nie sprowadza się to oczywiście tylko do zapisu danych, ale szerzej na temat tego zagadnienia powiemy sobie w dalszym rozdziale definiowanie tablicy routingu, czyli ścieżek (adresów), które wyświetlają odpowiednie treści, przyjmują i zapisują dane, bądź odpytane o dane zwracają je. Bazują na protokole HTTP oraz URI (ang. Uniform Resource Identifier) pozwala na dynamiczne tworzenie stron HTML bazujących na argumentach przekazanych do istniejących szablonów Nie przejmuj się, jeśli powyższe opisy wydają się być nieco zagmatwane. Kolejne rozdziały rozjaśnią sprawę! Zanim jednak przejdziemy do omawiania poszczególnych funkcjonalności Expressa, przeprowadzimy proces instalacji.  Jeśli masz wątpliwości do powyższego materiału, to - zanim zatwierdzisz - zapytaj na czacie :) Zapoznałe(a)m się! 17.2. Instalacja ExpressJS Framework Express instalujemy używając npm, analogicznie do innych pakietów, które dodawaliśmy już we wcześniejszych modułach. Dla przypomnienia, wystarczy, że zainicjujesz swój projekt - npm init, a następnie użyjesz komendy npm install express --save, która zapisze zainstalowany pakiet w katalogu node_modules/ i doda go do sekcji dependencies w pliku package.json.  Razem z Expressem należy zainstalować jeszcze jeden ważny moduł - body-parser, który jest pakietem pozwalającym na obsługę różnych formatów danych w middleware takich jak JSON, text czy tzw. surowe dane (ang. raw data). Aby go zainstalować, wpisz npm install body-parser --save.  Pierwsza aplikacja w ExpressJS Sprawdźmy teraz, czy wszystko działa tak jak powinno. Testowa aplikacja, jaką stworzymy przy użyciu Expressa, będzie przedstawiała podstawową zasadę działania tego frameworka. Aplikacja uruchomi serwer oraz będzie nasłuchiwać na porcie 3000 w oczekiwaniu na połączenie - dokładnie w taki sam sposób, jak w przypadku serwera HTTP napisanego w “czystym\" Node.js. Nasłuchiwanie oznacza nic innego jak oczekiwanie na połączenie - po wystąpieniu żądania, serwer odpowie nam klasycznym “Hello world\".  Zanim zaczniemy tworzyć aplikację, musimy wytłumaczyć sobie pewne pojęcia.  Opis pojęcia routingu Routing to sposób określania jak aplikacja będzie odpowiadać na żądania klienta na dane endpointy przy użyciu konkretnych metod HTTP. Przypomnijmy sobie w jaki sposób wyglądały metody HTTP:  GET - najprostsza z metod HTTP - służy do pobierania zasobów z serwera. Pobranymi zasobami mogą być np. pliki HTML, CSS, JavaScript czy obiekty JSON / XML. POST - ta metoda jest używana do wysyłania danych do serwera. Stosuje się ją np. przy formularzach lub przy wstawianiu zdjęć i wysyłaniu ich jako załącznik. Zwykle dane te wysyłane są jako para klucz-wartość. PUT - działa podobnie jak POST, czyli również służy do wysyłania danych. Różnicą jest ograniczenie do wysłania tylko jednej porcji danych - np. jednego pola. Metoda ta najczęściej używana jest do aktualizacji istniejących danych DELETE - metoda, która służy do usuwania danych z serwera. Chodzi oczywiście o dane, które zostały wskazane przy wysyłaniu żądania. Kolejnym pojęciem jest URI (nazywane również PATH) - jest to właśnie wspomniany wcześniej endpoint, który zawiera polecenia do wykonania gdy zostanie wywołany przez żądanie.  Czas start! Na początek stwórzmy plik server.js w katalogu z projektem. Po zainstalowaniu powyższych zależności, drzewo projektu powinno wyglądać w następujący sposób:   Aby mieć możliwość skorzystania z zainstalowanych zależności, na początku należy zadeklarować zmienną, w której będziemy przechowywać funkcjonalności pakietu Expressa.  var express = require('express'); Jak widzisz, każda paczka JS'a działa dokładnie w taki sam sposób. Koncepcja modułów będzie przewijać się aż do końca tego kursu. Następnym krokiem będzie stworzenie aplikacji Express:  var app = express(); Naszą aplikację przypisaliśmy do zmiennej app. Teraz możemy sprawić, aby odpowiadała prostym Hello world w momencie, w którym odbierzemy wysłane zapytanie GET na adres strony domowej:  app.get('/', function(req, res) {     res.send('Hello world'); }); Powyższy kod rejestruje pierwszy routing (proces przetwarzania otrzymanego adresu żądania i na jego podstawie decydowanie, co powinno zostać uruchomione) na wysłane żądanie GET po wejściu na stronę główną ( http://localhost:3000/ ). Jako callback na wystąpienie tego zdarzenia wywoływana jest funkcja, która w przypadku udanej odpowiedzi wyśle wiadomość Hello world.  To jednak jeszcze nie koniec. Zarejestrowaliśmy obsługę pierwszego routingu, ale należy zainicjować nasłuchiwanie serwera na to i inne zdarzenia. Dopiszmy więc:  var server = app.listen(3000, function() {     console.log('Przykładowa aplikacja nasłuchuje na http://localhost:3000'); }); Po zapisaniu powyższego kodu, należy uruchomić go komendą node server.js (lub za pomocą Nodemona, którego poznaliśmy w pierwszym module) - teraz po ponownym wejściu na adres http://localhost:3000/ powinniśmy zobaczyć następujący widok:   Jest to znak, że nasza aplikacja działa!  Jeśli masz wątpliwości do powyższego materiału, to - zanim zatwierdzisz - zapytaj na czacie :) Zapoznałe(a)m się! 17.3. Route, czyli ścieżka wyznaczona dla użytkownika aplikacji Wykorzystanie endpointów Rozwińmy teraz trochę aplikację stworzoną w poprzednim podrozdziale. Aktualnie kod w pliku server.js wygląda następująco:  var express = require('express'); var app = express();  app.get('/', function (req, res) {     res.send('Hello world'); });  var server = app.listen(3000, function() {     console.log('Przykładowa aplikacja nasłuchuje na http://localhost:3000'); }); Endpointy statyczne Na początek zmodyfikujemy lekko żądanie GET i do strony głównej zamiast Hello world! wpiszmy Hello GET! oraz dodamy linijkę drukującą otrzymane żądanie (po stronie serwera) jak poniżej:  app.get('/', function (req, res) {     console.log('Otrzymałem żądanie GET do strony głównej');     res.send('Hello GET!'); }); Warto w tym miejscu wspomnieć o narzędziu Postman - możesz pobrać je ze strony https://www.getpostman.com/. Używa się go do testowania endpointów. Postman jest prosty i intuicyjny w obsłudze - wystarczy, że podasz adres oraz metodę HTTP, jakiej chcesz użyć w odpowiednich polach i… już :) Pozostaje tylko wysłanie requesta i sprawdzenie czy response zgadza się z naszymi oczekiwaniami.   Dodajmy też inne metody HTTP do naszej aplikacji. Zacznijmy od POST. Dla tej i kolejnej metody wykonamy podobne operacje. Chodzi tutaj o to, aby zaobserwować działanie zarejestrowanych endpointów.  app.post('/', function (req, res) {     console.log('Otrzymałem żądanie POST do strony głównej');     res.send('Hello POST!'); }); Do tego czasu oba nasze zapytania kierowaliśmy do strony domowej. Dodajmy teraz obsługę żądania z metodą DELETE oraz inną ścieżką:  app.delete('/del_user', function (req, res) {     console.log('Otrzymałem żądanie DELETE do strony /del_user');     res.send('Hello DELETE!'); }); DLA CHĘTNYCH: Przetestuj powyższe zapytanie w Postmanie! :)  Dla praktyki, dodajmy jeszcze kilka innych endpointów, a następnie przejdźmy do testowania.  app.get('/list_user', function (req, res) {     console.log('Otrzymałem żądanie GET do strony /list_user');     res.send('Strona z listą użytkowników!'); });  app.get('/ab*cd', function(req, res) {     console.log('Otrzymałem żądanie GET do strony /ab*cd');     res.send('Wzór pasuje'); }); Po dodaniu powyższych fragmentów kodu zapisz plik server.js, a następnie ponownie użyj komendy node server.js chyba, że używasz Nodemona :)  Zerknijmy na endpoint /list_user   Otrzymaliśmy to, czego oczekiwaliśmy. Sprawdźmy jeszcze inne.    Jeśli jednak użyliśmy endpointa, którego nie zdefiniowaliśmy, otrzymamy odpowiedź jak na ostatnim obrazku.  Endpointy dynamiczne Istnieje również inny typ endpointów, które nazywa się dynamicznymi. Używanie ich pozwala na przekazywanie parametrów i bazowanie na nich. Wróćmy na moment do kodu stworzonego na samym początku:  var express = require('express'); var app = express();  app.get('/', function (req, res) {     res.send('Hello world'); });  var server = app.listen(3000, function() {     console.log('Przykładowa aplikacja nasłuchuje na http://localhost:3000'); }); Najpierw zmodyfikujemy trochę bazowy kod. Usuńmy linijki 8-10, które miały nam tylko pokazać podstawowe informacje na temat serwera. Zamiast tego napiszmy po prostu: app.listen(3000);  Tworzenie dynamicznego routingu pozwala na przekazywanie parametrów, więc spróbujmy najpierw z przykładowym id. Zamiast odwołać się do strony domowej ('/'), odwołajmy się do zmiennego parametru id. Parametr zmienny od statycznego rozróżnia się poprzez dodanie dwukropka (:) przed nazwę. W naszym przykładzie endpoint będzie więc wyglądał następująco:  /:id Zmieńmy jeszcze odpowiedź z Hello world na 'Identyfikator, który został dopisany to ' + req.params.id.  Czym jest req.params.id? req jest obiektem reprezentującym zapytanie HTTP (ang. request). Posiada on różne parametry, jak na przykład body (czyli ciało zapytania), nagłówki HTTP oraz parametry (params), które mamy zamiar odczytać.  Parametr, który wstawiliśmy jako część adresu w metodzie GET, przekazujemy jako id. W poniższym przypadku wyświetli się komunikat Identyfikator który został dopisany to 123, o ile zapytanie wysłano na adres http://localhost:3000/123.   Popróbuj z różnymi innymi parametrami i sprawdź czy aplikacja działa tak, jak tego oczekujesz.  Obsługa błędu 404 za pomocą ExpressJS Co jeśli serwer nie rozpozna żądania? W Expressie odpowiedź 404 nie jest wynikiem błędu, więc nie jest wyłapywany w trakcie działania aplikacji. Spowodowane jest to tym, że 404 zwykle oznacza brak możliwości wykonania danej czynności, a nie błąd występujący z powodu jakiejś 'wpadki' programisty. Innymi słowy, Express wykonał wszystkie funkcje middleware (które poznamy w kolejnym rozdziale) oraz route'y i dopiero wtedy dowiedział się, że żaden z nich nie odpowiedział na żądanie - taki przypadek możemy obsłużyć poprzez dodanie funkcji middleware na samym końcu (poniżej pozostałych funkcji), aby obsługiwała status 404.  Powróćmy znów do poprzedniego szablonu z metodą GET na stronę domową ('/'), która zwraca nam Hello world!. Dopiszmy teraz metodę middleware, która obsłuży nam błąd 404.  Na samym końcu, poniżej fragmentu z nasłuchiwaniem dodajmy obsługę odpowiedzi 404:  app.use(function (req, res, next) {     res.status(404).send('Wybacz, nie mogliśmy odnaleźć tego, czego żądasz!') }); Po ponownym uruchomieniu skryptu, w przeglądarce powinieneś zobaczyć Hello world!. Spróbuj teraz dopisać coś na koniec adresu (tak jak w poprzednim rozdziale dopisaliśmy id). Powinieneś otrzymać następujący komunikat:   Parametr next, który przekazujemy do funkcji jest funkcją, która pozwala “iść dalej\" do kolejnej funkcji middleware lub zakończenia żądania.  Można w ten sposób stworzyć także obsługę pozostałych błędów. Najczęściej obsługiwane błędy to:  400 - bad request - występuje gdy serwer nie może przetworzyć zapytania 401 - unauthorized - występuje gdy wymagane jest uwierzytelnienie, a nie zostało dostarczone 403 - forbidden - żądanie jest poprawne, jednak serwer odmawia odpowiedzi, może to wystąpić w przypadku gdy np. użytkownik jest zalogowany ale nie ma uprawnień do wykonania żądania 404 - not found - zasoby nie zostały znalezione 500 - internal server error - występuje gdy występują nieznane warunki i nie ma żadnej konkretnej wiadomości Zadanie: Operacje CRUD na pliku JSON Stwórzmy teraz aplikację, która będzie otwierać zewnętrzne pliki .json oraz edytować je. Zanim zaczniemy, w folderze projektu stwórz plik server.js, a następnie zainicjalizuj projekt poprzez wpisanie npm init w konsoli.  Przejdźmy do pobrania potrzebnych zależności - tym razem będzie nam potrzebny Express oraz body-parser. Jak się zapewne domyślasz, możesz zainstalować je za pomocą komendy npm install --save express body-parser. Po pobraniu paczek, możemy śmiało przejść do pisania kodu - na początek przypisz zależności do zmiennych w pliku server.js. Dodaj także linijkę var fs = require('fs') - fs będzie nam potrzebny do operacji na plikach. Nie musimy go instalować, bo jest on wbudowany w Node :)  Skoro zależności mamy już załatwione, zadeklaruj zmienną app, która wywoła funkcję express() oraz zmienną stringifyFile (na razie bez zadeklarowanej wartości).  Tuż pod deklaracją zmiennych dodaj także linijkę app.use(bodyParser.json()); - to pozwoli Ci wykorzystać middleware body-parser, które zainstalowaliśmy przed chwilą. body-parser jest nam potrzebny, aby korzystać z formatu application/json - póki co nie przejmuj się pojęciem middleware, zajmiemy się nim nieco dalej w tym kursie :)  Stwórz teraz endpoint GET /getNote, gdzie po wywołaniu zostanie wczytany Twój zewnętrzny plik JSON oraz wyświetlona zostanie jego zawartość. Przykłądowy plik test.json:  {\"menu\": {    \"id\": \"file\",    \"value\": \"File\",    \"popup\": {      \"menuitem\": [        {\"value\": \"New\", \"onclick\": \"CreateNewDoc()\"},        {\"value\": \"Open\", \"onclick\": \"OpenDoc()\"},        {\"value\": \"Close\", \"onclick\": \"CloseDoc()\"}      ]    }  }} Metoda która pozwoli nam na odczytanie pliku to readFile, którą można wywołać z zadeklarowanego wcześniej fs. Jako parametry przyjmuje ona najpierw plik, następnie opcje (np. kodowanie) i funkcję, która wywoła się po załadowaniu. W naszym przypadku będzie to więc następujący kod: fs.readFile('./test.json', 'utf8', function(err, data) {     if (err) throw err;     stringifyFile = data     res.send(data); }); Teraz pora na stworzenie endpointa, który po wywołaniu nadpisze nam podany plik. Stworzymy do tego dynamiczny endpoint, który dopisze do pliku string, który przekażemy jako parametr. Stwórz tym razem POST na /updateNote/:note. Po jego wywołaniu tekst, który znajduje się w miejscu /:note powinniśmy dopisać do wczytanego pliku poprzez dodanie req.params.note do zmiennej stringifyFile, która przechowuje aktualną zawartość pliku.  Po przypisaniu powyższej zmiennej, należy ponownie odwołać się do modułu fs tym razem używając metody writeFile. Pomoże nam w tym następujący fragment kodu:  fs.writeFile('./test.json', stringifyFile, function(err) {     If (err) throw err;     console.log('file updated'); }); Na końcu pliku dodaj nasłuchiwanie na porcie 3000.  Zapisz plik i uruchom aplikację wpisując node server.js w konsoli.  Otwórz Postmana, ustaw metodę zapytania na GET, a w pole adresu wpisz http://localhost:3000/getNote. Jako response powinieneś otrzymać Twój stworzony wcześniej plik JSON. Po zmianie z GET na POST oraz wpisaniu /updateNote/test zamiast /getNote oraz wysłaniu requesta, Twój plik JSON powinien zostać zaktualizowany o słowo test :)  Po ukończeniu zadania, wrzuć swój kod na Githuba i przekaż link do repozytorium mentorowi :)  Podgląd zadania  https://github.com/martinproxy0/Zadanie_17_3.git   Wyslij link  17.4. Serwowanie plików statycznych Express posiada wbudowaną możliwość serwowania plików statycznych - takimi plikami są na przykład obrazki, pliki CSS czy JS. Aby serwować te pliki statycznie, wystarczy użyć express.static. Pliki statyczne to pliki, które zostają dostarczone do klienta bez generowania, modyfikacji czy przetwarzania - jedyne, co trzeba z nimi zrobić, to przekazać nazwę katalogu, w którym są przetrzymywane, do express.static - to wystarczy aby zacząć je serwować. Spróbujmy przedstawić to sobie na przykładzie.  Załóżmy, że przetrzymujesz swoje zdjęcia i pliki CSS w katalogu assets/. Aby zacząć je serwować, możesz więc użyć następującej linijki:  app.use(express.static('assets')); Zmodyfikujmy więc całkowicie naszą aplikację. Najpierw stwórzmy w katalogu projektu nowy katalog o nazwie assets/. Wrzućmy do niego jakiekolwiek zdjęcie/obrazek. W pliku server.js wróćmy do poprzedniego stanu (zanim zaczęliśmy zajmować się routingiem):  var express = require('express'); var app = express();  app.get('/', function (req, res) {     res.send('Hello world'); });  var server = app.listen(3000, 'localhost', function() {     var host = server.address().address;     var port = server.address().port;      console.log('Przykładowa aplikacja nasłuchuje na http://' + host + ':' + port); }); W tym przykładzie sami definiujemy port i adres, ale w prawdziwej aplikacji moglibyśmy tych wartości nie znać. Częstym przykładem jest sytuacja w której adres i port są zdefiniowane w osobnym pliku konfiguracyjnym. Ten plik byłby inny na naszym komputerze niż na serwerze na którym będziemy publikować aplikację - ale nasz kod ma działać w obu lokalizacjach. Dlatego do wyświetlenia linka potrzebowalibyśmy pobrania tych danych za pomocą metody .address().  Pozostaje teraz jedynie w linii nr 3 dodać to, o czym powiedzieliśmy sobie chwilkę temu, czyli linijkę app.use(express.static('assets'));  Dla przypomnienia, w nawiasach do express.static przekazujemy katalog, w którym znajdują się pliki, które chcemy serwować. Po zapisaniu pliku server.js, możemy uruchomić aplikację. Teraz, aby zobaczyć nasz obrazek, wystarczy że po http://localhost:3000/ podamy nazwę pliku z rozszerzeniem - u mnie wygląda to tak:   Stwórz sobie teraz prosty plik index.html, który będzie miał formularz z dwoma inputami typu text (o nazwach first_name i last_name) oraz jednym typu submit. Element  posiada atrybuty takie jak action oraz method. Atrybut action pozwala określić, gdzie wysłać dane z formularza w momencie, gdy zostanie on zatwierdzony. W naszym przypadku będzie to http://localhost:3000/userform. Atrybut method określa metodę, jakiej chcemy użyć - w naszym przypadku niech będzie to GET.  Przykładowo, Twój index.html może wyglądać tak:                          Node Hello world example                                                 First Name:                                            Last Name:                                           Gdy już będzie gotowy, wrzuć go do katalogu /assets.  Teraz czas na modyfikację pliku server.js. Najpierw zmieńmy to, co chcemy wysyłać, gdy zostanie wysłane żądanie do strony domowej.  Zamień więc res.send('Hello world') na res.sendFile('/index.html') - jak się zapewne domyślasz, res.sendFile() wysyła w odpowiedzi plik zamiast wiadomości.  Musimy również dodać obsługę żądania na endpoint, do którego będziemy kierować nasz formularz.  app.get('/userform', function (req, res) {     const response = {         first_name: req.query.first_name,         last_name: req.query.last_name     };     res.end(JSON.stringify(response)); }); W czasie przetwarzania żądania, tworzymy nowy obiekt response, który ma klucze first_name oraz last_name. Do poszczególnych właściwości przypisujemy dane, które otrzymujemy w obiekcie req (od ang. request), czyli w obiekcie z żądaniem. Na koniec wyświetlamy nasz obiekt przetworzony na typ string za pomocą metody JSON.stringify. Po zapisaniu pliku server.js, aplikacja powinna pokazywać formularz, jak poniżej.   Po wpisaniu wartości do inputów i wysłaniu ich, powinieneś zostać przekierowany do strony /userform, a po znaku zapytania powinny zostać wyświetlone parametry umieszczone przez Ciebie w inputach.   Zadanie: Żonglujemy danymi pomiędzy endpointami Napisz kod obsługujący formularz zgodnie z wskazówkami z tego submodułu, a następnie wyślij swój kod na repozytorium oraz przekaż go do sprawdzenia mentorowi.  Podgląd zadania  https://github.com/martinproxy0/Zadanie_17_4.git   Wyslij link 17.5. Middleware - pośrednik między żądaniem a odpowiedzią",
    "fork": false,
    "created_at": "2018-01-26T19:03:05Z",
    "updated_at": "2018-01-26T19:03:38Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 13038633,
    "owner_login": "martinproxy0",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/13038633?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "data",
      "request",
      "form",
      "file",
      "application",
      "server",
      "call",
      "node",
      "json",
      "http",
      "user",
      "develop",
      "express",
      "auto",
      "example",
      "automat",
      "implement",
      "format",
      " express",
      "auth",
      "endpoint",
      "framework",
      "route",
      "https",
      "function",
      "demo",
      "send",
      "local",
      "list",
      "star",
      "source",
      "read",
      "front",
      "update",
      "response",
      "stat",
      "host",
      "start",
      "delete",
      "face",
      "package",
      "method",
      "info",
      "developer",
      "system",
      "name",
      "html",
      "action",
      "module",
      "program",
      "infor",
      "github",
      "model",
      "tech",
      "esse",
      "text",
      "getpost",
      "problem",
      "install",
      "parse",
      "link",
      "proxy",
      "folder",
      "status",
      "require",
      "middleware",
      "parser",
      "console",
      "intern",
      "note",
      "popular",
      "party",
      "write",
      "query",
      "sets",
      "updated",
      "dynamic",
      "modules",
      "routing",
      "role",
      "world",
      "address",
      "dependencies",
      "found",
      "error",
      "internal",
      "listen",
      "jest",
      "kurs",
      "rake",
      "ekspresowe",
      "kazan",
      "wars"
    ]
  },
  {
    "id": 229710724,
    "name": "document_to_postman",
    "full_name": "aJoyChiu/document_to_postman",
    "description": "Import repository's document to Postman",
    "fork": false,
    "created_at": "2019-12-23T08:33:57Z",
    "updated_at": "2020-01-31T09:23:46Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 46703685,
    "owner_login": "aJoyChiu",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/46703685?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "document"
    ]
  },
  {
    "id": 166232472,
    "name": "JavaEntityFrameworkFromDatabaseToPostMan",
    "full_name": "BahgatMashaly/JavaEntityFrameworkFromDatabaseToPostMan",
    "description": "Auto generate  model, repository, service, controller and postman file ",
    "fork": false,
    "created_at": "2019-01-17T13:43:04Z",
    "updated_at": "2019-01-21T07:37:39Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6259704,
    "owner_login": "BahgatMashaly",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/6259704?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "repo",
      "file",
      "repos",
      "repository",
      "service",
      "generate",
      "model",
      "control",
      "controller"
    ]
  },
  {
    "id": 174263023,
    "name": "postman-newman-circleci",
    "full_name": "jordanahaines/postman-newman-circleci",
    "description": "Companion repo for a post on how to use Newmand and CircleCI to schedule automated tests for requests defined in Postman",
    "fork": false,
    "created_at": "2019-03-07T03:14:56Z",
    "updated_at": "2019-03-07T03:14:59Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 6641613,
    "owner_login": "jordanahaines",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/6641613?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "request",
      "tests",
      "tests ",
      "requests",
      "auto",
      "automat",
      "automate",
      "automated",
      "define",
      "schedule"
    ]
  },
  {
    "id": 201448699,
    "name": "azurepipeline",
    "full_name": "arthuroz/azurepipeline",
    "description": "A postman collection that automate the creation of a repository, build pipeline and release pipeline",
    "fork": false,
    "created_at": "2019-08-09T10:45:31Z",
    "updated_at": "2020-01-02T13:35:54Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 1,
    "watchers": 1,
    "score": 1,
    "owner_id": 978866,
    "owner_login": "arthuroz",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/978866?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "auto",
      "automat",
      "line",
      "build",
      "automate",
      "creation",
      "pipeline",
      "release"
    ]
  },
  {
    "id": 215697817,
    "name": "concourceCI-newman-slack",
    "full_name": "karthick-git/concourceCI-newman-slack",
    "description": "This is an API automation framework built using Postman's Newman CLI (Docker image) integrated with Concourse (a CI tool) for continuous testing and automatic slack reporting feature.",
    "fork": false,
    "created_at": "2019-10-17T03:43:24Z",
    "updated_at": "2020-03-12T05:37:22Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 48290922,
    "owner_login": "karthick-git",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/48290922?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "tool",
      "auto",
      "automat",
      "framework",
      "built",
      "course",
      "image",
      "automation",
      "report",
      "feature",
      "integrate",
      "automatic",
      "integrated",
      "continuous",
      "slack",
      "reporting"
    ]
  },
  {
    "id": 249643006,
    "name": "Newman-Framework-Node-App",
    "full_name": "karthick-git/Newman-Framework-Node-App",
    "description": "This repository contains an API automation framework project. It's built with Postman's newman CLI as core. It's bundled with the node dependencies and can be deployed directly in PCF.",
    "fork": false,
    "created_at": "2020-03-24T07:41:00Z",
    "updated_at": "2020-03-24T08:28:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 48290922,
    "owner_login": "karthick-git",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/48290922?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "node",
      "auto",
      "automat",
      "newman",
      "contain",
      "framework",
      "built",
      "automation",
      "deployed",
      "directly",
      "core",
      "dependencies",
      "bundled",
      "bundle"
    ]
  },
  {
    "id": 99124287,
    "name": "postman-gmail-extension",
    "full_name": "WPPlugins/postman-gmail-extension",
    "description": "This is a mirror of the svn repo: https://plugins.svn.wordpress.org/postman-gmail-extension/, the master is always the latest release.",
    "fork": false,
    "created_at": "2017-08-02T14:16:01Z",
    "updated_at": "2017-08-02T14:16:15Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 17740254,
    "owner_login": "WPPlugins",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/17740254?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "http",
      "mail",
      "https",
      "extension",
      "plugin",
      "latest",
      "master",
      "release",
      "always",
      "mirror",
      "wordpress"
    ]
  },
  {
    "id": 87177871,
    "name": "Cucumber_MailTestReports",
    "full_name": "Harini-Gnanasekaran/Cucumber_MailTestReports",
    "description": "Sample project to explain the usage of Postman Plugin, that helps to automatically send test report mail on every run of test build",
    "fork": false,
    "created_at": "2017-04-04T11:18:35Z",
    "updated_at": "2018-06-13T10:59:00Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 25296487,
    "owner_login": "Harini-Gnanasekaran",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/25296487?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "call",
      "auto",
      "automat",
      "mail",
      "help",
      "build",
      "send",
      "very",
      "report",
      "ever",
      "automatic",
      "automatically",
      "helps",
      "plain",
      "explain",
      "every"
    ]
  },
  {
    "id": 106513321,
    "name": "gradle-postman-example",
    "full_name": "daggerok/gradle-postman-example",
    "description": "This repository contains example how to execute postman collection tests using gradle (newman npm package). Add functionality to collect all html reports into single one",
    "fork": false,
    "created_at": "2017-10-11T06:17:53Z",
    "updated_at": "2019-01-21T22:32:14Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 2445604,
    "owner_login": "daggerok",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/2445604?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "tests",
      "tests ",
      "example",
      "newman",
      "contain",
      "function",
      "functional",
      "package",
      "html",
      "report",
      "functionality",
      "single",
      "execute",
      "reports",
      "gradle"
    ]
  },
  {
    "id": 169748837,
    "name": "Node-Simple-API-CURD",
    "full_name": "cheran2017/Node-Simple-API-CURD",
    "description": "This repository is contains a simple codes for the CURD operation using API .(u can test it with postman) ",
    "fork": false,
    "created_at": "2019-02-08T14:42:37Z",
    "updated_at": "2019-02-08T14:51:51Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 25399522,
    "owner_login": "cheran2017",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/25399522?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "repo",
      "repos",
      "repository",
      "code",
      "contain",
      "operation",
      "codes"
    ]
  },
  {
    "id": 236575420,
    "name": "wpx17-node-2-lecture",
    "full_name": "ackentdev/wpx17-node-2-lecture",
    "description": "This is a repo built to show how to create a basic RESTful server and run tests on postman for a bootcamp",
    "fork": false,
    "created_at": "2020-01-27T19:31:56Z",
    "updated_at": "2020-01-27T19:34:17Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 49373960,
    "owner_login": "ackentdev",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/49373960?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "repo",
      "tests",
      "server",
      "tests ",
      "built",
      "boot",
      "bootcamp"
    ]
  },
  {
    "id": 162320269,
    "name": "microsoft-graph-bookings-apis",
    "full_name": "bhanukandregula/microsoft-graph-bookings-apis",
    "description": "Microsoft Bookings is for small and mid scale industries for managing appointments from the customers. This repo will give you a flexibility to use all the possible APIs that comes with Microsoft Bookings with NODE JS. It also consists of the Postman collection to give a quick try and understand its insights. ",
    "fork": false,
    "created_at": "2018-12-18T17:01:21Z",
    "updated_at": "2018-12-18T19:22:56Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22626647,
    "owner_login": "bhanukandregula",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/22626647?v=4",
    "pulled": 1,
    "tags": [
      "collect",
      "collection",
      "repo",
      "custom",
      "small",
      "under",
      "customer",
      "customers",
      "managing",
      "consist",
      "insight"
    ]
  },
  {
    "id": 142260023,
    "name": "DotnetIasi.DemoPostman",
    "full_name": "demoPostman/DotnetIasi.DemoPostman",
    "description": "This repo contains all the necessary resources  from the DotNet Iasi group presentation about PostmanTests in CI\\CD pipelines",
    "fork": false,
    "created_at": "2018-07-25T06:54:30Z",
    "updated_at": "2018-09-24T10:52:34Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 1,
    "watchers": 0,
    "score": 1,
    "owner_id": 41668034,
    "owner_login": "demoPostman",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/41668034?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "contain",
      "line",
      "source",
      "resource",
      "resources",
      "lines",
      "pipeline",
      "group",
      "presentation",
      "necessary",
      "pipelines"
    ]
  },
  {
    "id": 195978153,
    "name": "dockerized-java-api",
    "full_name": "mixaverros88/dockerized-java-api",
    "description": "A RESTful API with JAX-RS. This repo containes one dockerfile in order to spin up a container.",
    "fork": false,
    "created_at": "2019-07-09T09:33:30Z",
    "updated_at": "2020-02-22T16:00:47Z",
    "stargazers_count": 2,
    "watchers_count": 2,
    "forks": 0,
    "watchers": 2,
    "score": 1,
    "owner_id": 11536917,
    "owner_login": "mixaverros88",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/11536917?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "file",
      "contain",
      "docker",
      "order",
      "container",
      "containes"
    ]
  },
  {
    "id": 142798122,
    "name": "Multithread-Web-Server",
    "full_name": "xzhang007/Multithread-Web-Server",
    "description": "Developed a web server in Java capable of handling HTTP requests and parsing those requests, and sending out various HTTP responses. • Handles basic user authentication and CGI which could execute concurrently using multithreading and synchronized method. And it could send binary files like images over network. • Using GitHub repository to control versions and Postman to test as well as factory design pattern.",
    "fork": false,
    "created_at": "2018-07-29T21:54:31Z",
    "updated_at": "2018-11-07T23:21:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 16105149,
    "owner_login": "xzhang007",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/16105149?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "request",
      "file",
      "repos",
      "repository",
      "server",
      "requests",
      "user",
      "sign",
      "auth",
      "files",
      "send",
      "read",
      "authentication",
      "response",
      "rent",
      "version",
      "image",
      "method",
      "control",
      "design",
      "various",
      "images",
      "responses",
      "sync",
      "handling",
      "sending",
      "those",
      "actor",
      "current",
      "network",
      "execute",
      "currently",
      "reading",
      "versions",
      "parsing",
      "capable"
    ]
  },
  {
    "id": 175274059,
    "name": "GitHubSearch",
    "full_name": "KamilWysocki1990/GitHubSearch",
    "description": "MVP||This application give u opportunity  to search through repository in GitHub resources along with data to recognize owner of repository . It can also transfer us to the place where we can check chosen repository in browser. In app is implemented method in RxJava for handle bigger data flow which can help reduce time for waiting to get data on screen. Technlogoy used : Java, RxJava2, Retrofit 2, RecyclerView, MVP, ButterKnife, Glide, CardView, LifeCycleObserver, Architecture Components, Postman.     ",
    "fork": false,
    "created_at": "2019-03-12T18:31:09Z",
    "updated_at": "2019-03-21T17:01:13Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 35812584,
    "owner_login": "KamilWysocki1990",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/35812584?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "data",
      "repos",
      "repository",
      "application",
      "server",
      "implement",
      "help",
      "source",
      "method",
      "check",
      "browser",
      "search",
      "resource",
      "long",
      "resources",
      "handle",
      "place",
      "unit",
      "along",
      "implemented",
      "unity",
      "in browser"
    ]
  },
  {
    "id": 188559312,
    "name": "IreporterReactJs",
    "full_name": "LarryKarani/IreporterReactJs",
    "description": "# iReporterApi iReporter is an application whose aim is to reduce corruption in Africa and foster economic development. It allows users to create red flags and interventions. It implents the following list of APIs.  ### Framework used The application is built using python: flask framework. >[Flask](http://flask.pocoo.org/) is a microframework for the Python programming language.   ### End points Method | Endpoint | Usage | | ---- | ---- | --------------- | |POST| `/api/v2/auth/signup` |  Register a user. | |POST| `api/v2/auth/login` | Login user.| |POST| `api/v2/auth/logout` | Logs out a user.| |POST| `api/v2/interventions` | Create a new incident. | |GET| `api/v2/interventions` | Get all the created incidents. | |GET| `api/v2/interventions/user` | Get all incident of the logged in user. | |GET| `api/v2/interventions/` | Get a single incident. | |PATCH| `api/v2/interventions//location` | Update a single incident location. | |PATCH| `api/v2/interventions//comment` | Update a single incident comment. | |PATCH| `api/v2/interventions//status` | Update a single incident status. | |DELETE| `api/v2/interventions/` | Delete a single incident. |  ## Installation 🕵 - To run on local machine git clone this project : ``` $ git clone https://github.com/larryTheGeek/iReporterApi.git ``` Copy and paste the above command in your terminal, the project will be downloaded to your local machine.  To Install python checkout: ``` https://www.python.org/ ```  - create a virtualenv and make it use python 3 using the following command. ``` $ virtualenv -p python3 env ``` - activate the virtual environment ```  $ source env/bin/activate ``` - Install Requirements ``` $ pip install -r requirements.txt ``` ### Testing - Run Test using pytest with the following command ``` $ py.test --cov=app test`  ``` you will get the test coverage report on your terminal   The app can also be tested via Postman - Run App  ``` $ python run.py ``` The app should be accessiable via : http://127.0.0.1:5000/  open postman and navigate to the API endpoints described above  ### HEROKU URL  https://ireporter-version2.herokuapp.com/api/v2/   ### Owner - Larry Karani  ### Motivation https://www.youtube.com/watch?v=wHRUDL7GKmI",
    "fork": false,
    "created_at": "2019-05-25T11:43:18Z",
    "updated_at": "2019-05-28T07:00:53Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22986772,
    "owner_login": "LarryKarani",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22986772?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "create",
      "repo",
      "application",
      "http",
      "user",
      "develop",
      "sign",
      "environment",
      "auth",
      "endpoint",
      "points",
      "tested",
      "framework",
      "https",
      "endpoints",
      "load",
      "local",
      "list",
      "source",
      "built",
      "users",
      "stat",
      "version",
      "python",
      "development",
      "command",
      "access",
      "check",
      "program",
      "report",
      "github",
      "allows",
      "open",
      "lang",
      "micro",
      "install",
      "flask",
      "login",
      "clone",
      "desc",
      "download",
      "status",
      "require",
      "following",
      "machine",
      "reporter",
      "should",
      "single",
      "location",
      "terminal",
      "heroku",
      "language",
      "coverage",
      "signup",
      "programming",
      "pytest",
      "foster",
      "youtube",
      "ireporter"
    ]
  },
  {
    "id": 162571828,
    "name": "iReporter2",
    "full_name": "bakersen/iReporter2",
    "description": "iReporter enables any/every citizen to bring any form of corruption to the notice of appropriate authorities and the general public. Users can also report on things that needs government intervention. Corruption is a huge bane to Africa’s development. African countries must develop novel and localised solutions that will curb this menace, hence the birth of iReporter.  ### Features  1. Users can create an account and log in. 2. Users can create a red-flag record (An incident linked to corruption). 3. Users can create intervention record (a call for a government agency to intervene e.g repair bad road sections, collapsed bridges, flooding e.t.c). 4. Users can edit their red-flag or intervention records. 5. Users can delete their red-flag or intervention records. 6. Users can add geolocation (Lat Long Coordinates) to their red-flag or intervention records . 7. Users can change the geolocation (Lat Long Coordinates) attached to their red-flag or intervention records . 8. Admin can change the status of a record to either under investigation, rejected (in the event of a false claim) or resolved (in the event that the claim has been investigated and resolved) .  Optional Features  1. Users can add images to their red-flag or intervention records, to support their claims. 2. Users can add videos to their red-flag or intervention records, to support their claims. 3. The application should display a Google Map with Marker showing the red-flag or intervention location. 4. The user gets real-time email notification when Admin changes the status of their record. 5. The user gets real-time SMS notification when Admin changes the status of their record.   ## Built With  * HTML, CSS, Javascript * Python, Flask APIs * Postgres SQL  ## Tools Used  * Pivotal Tracker * github * Postman * Heroku  ## Version  v1.0   ## Authors  * **Baker Sentamu**  ## iReporter Demo UI Link   ## Acknowledgments  * Andela Learning Facilitators",
    "fork": false,
    "created_at": "2018-12-20T11:41:54Z",
    "updated_at": "2019-02-14T14:26:05Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 7971499,
    "owner_login": "bakersen",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/7971499?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "form",
      "application",
      "script",
      "call",
      "user",
      "develop",
      "mail",
      "auth",
      "local",
      "stat",
      "delete",
      "email",
      "development",
      "image",
      "very",
      "play",
      "need",
      "report",
      "github",
      "ever",
      "support",
      "public",
      "edit",
      "link",
      "under",
      "showing",
      "account",
      "images",
      "solution",
      "status",
      "enable",
      "been",
      "needs",
      "enables",
      "should",
      "location",
      "event",
      "display",
      "gets",
      "things",
      "notification",
      "solutions",
      "general",
      "bridge",
      "video",
      "either",
      "bane",
      "countries",
      "section",
      "every"
    ]
  },
  {
    "id": 149984325,
    "name": "ShopifyTrialStore",
    "full_name": "ysodiqakanni/ShopifyTrialStore",
    "description": "This repository is based on a challenge by shopify to create an API for performing some basic CRUDs in a defined e-commerce style. Development still in progress. For review purpose, check the ProductsController, it's the most up to date. Language: C# ASP.net web API with 3 layer architecture Technologies: Entity Framework, Dependency Injection, SQL server, NUnit, Postman",
    "fork": false,
    "created_at": "2018-09-23T12:54:41Z",
    "updated_at": "2018-10-12T16:07:09Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22787351,
    "owner_login": "ysodiqakanni",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/22787351?v=4",
    "pulled": 1,
    "tags": [
      "create",
      "repo",
      "form",
      "repos",
      "repository",
      "server",
      "based",
      "view",
      "perform",
      "shop",
      "check",
      "review",
      "style",
      "define",
      "commerce",
      "progress",
      "still",
      "performing",
      "challenge",
      "shopify"
    ]
  },
  {
    "id": 159670446,
    "name": "QA-automation-programmer",
    "full_name": "TVoroshilova/QA-automation-programmer",
    "description": "At least 2 years experience in Testing Automation Development using known software testing tools and frameworks as Selenium, Appium, Postman, etc. ∙ Experience with Web, DB (SQL/NoSQL) and API testing – Must. ∙ Experience with working over Linux OS and public cloud environments – Must. ∙ Experience with defect tracking system (as GIT, Jira or VSTS/Azure Dev Ops) – Must. ∙ Experience in working with Docker – Advantage.We are seeking an experienced QA automation programmer that will be leading the testing automation activities for our SaaS product. ∙ The QA automation programmer will be part of an innovative team developing a challenging, cutting edge technology Web application for the e-Commerce world. ∙ Main responsibilities: Develop test plans including functional testing, end user testing, stress, performance, reliability and usability testing. o Evaluate product code according to specifications, report and track bugs and fixes. o Execute automatic tests on the product during development and pre-release stages. o Work closely with R&D and product teams on new features, system integration and performance testing as a part of a startup company stationed in Israel. o Participate in the complete development process using the agile methodology. ∙ Academic degree from a known institution.High level English – very good writing skills, fluent speech.The candidate agrees to work from Trust’s offices and not remotely from home.Salary expectations: Up to 2000 USD (Gross salary)",
    "fork": false,
    "created_at": "2018-11-29T13:27:02Z",
    "updated_at": "2018-11-29T13:27:02Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 45455770,
    "owner_login": "TVoroshilova",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/45455770?v=4",
    "pulled": 1,
    "tags": [
      "test",
      "repo",
      "testing",
      "form",
      "tests",
      "application",
      "tool",
      "tests ",
      "user",
      "develop",
      "auto",
      "code",
      "automat",
      "environment",
      "framework",
      "function",
      "spec",
      "integration",
      "star",
      "stat",
      "start",
      "tools",
      "development",
      "environments",
      "very",
      "perform",
      "functional",
      "method",
      "system",
      "automation",
      "working",
      "program",
      "report",
      "feature",
      "tech",
      "cloud",
      "complete",
      "product",
      "public",
      "features",
      "automatic",
      "specific",
      "including",
      "track",
      "software",
      "process",
      "writing",
      "remote",
      "according",
      "performance",
      "world",
      "home",
      "specification",
      "expect",
      "technology",
      "specifications",
      "agile",
      "developing",
      "during",
      "fluent",
      "skills",
      "seek",
      "degree",
      "office",
      "least",
      "release",
      "level",
      "frameworks",
      "tracking"
    ]
  },
  {
    "id": 178413776,
    "name": "PostmanToHtml_Markdown",
    "full_name": "zaycodes/PostmanToHtml_Markdown",
    "description": null,
    "fork": false,
    "created_at": "2019-03-29T13:48:47Z",
    "updated_at": "2019-10-30T11:34:44Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 22375431,
    "owner_login": "zaycodes",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/22375431?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 152533003,
    "name": "postman-newman-docker-ci",
    "full_name": "vdespa/postman-newman-docker-ci",
    "description": "Docker image with Newman 4 and the HTML reporter",
    "fork": false,
    "created_at": "2018-10-11T04:53:20Z",
    "updated_at": "2018-10-11T04:53:23Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 1197635,
    "owner_login": "vdespa",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/1197635?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "image",
      "report",
      "reporter"
    ]
  },
  {
    "id": 233629853,
    "name": "SmokeReporter",
    "full_name": "NicholasAristeidou/SmokeReporter",
    "description": "Generate a html report using a postman collection and a enviroment.",
    "fork": false,
    "created_at": "2020-01-13T15:37:30Z",
    "updated_at": "2020-01-13T15:37:33Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 40827622,
    "owner_login": "NicholasAristeidou",
    "owner_avatar_url": "https://avatars1.githubusercontent.com/u/40827622?v=4",
    "pulled": 1,
    "tags": [
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "html",
      "report",
      "enviroment"
    ]
  },
  {
    "id": 163696353,
    "name": "iex-postman-scripts",
    "full_name": "nelsonvt/iex-postman-scripts",
    "description": "(BETA) This repository contains scripts for the Postman client to check stock prices and notify users when they exceed / fall below desired values.",
    "fork": false,
    "created_at": "2018-12-31T20:41:30Z",
    "updated_at": "2018-12-31T21:42:00Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 31448347,
    "owner_login": "nelsonvt",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/31448347?v=4",
    "pulled": 1,
    "tags": [
      "repo",
      "repos",
      "repository",
      "script",
      "client",
      "user",
      "contain",
      "scripts",
      "users",
      "check",
      "notify",
      "stock",
      "below"
    ]
  },
  {
    "id": 92407511,
    "name": "LEX-API-test",
    "full_name": "kbiswakarma/LEX-API-test",
    "description": "This repository currently contains postman collection to run API tests for LEX on AWS",
    "fork": false,
    "created_at": "2017-05-25T13:44:58Z",
    "updated_at": "2017-05-25T13:44:58Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 18681284,
    "owner_login": "kbiswakarma",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/18681284?v=4",
    "pulled": 1,
    "tags": [
      "test",
      " postman",
      "collect",
      "collection",
      "repo",
      "postman collection",
      "repos",
      "repository",
      "tests",
      "tests ",
      "contain",
      "rent",
      "current",
      "currently"
    ]
  },
  {
    "id": 168934186,
    "name": "PostmanAzure",
    "full_name": "smereczynski/PostmanAzure",
    "description": null,
    "fork": false,
    "created_at": "2019-02-03T10:38:05Z",
    "updated_at": "2019-10-26T09:07:18Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 705653,
    "owner_login": "smereczynski",
    "owner_avatar_url": "https://avatars3.githubusercontent.com/u/705653?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 244143772,
    "name": "AzureStoragePostman",
    "full_name": "shawnweisfeld/AzureStoragePostman",
    "description": null,
    "fork": false,
    "created_at": "2020-03-01T12:19:16Z",
    "updated_at": "2020-03-01T14:06:08Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 2466404,
    "owner_login": "shawnweisfeld",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/2466404?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 210271764,
    "name": "postman-azure",
    "full_name": "smll25/postman-azure",
    "description": null,
    "fork": false,
    "created_at": "2019-09-23T05:31:39Z",
    "updated_at": "2019-09-23T05:31:42Z",
    "stargazers_count": 0,
    "watchers_count": 0,
    "forks": 0,
    "watchers": 0,
    "score": 1,
    "owner_id": 28103534,
    "owner_login": "smll25",
    "owner_avatar_url": "https://avatars2.githubusercontent.com/u/28103534?v=4",
    "pulled": 1,
    "tags": []
  },
  {
    "id": 157935603,
    "name": "Azure-Postman",
    "full_name": "hhazeley/Azure-Postman",
    "description": null,
    "fork": false,
    "created_at": "2018-11-17T00:19:26Z",
    "updated_at": "2019-09-23T23:55:30Z",
    "stargazers_count": 1,
    "watchers_count": 1,
    "forks": 0,
    "watchers": 1,
    "score": 1,
    "owner_id": 22698784,
    "owner_login": "hhazeley",
    "owner_avatar_url": "https://avatars0.githubusercontent.com/u/22698784?v=4",
    "pulled": 1,
    "tags": []
  }
]